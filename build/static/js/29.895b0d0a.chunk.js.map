{"version":3,"sources":["pages/NewSale/NewCrowSales.tsx","pages/NewSale/Step_Crowsale/step_1.tsx","pages/NewSale/Step_Crowsale/step_2.tsx","pages/NewSale/Step_Crowsale/step_3.tsx","pages/NewSale/Step_Crowsale/review.tsx"],"names":["fields","Image","styled","img","Step1","handleSelectAuctionType","useAuctionState","state","style","justifyContent","gap","width","height","src","Rocket","alt","onClick","id","type","defaultChecked","htmlFor","className","Text","size","marginTop","language","CROW_SALE","Step2","addressErr","address","handleSelectToken","amountErr","amount","onInputAmount","allowance","symbol","name","balance","handleApprove","CROW_SALE_TOKEN","err","value","placeholder","required","onChange","e","target","TOKEN_AMOUNT","replace","disabled","Number","APPROVE_TOKEN","display","alignItems","TOKENINFO","TOKEN","YOUR_TOKEN_BALANCE","YOUR_TOKEN_ALLOWANCE","Step3Component","paymentCurrency","minPrice","handleChangeMinPrice","setPaymentCurrency","rate","handleSetTime","handleGetTime","timeValid","setRate","tokensPaymentInTokensSale","setTokensPaymentInTokensSale","chainId","useActiveWeb3React","PAYMENT_CURRENCY","paymentTokenCurrency","NATIVE","logo","USDC","USDT","DAI","CROW_SALE_SETTING","MIN_PRICE","pattern","inputMode","autoComplete","autoCorrect","minLength","maxLength","RATE","setTime","getTime","Review","account","startDate","startTime","endDate","endTime","AUCTION_TYPE","AUCTION_TOKEN","AUCTION_TOKEN_AMOUNT","CROWD_SALE_RATE","fullName","FUND_WALLET","PRICE_SETTING","AUCTION_START_AND_END","Date","toString","Notification","now","NewCrowSale","useState","step","setStep","auctionType","setAuctionType","setAddress","setBalance","setAllowance","setAddressErr","setAmountErr","setAmount","setName","setSymbol","setMinPrice","moment","utc","format","setStartDate","setStartTime","setEndDate","setEndTime","setTimeValid","actions","history","useHistory","isToken","useIsToken","isTokenDecimalsEighteen","useIsTokenDecimalsEighteen","approve","useApproveToken","createCrowSale","useCreateAuction","useGetToken","getBalance","getAllowance","getName","getSymbol","getDecimalPaymentCurrency","getDecimals","a","isAddress","token","tokenDecimalEighteen","Flyby","MaxUint256","call","updateTransactionPending","wait","then","res","inputRegex","test","escapeRegExp","handleSetRate","ButtonClick","valid","console","log","st","et","transactionPending","handleCreateAuction","amountNumber","toHexBigNumber","amountHex","ethers","BigNumber","from","toHexString","decimalPaymentCurrency","minPriceHex","utils","parseUnits","rateNumber","rateHex","ADDRESS_NULL","response","push","useEffect","CREATE_CROW_SALE","CONFIRM_CROW_SALE","StepCircle","percent","field"],"mappings":"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","file":"static/js/29.895b0d0a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment-timezone\";\nimport { ethers } from \"ethers\";\nimport { isAddress } from \"@ethersproject/address\";\nimport { MaxUint256 } from \"@ethersproject/constants\";\n\nimport { useGetToken } from \"../../hooks\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { MARKET_ADDRESS as Flyby } from \"../../constants\";\nimport { useIsToken, useIsTokenDecimalsEighteen } from \"../../hooks\";\nimport { useApproveToken } from \"../../hooks/useAppoveToken\";\nimport { escapeRegExp } from \"../../utils\";\nimport { useCreateAuction } from \"../../hooks/useCreateAuction\";\nimport { useAuctionState } from \"../../store\";\nimport { toHexBigNumber } from \"../../utils\";\nimport { ADDRESS_NULL } from \"../../constants\";\nimport { inputRegex } from \"../../utils\";\nimport StepCircle from \"../../components/StepCircle\";\nimport Flybylogo from \"../FlybyLogo\";\nimport {\n    Wrapper,\n    Title,\n    ButtonPrevious,\n    ButtonNext,\n    RowBetween,\n} from \"./styled\";\n\nimport { paymentTokenCurrency } from \"../../constants\";\nimport Step1 from \"./Step_Crowsale/step_1\";\nimport Step2 from \"./Step_Crowsale/step_2\";\nimport Step3 from \"./Step_Crowsale/step_3\";\nimport Review from \"./Step_Crowsale/review\";\n\nexport enum fields {\n    startDate = \"startDate\",\n    startTime = \"startTime\",\n    endDate = \"endDate\",\n    endTime = \"endTime\",\n}\n\nconst now = new Date();\n\nconst NewCrowSale = () => {\n    const [step, setStep] = useState(1);\n    const [auctionType, setAuctionType] = useState(\"crowdsale\");\n    const { account }: any = useActiveWeb3React();\n    const [address, setAddress] = useState(\"\");\n    const [balance, setBalance] = useState(0);\n    const [allowance, setAllowance] = useState(0);\n    const [addressErr, setAddressErr] = useState(\"\");\n    const [amountErr, setAmountErr] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [symbol, setSymbol] = useState(\"\");\n    const [paymentCurrency, setPaymentCurrency] = useState(\"\");\n    const [minPrice, setMinPrice] = useState(\"\");\n    const [rate, setRate]: any = useState(\"\");\n    const [startDate, setStartDate] = useState(\n        moment.utc(now.getTime() + 172800000).format(\"YYYY-MM-DD\")\n    );\n    const [startTime, setStartTime] = useState(\"00:00:00\");\n    const [endDate, setEndDate] = useState(\n        moment.utc(now.getTime() + 777600000).format(\"YYYY-MM-DD\")\n    );\n    const [endTime, setEndTime] = useState(\"00:00:00\");\n    const [timeValid, setTimeValid] = useState(\"\");\n    const [state, actions] = useAuctionState();\n    const [\n        tokensPaymentInTokensSale,\n        setTokensPaymentInTokensSale,\n    ]: any = useState(\"\");\n\n    const history = useHistory();\n\n    const isToken = useIsToken();\n    const isTokenDecimalsEighteen = useIsTokenDecimalsEighteen();\n    const approve = useApproveToken();\n    const { createCrowSale } = useCreateAuction();\n    const { getBalance, getAllowance, getName, getSymbol } = useGetToken(\n        address,\n        account\n    );\n    const { chainId }: any = useActiveWeb3React();\n    const getDecimalPaymentCurrency = useGetToken(paymentCurrency, account)\n        .getDecimals;\n\n    const handleSelectAuctionType = (type: string) => {\n        setAuctionType(type);\n    };\n\n    const onInputAmount = (value: string) => {\n        if (value === \"\" || inputRegex.test(escapeRegExp(value))) {\n            if (Number(value) <= balance) {\n                setAmount(value);\n                setAmountErr(\"\");\n            } else setAmountErr(\"Insufficient Balance\");\n        } else setAmountErr(\"Input number\");\n    };\n\n    const handleSelectToken = async (address: string) => {\n        if (isAddress(address)) {\n            const token = await isToken(address);\n            const tokenDecimalEighteen = await isTokenDecimalsEighteen(address);\n            if (token) {\n                if (tokenDecimalEighteen) {\n                    setAddress(address);\n                    setAddressErr(\"\");\n                } else setAddressErr(\"Token is not decimals 18\");\n            } else setAddressErr(\"Token not found\");\n        } else setAddressErr(\"Invalid address\");\n    };\n\n    const handleApprove = async () => {\n        const call = await approve(address, Flyby[chainId], MaxUint256);\n        await actions.updateTransactionPending(true);\n        await call.wait();\n        actions.updateTransactionPending(false);\n        getAllowance(Flyby[chainId]).then((res: any) => {\n            setAllowance(res);\n        });\n    };\n\n    const handleChangeMinPrice = async (value: string) => {\n        if (value === \"\" || inputRegex.test(escapeRegExp(value))) {\n            setMinPrice(value);\n        }\n    };\n\n    const handleSetRate = async (value: string) => {\n        if (value === \"\" || inputRegex.test(escapeRegExp(value))) {\n            setRate(value);\n        }\n    };\n\n    const handleSetTime = (value: string, field: any) => {\n        if (field === fields.startDate) {\n            setStartDate(value);\n        }\n        if (field === fields.startTime) {\n            setStartTime(value);\n        }\n        if (field === fields.endDate) {\n            setEndDate(value);\n        }\n        if (field === fields.endTime) {\n            setEndTime(value);\n        }\n    };\n\n    const handleGetTime = (field: any) => {\n        if (field === fields.startDate) {\n            return startDate;\n        }\n        if (field === fields.startTime) {\n            return startTime;\n        }\n        if (field === fields.endDate) {\n            return endDate;\n        }\n        if (field === fields.endTime) {\n            return endTime;\n        }\n        return;\n    };\n\n    const ButtonClick = () => {\n        let valid = false;\n        if (step === 1 && !auctionType) {\n            valid = true;\n        }\n        if (\n            step === 2 &&\n            (!address || !amount || allowance === 0 || Number(amount) === 0)\n        ) {\n            valid = true;\n        }\n        if (step === 3) {\n            if (\n                auctionType === \"crowdsale\" &&\n                (!paymentCurrency ||\n                    !minPrice ||\n                    !rate ||\n                    Number(minPrice) > Number(amount) * Number(rate))\n            ) {\n                valid = true;\n                console.log(\"aa\");\n            }\n\n            const st = new Date(`${startDate} ${startTime}`).getTime() / 1000;\n            const et = new Date(`${endDate} ${endTime}`).getTime() / 1000;\n\n            if (Number(minPrice) > Number(amount) * Number(rate)) {\n                setTimeValid(\"Amount of FBS and \");\n            }\n\n            if (\n                Number(st) >= Number(et) ||\n                Number(st) <= Number(now.getTime()) / 1000\n            ) {\n                setTimeValid(\"Please check your setting time\");\n                valid = true;\n            } else {\n                setTimeValid(\"\");\n            }\n        }\n        if (state.transactionPending) {\n            valid = true;\n        }\n        console.log(\n            Number(minPrice),\n            Number(amount) * Number(rate),\n            Number(minPrice) > Number(amount) * Number(rate)\n        );\n        return (\n            <>\n                <ButtonNext\n                    disabled={valid}\n                    onClick={() => {\n                        if (step < 4) setStep(step + 1);\n                        if (step === 4 && valid === false)\n                            handleCreateAuction();\n                    }}\n                >\n                    {step === 4 ? \"DEPLOY\" : step === 3 ? \"REVIEW\" : \"NEXT\"}\n                </ButtonNext>\n            </>\n        );\n    };\n\n    const handleCreateAuction = async () => {\n        if (auctionType === \"crowdsale\") {\n            const amountNumber = toHexBigNumber(amount, 18);\n            const amountHex = ethers.BigNumber.from(\n                amountNumber.toString()\n            ).toHexString();\n\n            const decimalPaymentCurrency =\n                paymentCurrency === paymentTokenCurrency.NATIVE.address[chainId]\n                    ? 18\n                    : await getDecimalPaymentCurrency();\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const minPriceNumber = toHexBigNumber(\n                minPrice,\n                decimalPaymentCurrency\n            );\n            const minPriceHex = ethers.utils.parseUnits(\n                rate,\n                decimalPaymentCurrency\n            );\n\n            const rateNumber = toHexBigNumber(rate, 18);\n            const rateHex = ethers.BigNumber.from(\n                rateNumber.toString()\n            ).toHexString();\n\n            const response = await createCrowSale(1, address, amountHex, [\n                Flyby[chainId],\n                address,\n                paymentCurrency,\n                amountHex,\n                new Date(`${startDate} ${startTime}`).getTime() / 1000,\n                new Date(`${endDate} ${endTime}`).getTime() / 1000,\n                rateHex,\n                minPriceHex,\n                account,\n                ADDRESS_NULL,\n                account,\n            ]);\n            if (response) history.push(`/auctions/${response}`);\n            return response;\n        }\n        return;\n    };\n\n    useEffect(() => {\n        if (address) {\n            getBalance().then((res: any) => {\n                setBalance(res);\n            });\n            getAllowance(Flyby[chainId]).then((res: any) => {\n                setAllowance(res);\n            });\n            getName().then((res: any) => {\n                setName(res);\n            });\n            getSymbol().then((res: any) => {\n                setSymbol(res);\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [address, getAllowance, getBalance, getName, getSymbol, allowance]);\n\n    return (\n        <Wrapper>\n            <Flybylogo />\n            {step !== 4 ? (\n                <Title>{state.language?.CREATE_CROW_SALE}</Title>\n            ) : (\n                <Title>{state.language?.CONFIRM_CROW_SALE}</Title>\n            )}\n            <StepCircle percent={step} />\n            {step === 1 ? (\n                <>\n                    <Step1 handleSelectAuctionType={handleSelectAuctionType} />\n                </>\n            ) : step === 2 ? (\n                <>\n                    <Step2\n                        addressErr={addressErr}\n                        address={address}\n                        handleSelectToken={handleSelectToken}\n                        amountErr={amountErr}\n                        amount={amount}\n                        onInputAmount={onInputAmount}\n                        allowance={allowance}\n                        symbol={symbol}\n                        name={name}\n                        balance={balance}\n                        handleApprove={handleApprove}\n                    />\n                </>\n            ) : step === 3 ? (\n                <>\n                    <Step3\n                        paymentCurrency={paymentCurrency}\n                        minPrice={minPrice}\n                        handleChangeMinPrice={handleChangeMinPrice}\n                        setPaymentCurrency={setPaymentCurrency}\n                        rate={rate}\n                        handleSetTime={handleSetTime}\n                        handleGetTime={handleGetTime}\n                        timeValid={timeValid}\n                        setRate={handleSetRate}\n                        tokensPaymentInTokensSale={tokensPaymentInTokensSale}\n                        setTokensPaymentInTokensSale={\n                            setTokensPaymentInTokensSale\n                        }\n                        symbol={symbol}\n                        amount={amount}\n                    />\n                </>\n            ) : (\n                <>\n                    <Review\n                        name={name}\n                        address={address}\n                        symbol={symbol}\n                        amount={amount}\n                        rate={rate}\n                        paymentCurrency={paymentCurrency}\n                        account={account}\n                        minPrice={minPrice}\n                        startDate={startDate}\n                        startTime={startTime}\n                        endDate={endDate}\n                        endTime={endTime}\n                    />\n                </>\n            )}\n\n            <RowBetween className=\"button-group\">\n                <ButtonPrevious\n                    disabled={step === 1 ? true : false}\n                    onClick={() => {\n                        if (step > 1) setStep(step - 1);\n                    }}\n                >\n                    PREVIOUS\n                </ButtonPrevious>\n                <ButtonClick />\n            </RowBetween>\n        </Wrapper>\n    );\n};\n\nexport default NewCrowSale;\n","import React from 'react'\n\nimport Text from '../../../components/Text'\nimport Rocket from '../../../assets/images/rocket-small.png'\nimport { useAuctionState } from '../../../store'\nimport {\n    RowBetween,\n    AuctionType,\n    Row,\n    Radio,\n    LabelRadio,\n    CheckRadio\n} from '../styled'\nimport styled from 'styled-components'\n\nconst Step1 = ({ handleSelectAuctionType }: { handleSelectAuctionType: any }) => {\n\n    const [state] = useAuctionState()\n\n    return (\n        <>\n            {/* <Text size=\"2rem\">{state.language?.AUCTION_TYPE}*</Text> */}\n            <RowBetween style={{ justifyContent: 'center' }} gap=\"10%\">\n                <AuctionType>\n                <Image width=\"149\" height=\"204\" src={Rocket} alt=\"batch auction icon\" />\n                    <Row onClick={() => handleSelectAuctionType('crowdsale')} >\n                        <Radio id=\"crowdsale-option\" type=\"radio\" defaultChecked />\n                        <LabelRadio htmlFor=\"crowdsale-option\"></LabelRadio>\n                        <CheckRadio className='check'></CheckRadio>\n                        <Text size=\"1.2rem\" style={{ marginTop: 0 }}>{state.language?.CROW_SALE}</Text>\n                    </Row>\n                    {/* <Text size=\".8rem\">{state.language?.CROWDSALE_DESCRIPTION_1}</Text> */}\n                    {/* <Text style={{ fontStyle: \"italic\" }} size=\".8rem\">{state.language?.CROWDSALE_DESCRIPTION_2}</Text> */}\n                </AuctionType>\n            </RowBetween>\n        </>\n    )\n}\n\nconst Image = styled.img`\n    max-width: 60px;\n    max-height: 80px;\n    width: 100%!important;\n    height: 100%!important;\n`;\n\nexport default Step1\n","import React from 'react'\n\nimport { useAuctionState } from '../../../store'\nimport Text from '../../../components/Text'\nimport {\n    AuctionToken,\n    AuctionTokenSetting,\n    SelectToken,\n    WrapperText,\n    Row,\n    TextErr,\n    Amount,\n    ButtonApprove\n} from '../styled'\n\nconst Step2 = ({ addressErr, address, handleSelectToken, amountErr, amount, onInputAmount, allowance, symbol, name, balance, handleApprove }: { addressErr: any, address: any, handleSelectToken: any, amountErr: any, amount: any, onInputAmount: any, allowance: any, symbol: any, name: any, balance: any, handleApprove: any }) => {\n\n    const [state] = useAuctionState()\n\n    return (\n        <>\n            <AuctionToken>\n                <AuctionTokenSetting>\n                    <Text size=\"2rem\">{state.language?.CROW_SALE_TOKEN}</Text>\n                    <SelectToken err={addressErr ? true : false} type=\"text\" value={address} placeholder=\"Paste the address of token you would like to crow sale\" required onChange={(e) => { handleSelectToken(e.target.value) }} />\n                    {addressErr ? <TextErr>{addressErr}</TextErr> : ''}\n                    <Text size=\"2rem\">{state.language?.TOKEN_AMOUNT}</Text>\n                    <Amount value={amount} onChange={(e) => onInputAmount(e.target.value.replace(/,/g, \".\"))} disabled={addressErr || !address ? true : false} type=\"text\" placeholder={`0.000000 ${symbol}`} required />\n                    {amountErr ? <TextErr>{amountErr}</TextErr> : ''}\n                    {amount && Number(amount) > allowance ? <ButtonApprove onClick={handleApprove}>{state.language?.APPROVE_TOKEN}</ButtonApprove> : <></>}\n                </AuctionTokenSetting>\n                <AuctionTokenSetting style={{ display: 'flex', alignItems: 'center' }}>\n                    <WrapperText>\n                        <Text>{state.language?.TOKENINFO}</Text>\n                        {address ?\n                            <Row>\n                                <Text>{state.language?.TOKEN}: </Text>\n                                <Text>{name} ( {symbol} )</Text>\n                            </Row>\n                            :\n                            \"\"\n                        }\n                        <Row>\n                            <Text>{state.language?.YOUR_TOKEN_BALANCE}: </Text>\n                            <Text>{balance}</Text>\n                        </Row>\n                        <Row>\n                            <Text>{state.language?.YOUR_TOKEN_ALLOWANCE}: </Text>\n                            <Text>{allowance}</Text>\n                        </Row>\n                    </WrapperText>\n                </AuctionTokenSetting>\n            </AuctionToken>\n        </>\n    )\n}\n\nexport default Step2\n","import React from 'react'\n\nimport Text from '../../../components/Text'\nimport DataTime from '../../../components/DateTime'\nimport { paymentTokenCurrency } from '../../../constants'\nimport { useAuctionState } from '../../../store'\nimport {\n    Step3Wraper,\n    Step3,\n    WrapperPaymentCurrency,\n    CoinSelect,\n    Img,\n    Space,\n    MinPrice,\n    TextErr\n} from '../styled'\nimport { useActiveWeb3React } from '../../../hooks/index';\n\nconst Step3Component = ({ paymentCurrency, minPrice, handleChangeMinPrice, setPaymentCurrency, rate, handleSetTime, handleGetTime, timeValid, setRate, tokensPaymentInTokensSale, setTokensPaymentInTokensSale, symbol, amount }: { paymentCurrency: any, minPrice: any, handleChangeMinPrice: any, setPaymentCurrency: any, rate: any, handleSetTime: any, handleGetTime: any, timeValid: any, setRate: any, tokensPaymentInTokensSale: any, setTokensPaymentInTokensSale: any, symbol: any, amount: any }) => {\n\n    const [state] = useAuctionState()\n    const { chainId }: any = useActiveWeb3React();\n\n    return (\n        <>\n            <Step3Wraper>\n                <Step3 className=\"left\">\n                    <Text size=\"2rem\">{state.language?.PAYMENT_CURRENCY}</Text>\n                    <WrapperPaymentCurrency>\n                        <CoinSelect className={paymentCurrency === paymentTokenCurrency.NATIVE.address[chainId] ? 'active' : ''} onClick={() => setPaymentCurrency(paymentTokenCurrency.NATIVE.address[chainId])}><Img src={paymentTokenCurrency.NATIVE.logo[chainId]} />&nbsp;&nbsp;{paymentTokenCurrency.NATIVE.symbol[chainId]}</CoinSelect>\n                        <CoinSelect className={paymentCurrency === paymentTokenCurrency.USDC.address[chainId] ? 'active' : ''} onClick={() => setPaymentCurrency(paymentTokenCurrency.USDC.address[chainId])}><Img src={paymentTokenCurrency.USDC.logo[chainId]} />&nbsp;&nbsp;{paymentTokenCurrency.USDC.symbol[chainId]}</CoinSelect>\n                        <CoinSelect className={paymentCurrency === paymentTokenCurrency.USDT.address[chainId] ? 'active' : ''} onClick={() => setPaymentCurrency(paymentTokenCurrency.USDT.address[chainId])}><Img src={paymentTokenCurrency.USDT.logo[chainId]} />&nbsp;&nbsp;{paymentTokenCurrency.USDT.symbol[chainId]}</CoinSelect>\n                        <CoinSelect className={paymentCurrency === paymentTokenCurrency.DAI.address[chainId] ? 'active' : ''} onClick={() => setPaymentCurrency(paymentTokenCurrency.DAI.address[chainId])}><Img src={paymentTokenCurrency.DAI.logo[chainId]} />&nbsp;&nbsp;{paymentTokenCurrency.DAI.symbol[chainId]}</CoinSelect>\n                    </WrapperPaymentCurrency>\n                    <Space />\n                </Step3>\n                <Step3 className='right'>\n                    <Space />\n                    <Text size=\"2rem\">{state.language?.CROW_SALE_SETTING}</Text>\n                    <Text size=\"1rem\">{state.language?.MIN_PRICE}</Text>\n                    <MinPrice\n                        type=\"text\"\n                        placeholder={`0.000000 ${paymentCurrency === paymentTokenCurrency.NATIVE.address[chainId] ? paymentTokenCurrency.NATIVE.symbol[chainId] : paymentCurrency === paymentTokenCurrency.USDC.address[chainId] ? 'USDC' : paymentCurrency === paymentTokenCurrency.USDT.address[chainId] ? 'USDT' : 'DAI'}`}\n                        value={minPrice}\n                        onChange={(e) => { handleChangeMinPrice(e.target.value.replace(/,/g, \".\")) }}\n                        pattern='^[0-9]*[.,]?[0-9]*$' inputMode='decimal' autoComplete='off'\n                        autoCorrect='off'\n                        minLength={1}\n                        maxLength={79}\n                    />\n                    <Space />\n                    <Text size=\"1rem\">{state.language?.RATE}</Text>\n                    <MinPrice\n                        type=\"text\"\n                        placeholder='Number of token units a buyer gets per wei or token'\n                        value={rate}\n                        pattern='^[0-9]*[.,]?[0-9]*$' inputMode='decimal' autoComplete='off'\n                        autoCorrect='off'\n                        minLength={1}\n                        maxLength={79}\n                        onChange={(e) => {\n                            setRate(e.target.value.replace(/,/g, \".\")) \n                        }}\n                    />\n                    <Space />\n                    {\n                        (rate && Number(rate) !== 0) ? <p>{`Your token will have a ratio of 1 ${paymentCurrency === paymentTokenCurrency.NATIVE.address[chainId] ? paymentTokenCurrency.NATIVE.symbol[chainId] : paymentCurrency === paymentTokenCurrency.USDC.address[chainId] ? 'USDC' : paymentCurrency === paymentTokenCurrency.USDT.address[chainId] ? 'USDT' : 'DAI'} for ${1/ rate} ${symbol}`}</p>\n                        : <></>\n                    }\n                    <Space />\n                    <DataTime\n                        setTime={handleSetTime}\n                        getTime={handleGetTime}\n                    />\n                    {timeValid ? <TextErr>{timeValid}</TextErr> : <></>}\n                </Step3>\n            </Step3Wraper>\n        </>\n    )\n}\n\nexport default Step3Component\n","import React from 'react'\n\nimport Notification from '../../../components/Notification';\nimport { useAuctionState } from '../../../store'\nimport { paymentTokenCurrency } from '../../../constants'\nimport { useActiveWeb3React } from '../../../hooks/index';\nimport {\n    WrapperPreview,\n    WrapperInside,\n    SetupType,\n    TitleTypeAuction,\n    ValueTypeAuction\n} from '../styled'\n\nconst Review = ({name, address, symbol, amount, rate, paymentCurrency, account, minPrice, startDate, startTime, endDate, endTime}: {name: any, address: any, symbol: any, amount: any, rate: any, paymentCurrency: any, account: any, minPrice: any, startDate: any, startTime: any, endDate: any, endTime: any}) => {\n\n    const [state] = useAuctionState()\n    const { chainId }: any = useActiveWeb3React()\n\n    return (\n        <>\n            <WrapperPreview>\n                <WrapperInside>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.AUCTION_TYPE}</TitleTypeAuction>\n                        <ValueTypeAuction>{state.language?.CROW_SALE}</ValueTypeAuction>\n                    </SetupType>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.AUCTION_TOKEN}</TitleTypeAuction>\n                        <ValueTypeAuction>{address}</ValueTypeAuction>\n                        <ValueTypeAuction>{name} ({symbol})</ValueTypeAuction>\n                    </SetupType>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.AUCTION_TOKEN_AMOUNT}</TitleTypeAuction>\n                        <ValueTypeAuction>{amount}</ValueTypeAuction>\n                    </SetupType>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.CROWD_SALE_RATE}</TitleTypeAuction>\n                        <ValueTypeAuction>{rate}</ValueTypeAuction>\n                    </SetupType>\n                    <SetupType>\n                        <ValueTypeAuction>{`Your token will have a ratio of 1 ${paymentCurrency === paymentTokenCurrency.NATIVE.address[chainId] ? paymentTokenCurrency.NATIVE.symbol[chainId] : paymentCurrency === paymentTokenCurrency.USDC.address[chainId] ? 'USDC' : paymentCurrency === paymentTokenCurrency.USDT.address[chainId] ? 'USDT' : 'DAI'} for ${1/ rate} ${symbol}`}</ValueTypeAuction>\n                    </SetupType>\n                </WrapperInside>\n                <WrapperInside>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.PAYMENT_CURRENCY}</TitleTypeAuction>\n                        <ValueTypeAuction>{paymentCurrency === paymentTokenCurrency.NATIVE.address[chainId] ? paymentTokenCurrency.NATIVE.fullName[chainId] : paymentCurrency === paymentTokenCurrency.USDT.address[chainId] ? 'Tether (USDT)' : paymentCurrency === paymentTokenCurrency.USDC.address[chainId] ? \"USD Coin (USDC)\" : \"Dai (DAI)\"}</ValueTypeAuction>\n                    </SetupType>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.FUND_WALLET}</TitleTypeAuction>\n                        <ValueTypeAuction>{account}</ValueTypeAuction>\n                    </SetupType>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.PRICE_SETTING}</TitleTypeAuction>\n                        <ValueTypeAuction>{state.language?.MIN_PRICE}</ValueTypeAuction>\n                        <ValueTypeAuction>{minPrice} {paymentCurrency === paymentTokenCurrency.NATIVE.address[chainId] ? paymentTokenCurrency.NATIVE.symbol[chainId] : paymentCurrency === paymentTokenCurrency.USDT.address[chainId] ? 'USDT' : paymentCurrency === paymentTokenCurrency.USDC.address[chainId] ? \"USDC\" : \"DAI\"}</ValueTypeAuction>\n                    </SetupType>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.AUCTION_START_AND_END}</TitleTypeAuction>\n                        <ValueTypeAuction>{new Date(`${startDate} ${startTime}`).toString()}</ValueTypeAuction>\n                        <ValueTypeAuction>{new Date(`${endDate} ${endTime}`).toString()}</ValueTypeAuction>\n                    </SetupType>\n                </WrapperInside>\n                <Notification />\n            </WrapperPreview>\n        </>\n    )\n}\n\nexport default Review\n"],"sourceRoot":""}