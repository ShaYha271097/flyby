{"version":3,"sources":["pages/NewSale/NewPrivateSale.tsx","pages/NewSale/Step_Privatesale/step_1.tsx","pages/NewSale/Step_Privatesale/step_2.tsx","pages/NewSale/Step_Privatesale/step_3.tsx","pages/NewSale/Step_Privatesale/review.tsx"],"names":["fields","Image","styled","img","Step1","handleSelectAuctionType","useAuctionState","state","style","justifyContent","gap","width","height","src","Rocket","alt","onClick","id","type","defaultChecked","htmlFor","className","Text","size","marginTop","language","PRIVATE_SALE","Step2","addressErr","address","handleSelectToken","amountErr","amount","onInputAmount","allowance","symbol","name","balance","handleApprove","err","value","placeholder","required","onChange","e","target","TOKEN_AMOUNT","replace","disabled","Number","transactionPending","APPROVE_TOKEN","display","alignItems","TOKENINFO","TOKEN","YOUR_TOKEN_BALANCE","YOUR_TOKEN_ALLOWANCE","Step3Component","paymentCurrency","minPrice","handleChangeMinPrice","setPaymentCurrency","rate","handleSetTime","handleGetTime","timeValid","setRate","chainId","useActiveWeb3React","PAYMENT_CURRENCY","paymentTokenCurrency","USDC","logo","USDT","DAI","BUSD","MIN_PRICE","pattern","inputMode","autoComplete","autoCorrect","minLength","maxLength","RATE","setTime","getTime","Review","account","startDate","startTime","endDate","endTime","AUCTION_TYPE","CROW_SALE","AUCTION_TOKEN","AUCTION_TOKEN_AMOUNT","CROWD_SALE_RATE","fullName","FUND_WALLET","PRICE_SETTING","AUCTION_START_AND_END","Date","toString","Notification","now","NewPrivateSale","useState","step","setStep","auctionType","setAuctionType","setAddress","setBalance","setAllowance","setAddressErr","setAmountErr","setAmount","setName","setSymbol","setMinPrice","moment","utc","format","setStartDate","setStartTime","setEndDate","setEndTime","setTimeValid","actions","tokensPaymentInTokensSale","setTokensPaymentInTokensSale","history","useHistory","isToken","useIsToken","isTokenDecimalsEighteen","useIsTokenDecimalsEighteen","approve","useApproveToken","createCrowSale","useCreateAuction","useGetToken","getBalance","getAllowance","getName","getSymbol","getDecimalPaymentCurrency","getDecimals","a","isAddress","token","tokenDecimalEighteen","Flyby","MaxUint256","call","updateTransactionPending","wait","then","res","inputRegex","test","escapeRegExp","handleSetRate","ButtonClick","valid","console","log","st","et","handleCreateAuction","amountNumber","toHexBigNumber","amountHex","ethers","BigNumber","from","toHexString","NATIVE","decimalPaymentCurrency","minPriceNumber","minPriceHex","rateHex","utils","parseUnits","ADDRESS_NULL","response","push","useEffect","CREATE_PRIVATE_SALE","StepCircle","percent","field"],"mappings":"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","file":"static/js/30.912e48d7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport moment from 'moment-timezone'\nimport { ethers } from 'ethers'\nimport { isAddress } from '@ethersproject/address'\nimport { MaxUint256 } from '@ethersproject/constants'\n\nimport { useGetToken } from '../../hooks'\nimport { useActiveWeb3React } from '../../hooks'\nimport { MARKET_ADDRESS as Flyby } from '../../constants'\nimport { useIsToken, useIsTokenDecimalsEighteen } from '../../hooks'\nimport { useApproveToken } from '../../hooks/useAppoveToken'\nimport { escapeRegExp } from '../../utils'\nimport { useCreateAuction } from '../../hooks/useCreateAuction'\nimport { useAuctionState } from '../../store'\nimport { toHexBigNumber } from '../../utils'\nimport { ADDRESS_NULL } from '../../constants'\nimport { inputRegex } from '../../utils'\nimport StepCircle from '../../components/StepCircle'\nimport {\n    Wrapper,\n    Title,\n    ButtonPrevious,\n    ButtonNext,\n    RowBetween\n} from './styled'\n\nimport { paymentTokenCurrency } from '../../constants';\nimport Step1 from './Step_Privatesale/step_1'\nimport Step2 from './Step_Privatesale/step_2'\nimport Step3 from './Step_Privatesale/step_3'\nimport Review from './Step_Privatesale/review'\n\nexport enum fields {\n    startDate = 'startDate',\n    startTime = 'startTime',\n    endDate = 'endDate',\n    endTime = 'endTime'\n}\n\nconst now = new Date()\n\nconst NewPrivateSale = () => {\n    const [step, setStep] = useState(1);\n    const [auctionType, setAuctionType] = useState('crowdsale');\n    const { account }: any = useActiveWeb3React();\n    const [address, setAddress] = useState('');\n    const [balance, setBalance] = useState(0);\n    const [allowance, setAllowance] = useState(0);\n    const [addressErr, setAddressErr] = useState('');\n    const [amountErr, setAmountErr] = useState('');\n    const [amount, setAmount] = useState('');\n    const [name, setName] = useState('');\n    const [symbol, setSymbol] = useState('');\n    const [paymentCurrency, setPaymentCurrency] : any = useState({\n        address:''\n    });\n    const [minPrice, setMinPrice] = useState('');\n    const [rate, setRate]: any = useState('');\n    const [startDate, setStartDate] = useState(moment.utc(now.getTime() + 172800000).format('YYYY-MM-DD'));\n    const [startTime, setStartTime] = useState('00:00:00');\n    const [endDate, setEndDate] = useState(moment.utc(now.getTime() + 777600000).format('YYYY-MM-DD'));\n    const [endTime, setEndTime] = useState('00:00:00');\n    const [timeValid, setTimeValid] = useState('')\n    const [state, actions] = useAuctionState();\n    const [tokensPaymentInTokensSale, setTokensPaymentInTokensSale]: any = useState('')\n\n    const history = useHistory();\n\n    const isToken = useIsToken();\n    const isTokenDecimalsEighteen = useIsTokenDecimalsEighteen()\n    const approve = useApproveToken();\n    const { createCrowSale } = useCreateAuction();\n    const { getBalance, getAllowance, getName, getSymbol } = useGetToken(address, account);\n    const { chainId }: any = useActiveWeb3React();\n    const getDecimalPaymentCurrency =  useGetToken(paymentCurrency.address[chainId], account).getDecimals;\n\n    const handleSelectAuctionType = (type: string) => {\n        setAuctionType(type)\n    }\n\n    const onInputAmount = (value: string) => {\n        if (value === \"\" || inputRegex.test(escapeRegExp(value))) {\n            if (Number(value) <= balance) {\n                setAmount(value)\n                setAmountErr('')\n            }\n            else setAmountErr('Insufficient Balance')\n        }\n        else setAmountErr('Input number')\n    }\n\n    const handleSelectToken = async (address: string) => {\n        if (isAddress(address)) {\n            const token = await isToken(address);\n            const tokenDecimalEighteen = await isTokenDecimalsEighteen(address)\n            if (token) {\n                if (tokenDecimalEighteen){\n                    setAddress(address)\n                    setAddressErr('')\n                } else setAddressErr('Token is not decimals 18')\n            }\n            else setAddressErr('Token not found')\n        }\n        else setAddressErr('Invalid address')\n    }\n\n    const handleApprove = async () => {\n        const call = await approve(address, Flyby[chainId], MaxUint256)\n        await actions.updateTransactionPending(true)\n        await call.wait()\n        actions.updateTransactionPending(false)\n        getAllowance(Flyby[chainId]).then((res: any) => {\n            setAllowance(res)\n        })\n    }\n\n    const handleChangeMinPrice = async (value: string) => {\n        if (value === \"\" || inputRegex.test(escapeRegExp(value))) {\n            setMinPrice(value)\n        }\n    }\n\n    const handleSetRate = async(value: string) => {\n        if (value === \"\" || inputRegex.test(escapeRegExp(value))) {\n            setRate(value)\n        }\n    }\n\n    const handleSetTime = (value: string, field: any) => {\n        if (field === fields.startDate) {\n            setStartDate(value)\n        }\n        if (field === fields.startTime) {\n            setStartTime(value)\n        }\n        if (field === fields.endDate) {\n            setEndDate(value)\n        }\n        if (field === fields.endTime) {\n            setEndTime(value)\n        }\n    }\n\n    const handleGetTime = (field: any) => {\n        if (field === fields.startDate) {\n            return startDate\n        }\n        if (field === fields.startTime) {\n            return startTime\n        }\n        if (field === fields.endDate) {\n            return endDate\n        }\n        if (field === fields.endTime) {\n            return endTime\n        }\n        return\n    }\n\n    const ButtonClick = () => {\n        let valid = false\n        if (step === 1 && !auctionType) {\n            valid = true\n        }\n        if (step === 2 && (!address || !amount || allowance === 0 || Number(amount) === 0)) {\n            valid = true\n        }\n        if (step === 3) {\n            if ((auctionType === 'crowdsale') && (!paymentCurrency || !minPrice || !rate || Number(minPrice) > (Number(amount) * Number(rate)))) {\n                valid = true\n                console.log('aa')\n            }\n            \n            const st = new Date(`${startDate} ${startTime}`).getTime() / 1000\n            const et = new Date(`${endDate} ${endTime}`).getTime() / 1000\n\n            if(Number(minPrice) > (Number(amount) * Number(rate))) {\n                setTimeValid('Invalid amount token')\n            }\n\n            if (Number(st) >= Number(et) || Number(st) <= (Number(now.getTime()) / 1000)) {\n                setTimeValid('Please check your setting time')\n                valid = true\n            } else {\n                setTimeValid('')\n            }\n        }\n        if (state.transactionPending) {\n            valid = true\n        }\n        console.log( Number(minPrice), Number(amount) * Number(rate), Number(minPrice)>Number(amount) * Number(rate) )\n        return (\n            <>\n                <ButtonNext disabled={valid} onClick={() => {\n                    if (step < 4)\n                        setStep(step + 1)\n                    if (step === 4 && valid === false) handleCreateAuction()\n                }}>{step === 4 ? 'DEPLOY' : step === 3 ? 'REVIEW' : 'NEXT'}</ButtonNext>\n            </>\n        )\n    }\n\n    const handleCreateAuction = async () => {\n        if (auctionType === 'crowdsale') {\n            const amountNumber = toHexBigNumber(amount, 18)\n            const amountHex = ethers.BigNumber.from(amountNumber.toString()).toHexString()\n\n            const decimalPaymentCurrency = paymentCurrency.address[chainId] === paymentTokenCurrency.NATIVE.address[chainId] ? 18 : (await getDecimalPaymentCurrency())\n            const minPriceNumber = toHexBigNumber(minPrice, decimalPaymentCurrency)\n            const minPriceHex = ethers.BigNumber.from(minPriceNumber.toString()).toHexString()\n            const rateHex = ethers.utils.parseUnits(rate, decimalPaymentCurrency)\n            const response = await createCrowSale(\n                3,\n                address,\n                amountHex,\n                [\n                    Flyby[chainId],\n                    address,\n                    paymentCurrency.address[chainId],\n                    amountHex,\n                    new Date(`${startDate} ${startTime}`).getTime() / 1000,\n                    new Date(`${endDate} ${endTime}`).getTime() / 1000,\n                    rateHex,\n                    minPriceHex,\n                    account,\n                    ADDRESS_NULL,\n                    account\n                ]\n            )\n            if (response)\n                history.push(`/auctions/${response}`);\n            return response\n        }\n        return\n    }\n\n    useEffect(() => {\n        if (address) {\n            getBalance().then((res: any) => {\n                setBalance(res)\n            })\n            getAllowance(Flyby[chainId]).then((res: any) => {\n                setAllowance(res)\n            })\n            getName().then((res: any) => {\n                setName(res)\n            })\n            getSymbol().then((res: any) => {\n                setSymbol(res)\n            })\n        }\n\n    }, [address, getAllowance, getBalance, getName, getSymbol, allowance])\n\n    return (\n        <Wrapper>\n            {\n                step !== 4 ? <Title>{state.language?.CREATE_PRIVATE_SALE}</Title> : <Title>{state.language?.CREATE_PRIVATE_SALE}</Title>\n            }\n            <StepCircle percent={step} />\n            {\n                step === 1 ? (\n                    <>\n                        <Step1 handleSelectAuctionType={handleSelectAuctionType} />\n                    </>\n                ) : step === 2 ? (\n                    <>\n                        <Step2 addressErr={addressErr} address={address} handleSelectToken={handleSelectToken} amountErr={amountErr} amount={amount} onInputAmount={onInputAmount} allowance={allowance} symbol={symbol} name={name} balance={balance} handleApprove={handleApprove} />\n                    </>\n                ) : step === 3 ? (\n                    <>\n                        <Step3 paymentCurrency={paymentCurrency} minPrice={minPrice} handleChangeMinPrice={handleChangeMinPrice} setPaymentCurrency={setPaymentCurrency} rate={rate} handleSetTime={handleSetTime} handleGetTime={handleGetTime} timeValid={timeValid} setRate={handleSetRate} tokensPaymentInTokensSale={tokensPaymentInTokensSale} setTokensPaymentInTokensSale={setTokensPaymentInTokensSale} symbol={symbol} amount={amount} />\n                    </>\n                ) : (\n                    <>\n                        <Review name={name} address={address} symbol={symbol} amount={amount} rate={rate} paymentCurrency={paymentCurrency} account={account} minPrice={minPrice} startDate={startDate} startTime={startTime} endDate={endDate} endTime={endTime} />\n                    </>\n                )\n            }\n\n            <RowBetween className=\"button-group\">\n                <ButtonPrevious disabled={step === 1 ? true : false} onClick={() => {\n                    if (step > 1)\n                        setStep(step - 1)\n                }}>PREVIOUS</ButtonPrevious>\n                <ButtonClick />\n            </RowBetween>\n        </Wrapper>\n    )\n}\n\nexport default NewPrivateSale\n","import React from 'react'\n\nimport Text from '../../../components/Text'\nimport Rocket from '../../../assets/images/rocket-small.png'\nimport { useAuctionState } from '../../../store'\nimport {\n    RowBetween,\n    AuctionType,\n    Row,\n    Radio,\n    LabelRadio,\n    CheckRadio\n} from '../styled'\nimport styled from 'styled-components'\n\nconst Step1 = ({ handleSelectAuctionType }: { handleSelectAuctionType: any }) => {\n\n    const [state] = useAuctionState()\n\n    return (\n        <>\n            {/* <Text size=\"2rem\">{state.language?.AUCTION_TYPE}*</Text> */}\n            <RowBetween style={{ justifyContent: 'center' }} gap=\"10%\">\n                <AuctionType>\n                <Image width=\"149\" height=\"204\" src={Rocket} alt=\"batch auction icon\" />\n                    <Row onClick={() => handleSelectAuctionType('crowdsale')} >\n                        <Radio id=\"crowdsale-option\" type=\"radio\" defaultChecked />\n                        <LabelRadio htmlFor=\"crowdsale-option\"></LabelRadio>\n                        <CheckRadio className='check'></CheckRadio>\n                        <Text size=\"1.2rem\" style={{ marginTop: 0 }}>{state.language?.PRIVATE_SALE}</Text>\n                    </Row>\n                    {/* <Text size=\".8rem\">{state.language?.CROWDSALE_DESCRIPTION_1}</Text> */}\n                    {/* <Text style={{ fontStyle: \"italic\" }} size=\".8rem\">{state.language?.CROWDSALE_DESCRIPTION_2}</Text> */}\n                </AuctionType>\n            </RowBetween>\n        </>\n    )\n}\n\nconst Image = styled.img`\n    max-width: 60px;\n    max-height: 80px;\n    width: 100%!important;\n    height: 100%!important;\n`;\n\nexport default Step1\n","import React from 'react'\n\nimport { useAuctionState } from '../../../store'\nimport Text from '../../../components/Text'\nimport {\n    AuctionToken,\n    AuctionTokenSetting,\n    SelectToken,\n    WrapperText,\n    Row,\n    TextErr,\n    Amount,\n    ButtonApprove\n} from '../styled'\n\nconst Step2 = ({ addressErr, address, handleSelectToken, amountErr, amount, onInputAmount, allowance, symbol, name, balance, handleApprove }: { addressErr: any, address: any, handleSelectToken: any, amountErr: any, amount: any, onInputAmount: any, allowance: any, symbol: any, name: any, balance: any, handleApprove: any }) => {\n\n    const [state] = useAuctionState()\n\n    return (\n        <>\n            <AuctionToken>\n                <AuctionTokenSetting>\n                    <Text size=\"2rem\">Crowdsale Token</Text>\n                    <SelectToken err={addressErr ? true : false} type=\"text\" value={address} placeholder=\"Paste the address of token you would like to private sale\" required onChange={(e) => { handleSelectToken(e.target.value) }} />\n                    {addressErr ? <TextErr>{addressErr}</TextErr> : ''}\n                    <Text size=\"2rem\">{state.language?.TOKEN_AMOUNT}</Text>\n                    <Amount value={amount} onChange={(e) => onInputAmount(e.target.value.replace(/,/g, \".\"))} disabled={addressErr || !address ? true : false} type=\"text\" placeholder={`0.000000 ${symbol}`} required />\n                    {amountErr ? <TextErr>{amountErr}</TextErr> : ''}\n                    {amount && Number(amount) > allowance && !state.transactionPending ? <ButtonApprove onClick={handleApprove}>{state.language?.APPROVE_TOKEN}</ButtonApprove> : <></>}\n                </AuctionTokenSetting>\n                <AuctionTokenSetting style={{ display: 'flex', alignItems: 'center' }}>\n                    <WrapperText>\n                        <Text>{state.language?.TOKENINFO}</Text>\n                        {address ?\n                            <Row>\n                                <Text>{state.language?.TOKEN}: </Text>\n                                <Text>{name} ( {symbol} )</Text>\n                            </Row>\n                            :\n                            \"\"\n                        }\n                        <Row>\n                            <Text>{state.language?.YOUR_TOKEN_BALANCE}: </Text>\n                            <Text>{balance}</Text>\n                        </Row>\n                        <Row>\n                            <Text>{state.language?.YOUR_TOKEN_ALLOWANCE}: </Text>\n                            <Text>{allowance}</Text>\n                        </Row>\n                    </WrapperText>\n                </AuctionTokenSetting>\n            </AuctionToken>\n        </>\n    )\n}\n\nexport default Step2\n","import React from 'react'\n\nimport Text from '../../../components/Text'\nimport DataTime from '../../../components/DateTime'\nimport { paymentTokenCurrency } from '../../../constants'\nimport { useAuctionState } from '../../../store'\nimport {\n    Step3Wraper,\n    Step3,\n    WrapperPaymentCurrency,\n    CoinSelect,\n    Img,\n    Space,\n    MinPrice,\n    TextErr\n} from '../styled'\nimport { useActiveWeb3React } from '../../../hooks/index';\n\nconst Step3Component = ({ paymentCurrency, minPrice, handleChangeMinPrice, setPaymentCurrency, rate, handleSetTime, handleGetTime, timeValid, setRate, symbol }: { paymentCurrency: any, minPrice: any, handleChangeMinPrice: any, setPaymentCurrency: any, rate: any, handleSetTime: any, handleGetTime: any, timeValid: any, setRate: any, tokensPaymentInTokensSale: any, setTokensPaymentInTokensSale: any, symbol: any, amount: any }) => {\n\n    const [state] = useAuctionState()\n    const { chainId }: any = useActiveWeb3React();\n\n    return (\n        <>\n            <Step3Wraper>\n                <Step3 className=\"left\">\n                    <Text size=\"2rem\">{state.language?.PAYMENT_CURRENCY}</Text>\n                    <WrapperPaymentCurrency>\n                        {/* <CoinSelect className={ paymentCurrency && paymentCurrency.address[chainId] === paymentTokenCurrency.NATIVE.address[chainId] ? 'active' : ''} onClick={() => setPaymentCurrency(paymentTokenCurrency.NATIVE)}><Img src={paymentTokenCurrency.NATIVE.logo[chainId]} />&nbsp;&nbsp;{paymentTokenCurrency.NATIVE.symbol[chainId]}</CoinSelect> */}\n                        <CoinSelect className={ paymentCurrency && paymentCurrency.address[chainId] === paymentTokenCurrency.USDC.address[chainId] ? 'active' : ''} onClick={() => setPaymentCurrency(paymentTokenCurrency.USDC)}><Img src={paymentTokenCurrency.USDC.logo[chainId]} />&nbsp;&nbsp;{paymentTokenCurrency.USDC.symbol[chainId]}</CoinSelect>\n                        <CoinSelect className={ paymentCurrency && paymentCurrency.address[chainId] === paymentTokenCurrency.USDT.address[chainId] ? 'active' : ''} onClick={() => setPaymentCurrency(paymentTokenCurrency.USDT)}><Img src={paymentTokenCurrency.USDT.logo[chainId]} />&nbsp;&nbsp;{paymentTokenCurrency.USDT.symbol[chainId]}</CoinSelect>\n                        <CoinSelect className={ paymentCurrency && paymentCurrency.address[chainId] === paymentTokenCurrency.DAI.address[chainId] ? 'active' : ''} onClick={() => setPaymentCurrency(paymentTokenCurrency.DAI)}><Img src={paymentTokenCurrency.DAI.logo[chainId]} />&nbsp;&nbsp;{paymentTokenCurrency.DAI.symbol[chainId]}</CoinSelect>\n                        <CoinSelect className={ paymentCurrency && paymentCurrency.address[chainId] === paymentTokenCurrency.BUSD.address[chainId] ? 'active' : ''} onClick={() => setPaymentCurrency(paymentTokenCurrency.BUSD)}><Img src={paymentTokenCurrency.BUSD.logo[chainId]} />&nbsp;&nbsp;{paymentTokenCurrency.BUSD.symbol[chainId]}</CoinSelect>\n                    </WrapperPaymentCurrency>\n                    <Space />\n                </Step3>\n                <Step3 className='right'>\n                    <Space />\n                    <Text size=\"2rem\">Crowdsale Setting</Text>\n                    <Text size=\"1rem\">{state.language?.MIN_PRICE}</Text>\n                    <MinPrice\n                        type=\"text\"\n                        placeholder={`0.000000`}\n                        value={minPrice}\n                        onChange={(e) => { handleChangeMinPrice(e.target.value.replace(/,/g, \".\")) }}\n                        pattern='^[0-9]*[.,]?[0-9]*$' inputMode='decimal' autoComplete='off'\n                        autoCorrect='off'\n                        minLength={1}\n                        maxLength={79}\n                    />\n                    <Space />\n                    <Text size=\"1rem\">{state.language?.RATE}</Text>\n                    <MinPrice\n                        type=\"text\"\n                        placeholder='Number of token units a buyer gets per wei or token'\n                        value={rate}\n                        pattern='^[0-9]*[.,]?[0-9]*$' inputMode='decimal' autoComplete='off'\n                        autoCorrect='off'\n                        minLength={1}\n                        maxLength={79}\n                        onChange={(e) => {\n                            setRate(e.target.value.replace(/,/g, \".\")) \n                        }}\n                    />\n                    <Space />\n                    {\n                        (rate && Number(rate) !== 0) ? <p>{`Your token will have a ratio of 1 ${paymentCurrency.symbol[chainId]} for ${1/ rate} ${symbol}`}</p>\n                        : <></>\n                    }\n                    <Space />\n                    <DataTime\n                        setTime={handleSetTime}\n                        getTime={handleGetTime}\n                    />\n                    {timeValid ? <TextErr>{timeValid}</TextErr> : <></>}\n                </Step3>\n            </Step3Wraper>\n        </>\n    )\n}\n\nexport default Step3Component\n","import React from 'react'\n\nimport Notification from '../../../components/Notification';\nimport { useAuctionState } from '../../../store'\n// import { paymentTokenCurrency } from '../../../constants'\nimport { useActiveWeb3React } from '../../../hooks/index';\nimport {\n    WrapperPreview,\n    WrapperInside,\n    SetupType,\n    TitleTypeAuction,\n    ValueTypeAuction\n} from '../styled'\n\nconst Review = ({name, address, symbol, amount, rate, paymentCurrency, account, minPrice, startDate, startTime, endDate, endTime}: {name: any, address: any, symbol: any, amount: any, rate: any, paymentCurrency: any, account: any, minPrice: any, startDate: any, startTime: any, endDate: any, endTime: any}) => {\n\n    const [state] = useAuctionState()\n    const { chainId }: any = useActiveWeb3React()\n\n    return (\n        <>\n            <WrapperPreview>\n                <WrapperInside>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.AUCTION_TYPE}</TitleTypeAuction>\n                        <ValueTypeAuction>{state.language?.CROW_SALE}</ValueTypeAuction>\n                    </SetupType>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.AUCTION_TOKEN}</TitleTypeAuction>\n                        <ValueTypeAuction>{address}</ValueTypeAuction>\n                        <ValueTypeAuction>{name} ({symbol})</ValueTypeAuction>\n                    </SetupType>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.AUCTION_TOKEN_AMOUNT}</TitleTypeAuction>\n                        <ValueTypeAuction>{amount}</ValueTypeAuction>\n                    </SetupType>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.CROWD_SALE_RATE}</TitleTypeAuction>\n                        <ValueTypeAuction>{rate}</ValueTypeAuction>\n                    </SetupType>\n                    <SetupType>\n                        <ValueTypeAuction>{`Your token will have a ratio of 1 ${paymentCurrency.symbol[chainId]} for ${1/ rate} ${symbol}`}</ValueTypeAuction>\n                    </SetupType>\n                </WrapperInside>\n                <WrapperInside>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.PAYMENT_CURRENCY}</TitleTypeAuction>\n                        <ValueTypeAuction>{paymentCurrency.fullName[chainId]} ({paymentCurrency.symbol[chainId]})</ValueTypeAuction>\n                    </SetupType>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.FUND_WALLET}</TitleTypeAuction>\n                        <ValueTypeAuction>{account}</ValueTypeAuction>\n                    </SetupType>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.PRICE_SETTING}</TitleTypeAuction>\n                        <ValueTypeAuction>{state.language?.MIN_PRICE}</ValueTypeAuction>\n                        <ValueTypeAuction>{minPrice} {paymentCurrency[chainId]}</ValueTypeAuction>\n                    </SetupType>\n                    <SetupType>\n                        <TitleTypeAuction>{state.language?.AUCTION_START_AND_END}</TitleTypeAuction>\n                        <ValueTypeAuction>{new Date(`${startDate} ${startTime}`).toString()}</ValueTypeAuction>\n                        <ValueTypeAuction>{new Date(`${endDate} ${endTime}`).toString()}</ValueTypeAuction>\n                    </SetupType>\n                </WrapperInside>\n                <Notification />\n            </WrapperPreview>\n        </>\n    )\n}\n\nexport default Review\n"],"sourceRoot":""}