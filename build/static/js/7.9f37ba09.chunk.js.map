{"version":3,"sources":["pages/Marketplace/components/styled.tsx","components/ProcessCircle/CountDownCircleDetail.tsx","pages/Marketplace/components/Card/BatchCard.tsx","pages/Marketplace/components/Card/CrowSaleCard.tsx"],"names":["WrapperPagination","styled","div","NoMarket","Title","input","WrapperAuctions","InnerCard","Row1","Row12","TypeInfo","RocketTitle","SecondCard","InfoAuction","FirstCard","ButtonBuy","button","LabelGroup","Label","borderColor","RowBetween","WrapperCicle","WrapperText","LinkCard","NavLink","CountDownBox","CountDown","ImgRocketAuctionType","img","WrapperAuctionType","Wrapper","AnimateDetail","percent","Detail","Img","CountDownCircleDetail","startTime","endTime","coin","t","useRef","useState","setSeconds","useEffect","current","setInterval","prevSeconds","Date","getTime","clearInterval","timeCoundDown","getTimeCountCircle","src","className","width","height","xmlns","id","r","cy","cx","strokeWidth","stroke","fill","gradientTransform","offset","stopColor","BatchCard","data","status","minRaise","Number","marketStatus","minimumCommitmentAmount","paymentCurrency","decimals","totalRaise","commitmentsTotal","hasCommited","setHasCommited","account","useActiveWeb3React","contract","useBatchAuctionContract","address","tokenPrice","marketInfo","totalTokens","tokenAuction","useAuctionState","state","image","setImage","configIndexedData","a","localStorage","getItem","logo","setItem","rocketSmall","getCommitment","commitments","then","res","gt","to","language","LIVE","marketSuccessful","FINISHED","size","name","symbol","style","marginBottom","MIN_RAISE","isNaN","parseFloat","toFixed","TOTAL_RAISE","logoCurrency","TOKEN_PRICE","AUCTION_TYPE","alt","BATCH_AUCTION","href","CrowSaleCard","timeStartUnix","timeEndUnix","timeStart","toNumber","timeEnd","timeStartFormat","dd","getDate","toString","mm","getMonth","yyyy","getFullYear","timeEndFormat","totalSale","marketPrice","rate","totalRemaining","toLocaleString","textAlign"],"mappings":"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","file":"static/js/7.9f37ba09.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nimport { NavLink } from \"react-router-dom\";\n\nexport const WrapperPagination = styled.div`\n    padding: 15px 0px;\n    height: 69px;\n`;\n\nexport const NoMarket = styled.div`\n    margin: auto;\n    font-size: 1.2rem;\n    font-style: italic;\n    @media (max-width: 445px) {\n        font-size: 1rem;\n    }\n`;\n\nexport const SearchBar = styled.input`\n    outline: none;\n    background: #ffffff4f;\n    color: white;\n    border-radius: 12px;\n    width: 100%;\n    max-width: 600px;\n    padding: 10px 12px;\n    border: none;\n    font-size: 0.875rem;\n    font-style: italic;\n    @media (max-width: 576px) {\n        width: 100%;\n    }\n    @media (max-width: 373px) {\n        width: 90%;\n    }\n\n    &::placeholder {\n        color: #ffffffbe;\n    }\n`;\n\nexport const Title = styled.div`\n    font-size: 1.6rem;\n    margin: 1.5rem 0;\n    font-style: italic;\n    font-weight: 300;\n    @media (max-width: 445px) {\n        font-size: 1.5rem;\n    }\n    @media (max-width: 424px) {\n        font-size: 1.2rem;\n    }\n`;\n\nexport const WrapperAuctions = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 2rem;\n    gap: 2rem;\n    overflow: hidden;\n    @media (max-width: 1140px) {\n        justify-content: center;\n    }\n    @media (max-width: 566px) {\n        gap: 10rem;\n    }\n    @media (max-width: 409px) {\n        gap: 8rem;\n    }\n    @media (max-width: 388px) {\n        gap: 2rem;\n    }\n    & > div {\n        max-width: 400px;\n        min-width: 380px;\n        @media (max-width: 1140px) {\n            min-width: 330px;\n        }\n        @media (max-width: 900px) {\n            transform: scale(0.9);\n        }\n        @media (max-width: 566px) {\n            margin: 10px 0 -217px;\n            :last-child {\n                margin: 10px 0 0px;\n            }\n        }\n        @media (max-width: 473px) {\n            width: 360px;\n            min-width: 360px;\n        }\n        @media (max-width: 409px) {\n            transform: scale(0.8);\n        }\n        @media (max-width: 388px) {\n            transform: scale(0.7);\n        }\n    }\n    @media (max-width: 900px) {\n        margin: -40px 0;\n    }\n    @media (max-width: 388px) {\n        margin: -105px 0;\n    }\n`;\n\nexport const InnerCard = styled.div`\n    min-height: 620px;\n    position: relative;\n    .ButtonLive {\n        justify-content: space-between;\n    }\n    /* @media (max-width: 768px) {\n        min-height: 590px;\n    } */\n`;\nexport const Row1 = styled.div`\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n`;\nexport const Row12 = styled.div`\n    width: 80%;\n`;\n\nexport const TypeInfo = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    margin-top: 10px;\n    p {\n        display: flex;\n        align-items: center;\n    }\n`;\nexport const RocketTitle = styled.div`\n    display: flex;\n`;\nexport const SecondCard = styled.div`\n    position: absolute;\n    bottom: 1px;\n    width: 100%;\n`;\nexport const InfoAuction = styled.div`\n    margin-bottom: 1rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    max-width: 123px;\n    width: 100%;\n    border: 1px solid #37fab3;\n    color: #37fab3;\n    border-radius: 8px;\n    @media (max-width: 1140px) {\n        width: 115px;\n    }\n`;\nexport const FirstCard = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 20%;\n`;\nexport const ButtonBuy = styled.button`\n    a {\n        color: #fff;\n        font-style: italic;\n        text-decoration: none;\n    }\n    width: 150px;\n    height: 40px;\n    border-radius: 12px;\n    background: linear-gradient(to right, #7cf95b, #4da2ea);\n    font-size: 18px;\n    border: 1px solid #fff;\n`;\n\nexport const LabelGroup = styled.div`\n    display: flex;\n    gap: 10px;\n    margin-bottom: 1rem;\n    width: 100%;\n    flex-direction: column;\n    /* justify-content: center; */\n    &.completed {\n        flex-direction: column;\n    }\n`;\n\nexport const Label = styled.div<{ borderColor?: string }>`\n    width: 100%;\n    border-radius: 8px;\n    border: 1px solid ${({ borderColor }) => borderColor};\n    color: ${({ borderColor }) => borderColor};\n    font-size: 0.8rem;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const RowBetween = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    margin-bottom: 1rem;\n    flex-wrap: wrap;\n    white-space: nowrap;\n`;\n\nexport const WrapperCicle = styled.div`\n    position: relative;\n    width: 100%;\n    margin: 1rem 0;\n`;\n\nexport const WrapperText = styled.div`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: auto;\n    width: 150px;\n    height: 40px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    & > p {\n        font-size: 1rem;\n        margin-top: 0;\n    }\n`;\n\nexport const LinkCard = styled(NavLink)`\n    color: white;\n    text-decoration: none;\n`;\n\nexport const CountDownBox = styled.div`\n    border-top: 2px solid #ffffff80;\n    border-bottom: 2px solid #ffffff80;\n    padding: 2rem;\n    width: 100%;\n    margin: 1rem 0;\n`;\n\nexport const CountDown = styled.div`\n    font-size: 1.5rem;\n    margin-top: 1rem;\n    text-align: center;\n    span {\n        margin-right: 10px;\n    }\n\n    @media screen and (max-width: 1480px) {\n        font-size: 1rem;\n    }\n\n    @media screen and (max-width: 768px) {\n        font-size: 1.3rem;\n    }\n`;\n\nexport const ImgRocketAuctionType = styled.img`\n    width: 3rem;\n    height: 4rem;\n`;\n\nexport const WrapperAuctionType = styled.div`\n    padding: 5px 0px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const Wrapper = styled.div`\n    /* @media screen and (max-width: 900px) {\n        text-align: center;\n        align-items: center;\n        display: flex;\n        flex-direction: column;\n    } */\n    @media screen and (max-width: 576px) {\n        margin: 1rem auto;\n        width: 100%;\n    }\n`;\n\nexport const ImgLoading = styled.img`\n    position: absolute;\n    width: 200px;\n    height: 200px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { getTimeCountCircle } from \"../../utils/getTimeCountDown\";\nimport styled from \"styled-components\";\n\nconst CountDownCircleDetail = ({\n    startTime,\n    endTime,\n    coin,\n}: {\n    startTime?: any;\n    endTime?: any;\n    coin?: any;\n}) => {\n    const t: any = useRef();\n    const [, setSeconds] = useState(0);\n\n    useEffect(() => {\n        const tick = () => {\n            setSeconds((prevSeconds) => prevSeconds + 1);\n        };\n        t.current = setInterval(() => tick(), 1000);\n    }, []);\n    const now = new Date().getTime();\n    if (now >= endTime * 1000) clearInterval(t.current);\n\n    let timeCoundDown: any = { percent: 1508 };\n    if (startTime && endTime)\n        timeCoundDown = getTimeCountCircle(startTime, endTime, \"754\", \"1508\");\n\n    return (\n        <Detail>\n            <AnimateDetail\n                percent={\n                    timeCoundDown.percent > 1508 ? 1508 : timeCoundDown.percent\n                }\n            >\n                <Img src={coin} />\n                <svg\n                    className=\"svg_animation\"\n                    width=\"300\"\n                    height=\"300\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <g>\n                        <circle\n                            id=\"circle\"\n                            className=\"circle_animation\"\n                            r=\"120\"\n                            cy=\"150\"\n                            cx=\"150\"\n                            strokeWidth=\"25\"\n                            stroke=\"url('#colorGradient')\"\n                            fill=\"none\"\n                        />\n                    </g>\n                    <defs>\n                        <linearGradient\n                            id=\"colorGradient\"\n                            gradientTransform=\"rotate(-10)\"\n                        >\n                            <stop offset=\"0%\" stopColor=\"#0082ff\" />\n                            <stop offset=\"30%\" stopColor=\"#00b3ff\" />\n                            <stop offset=\"50%\" stopColor=\"#00ddda\" />\n                            <stop offset=\"95%\" stopColor=\"#3fffac\" />\n                            <stop offset=\"100%\" stopColor=\"#08ff48\" />\n                        </linearGradient>\n                    </defs>\n                </svg>\n                <svg\n                    className=\"svg_animation_bg\"\n                    width=\"300\"\n                    height=\"300\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <g>\n                        <circle\n                            id=\"circle\"\n                            className=\"circle_animation_bg\"\n                            r=\"120\"\n                            cy=\"150\"\n                            cx=\"150\"\n                            strokeWidth=\"25\"\n                            stroke=\"#fff\"\n                            fill=\"none\"\n                        />\n                    </g>\n                </svg>\n            </AnimateDetail>\n        </Detail>\n    );\n};\n\nconst AnimateDetail = styled.div<{ percent: any }>`\n    width: 300px;\n    height: 300px;\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    z-index: 0;\n    .svg_animation {\n        position: absolute;\n        -webkit-transform: rotate(-90deg);\n        transform: rotate(-90deg);\n        z-index: 2;\n    }\n    .svg_animation_bg {\n        -webkit-transform: rotate(-90deg);\n        transform: rotate(-90deg);\n    }\n    .circle_animation {\n        stroke-dasharray: 754;\n        stroke-dashoffset: ${({ percent }) => percent};\n        transition: all 1s linear;\n    }\n    .circle_animation_bg {\n        stroke-dasharray: 754;\n        transition: all 1s linear;\n    }\n    // @media (max-width: 600px) {\n    //     transform: scale(0.85);\n    // }\n    // @media (max-width: 436px) {\n    //     transform: scale(0.8);\n    // }\n    // @media (max-width: 406px) {\n    //     transform: scale(0.7);\n    // }\n`;\n\nconst Detail = styled.div`\n    display: flex;\n    justify-content: center;\n`;\nconst Img = styled.img`\n    position: absolute;\n    width: 35px;\n    z-index: 3;\n    top: 12px;\n`;\n\nexport default CountDownCircleDetail;\n","import React, { useEffect, useState } from \"react\";\nimport Card from \"../../../../components/Card\";\nimport Text from \"../../../../components/Text\";\nimport {\n    LinkCard,\n    InnerCard,\n    LabelGroup,\n    Label,\n    RowBetween,\n    WrapperCicle,\n    WrapperText,\n    WrapperAuctionType,\n    ImgRocketAuctionType,\n    TypeInfo,\n    ButtonBuy,\n    SecondCard,\n    FirstCard,\n    InfoAuction,\n    Row1,\n    Row12,\n} from \"../styled\";\nimport CountDownCircle from \"../../../../components/ProcessCircle/CountDownCircleDetail\";\nimport rocketSmall from \"../../../../assets/base64/rocket-update.json\";\nimport { useAuctionState } from \"../../../../store\";\nimport { logoCurrency } from \"../../../../constants\";\nimport { useActiveWeb3React } from \"hooks\";\nimport { useBatchAuctionContract } from \"hooks/useContract\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\n\nconst BatchCard = ({ data, status }: { data: any; status?: any }) => {\n    const minRaise =\n        Number(data.marketStatus.minimumCommitmentAmount) /\n        Number(`1e${data.paymentCurrency.decimals}`);\n    const totalRaise = Number(\n        Number(data.marketStatus.commitmentsTotal) /\n            Number(`1e${data.paymentCurrency.decimals}`)\n    );\n    const [hasCommited, setHasCommited] = useState(false);\n    const { account } = useActiveWeb3React();\n    const contract = useBatchAuctionContract(data.address);\n    const tokenPrice = data\n        ? totalRaise /\n          (Number(data.marketInfo.totalTokens) /\n              Number(`1e${data.tokenAuction.decimals}`))\n        : 0;\n    const [state] = useAuctionState();\n    const [image, setImage]: any = useState();\n\n    const configIndexedData = async () => {\n        const logo = await localStorage.getItem(\"flyby_rocket_card\");\n        if (logo) {\n            setImage(logo);\n        } else {\n            localStorage.setItem(\"flyby_rocket_card\", rocketSmall.data);\n            setImage(rocketSmall.data);\n        }\n    };\n    const getCommitment = async () => {\n        return await contract?.commitments(account);\n    };\n\n    useEffect(() => {\n        configIndexedData();\n        getCommitment().then((res) => {\n            const commitments: BigNumber = res;\n            if (commitments.gt(0)) setHasCommited(true);\n        });\n    }, [account]);\n\n    return (\n        <>\n            <Card>\n                <LinkCard to={`/auctions/${data.address}`}>\n                    <InnerCard>\n                        <Row1>\n                            <FirstCard>\n                                {status === \"live\" ? (\n                                    <LabelGroup>\n                                        <Label borderColor={\"#37fab3\"}>\n                                            {state.language?.LIVE}\n                                        </Label>\n                                    </LabelGroup>\n                                ) : (\n                                    <LabelGroup>\n                                        {data.marketSuccessful ? (\n                                            <Label borderColor={\"#37fab3\"}>\n                                                ✓\n                                            </Label>\n                                        ) : (\n                                            <Label borderColor={\"#37fab3\"}>\n                                                X\n                                            </Label>\n                                        )}\n                                        {data.marketSuccessful ? (\n                                            <Label borderColor={\"#37fab3\"}>\n                                                {state.language?.FINISHED}\n                                            </Label>\n                                        ) : (\n                                            <Label borderColor={\"#ff0000\"}>\n                                                {state.language?.FINISHED}\n                                            </Label>\n                                        )}\n                                    </LabelGroup>\n                                )}\n                                {hasCommited ? (\n                                    <InfoAuction>Your Auction</InfoAuction>\n                                ) : (\n                                    <></>\n                                )}\n                            </FirstCard>\n                            <Row12>\n                                <Text size=\"1.2rem\">\n                                    {data.tokenAuction.name} (\n                                    {data.tokenAuction.symbol})\n                                </Text>\n                                <RowBetween style={{ marginBottom: \"0\" }}>\n                                    <Text size=\".875rem\">\n                                        {state.language?.MIN_RAISE}:{\" \"}\n                                        {!isNaN(minRaise)\n                                            ? parseFloat(minRaise.toFixed(5))\n                                            : 0}{\" \"}\n                                        {data.paymentCurrency.symbol}\n                                    </Text>\n                                </RowBetween>\n                                <RowBetween>\n                                    <Text size=\".875rem\">\n                                        {state.language?.TOTAL_RAISE}:{\" \"}\n                                        {!isNaN(totalRaise)\n                                            ? parseFloat(totalRaise.toFixed(5))\n                                            : 0}{\" \"}\n                                        {data.paymentCurrency.symbol}\n                                    </Text>\n                                </RowBetween>\n                            </Row12>\n                        </Row1>\n\n                        <SecondCard>\n                            <WrapperCicle>\n                                <CountDownCircle\n                                    startTime={data.marketInfo?.startTime}\n                                    endTime={data.marketInfo?.endTime}\n                                    coin={\n                                        logoCurrency[\n                                            data.paymentCurrency.symbol\n                                        ]\n                                    }\n                                />\n                                <WrapperText>\n                                    <Text size=\"0.8rem\">\n                                        {state.language?.TOKEN_PRICE}\n                                    </Text>\n                                    <Text size=\"0.8rem\">\n                                        {tokenPrice\n                                            ? parseFloat(tokenPrice.toFixed(9))\n                                            : 0}{\" \"}\n                                        {data.paymentCurrency.symbol}\n                                    </Text>\n                                </WrapperText>\n                            </WrapperCicle>\n                            <Text size=\"1.2rem\">\n                                {state.language?.AUCTION_TYPE}\n                            </Text>\n                            <WrapperAuctionType>\n                                <TypeInfo>\n                                    <ImgRocketAuctionType src={image} alt=\"\" />\n                                    <Text size=\"1rem\">\n                                        {state.language?.BATCH_AUCTION}\n                                    </Text>\n                                </TypeInfo>\n                                {status === \"live\" ? (\n                                    <ButtonBuy>\n                                        <a href=\"\">Buy Now</a>\n                                    </ButtonBuy>\n                                ) : hasCommited ? (\n                                    <ButtonBuy>\n                                        <a href=\"\">Claim Now</a>\n                                    </ButtonBuy>\n                                ) : (\n                                    <></>\n                                )}\n                            </WrapperAuctionType>\n                        </SecondCard>\n                    </InnerCard>\n                </LinkCard>\n            </Card>\n        </>\n    );\n};\n\nexport default BatchCard;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../../../../components/Card\";\nimport Text from \"../../../../components/Text\";\nimport {\n    LinkCard,\n    InnerCard,\n    LabelGroup,\n    Label,\n    RowBetween,\n    WrapperCicle,\n    WrapperText,\n    WrapperAuctionType,\n    ImgRocketAuctionType,\n    ButtonBuy,\n    TypeInfo,\n    SecondCard,\n    InfoAuction,\n    FirstCard,\n    Row1,\n    Row12,\n    RocketTitle,\n} from \"../styled\";\nimport CountDownCircle from \"../../../../components/ProcessCircle/CountDownCircleDetail\";\n\nimport rocketSmall from \"../../../../assets/base64/rocket-update.json\";\nimport { useAuctionState } from \"../../../../store\";\nimport { logoCurrency } from \"../../../../constants\";\nimport { useBatchAuctionContract } from \"hooks/useContract\";\nimport { useActiveWeb3React } from \"hooks\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { timeEnd } from \"console\";\n\nconst CrowSaleCard = ({ data, status }: { data: any; status?: any }) => {\n    const [state] = useAuctionState();\n    const [hasCommited, setHasCommited] = useState(false);\n    const contract = useBatchAuctionContract(data.address);\n    const timeStartUnix: BigNumber = data.marketInfo.startTime;\n    const timeEndUnix: BigNumber = data.marketInfo.endTime;\n    const timeStart = new Date(timeStartUnix.toNumber() * 1000);\n    const timeEnd = new Date(timeEndUnix.toNumber() * 1000);\n    const timeStartFormat = {\n        dd:\n            timeStart.getDate() < 10\n                ? \"0\" + timeStart.getDate().toString()\n                : timeStart.getDate(),\n        mm:\n            timeStart.getMonth() + 1 < 10\n                ? \"0\" + (timeStart.getMonth() + 1).toString()\n                : timeStart.getMonth() + 1,\n        yyyy: timeStart.getFullYear(),\n    };\n    const timeEndFormat = {\n        dd:\n            timeEnd.getDate() < 10\n                ? \"0\" + timeEnd.getDate().toString()\n                : timeEnd.getDate(),\n        mm:\n            timeEnd.getMonth() + 1 < 10\n                ? \"0\" + (timeEnd.getMonth() + 1).toString()\n                : timeEnd.getMonth() + 1,\n        yyyy: timeEnd.getFullYear(),\n    };\n\n    const { account } = useActiveWeb3React();\n\n    const totalSale = data\n        ? Number(\n              data.marketInfo.totalTokens /\n                  Number(`1e${data.tokenAuction.decimals}`)\n          )\n        : 0;\n    // const minRaise = data\n    //     ? Number(data.marketPrice.goal) /\n    //       Number(`1e${data.paymentCurrency.decimals}`)\n    //     : 0;\n    const totalRaise = data\n        ? Number(\n              Number(data.marketStatus.commitmentsTotal) /\n                  Number(`1e${data.paymentCurrency.decimals}`)\n          )\n        : 0;\n    const tokenPrice = data\n        ? Number(data.marketPrice.rate) /\n          Number(`1e${data.paymentCurrency.decimals}`)\n        : 0;\n    const totalRemaining = data\n        ? totalSale -\n          totalRaise /\n              (Number(data.marketPrice.rate) /\n                  Number(`1e${data.paymentCurrency.decimals}`))\n        : 0;\n    const [image, setImage]: any = useState();\n\n    const configIndexedData = async () => {\n        const logo = await localStorage.getItem(\"flyby_rocket_card\");\n        if (logo) {\n            setImage(logo);\n        } else {\n            localStorage.setItem(\"flyby_rocket_card\", rocketSmall.data);\n            setImage(rocketSmall.data);\n        }\n    };\n\n    const getCommitment = async () => {\n        return await contract?.commitments(account);\n    };\n\n    useEffect(() => {\n        configIndexedData();\n        getCommitment().then((res) => {\n            const commitments: BigNumber = res;\n            if (commitments.gt(0)) setHasCommited(true);\n        });\n    }, [account]);\n\n    return (\n        <>\n            <Card>\n                <LinkCard to={`/auctions/${data.address}`}>\n                    <InnerCard>\n                        <Row1>\n                            <FirstCard>\n                                {status === \"live\" ? (\n                                    <LabelGroup>\n                                        <Label borderColor={\"#37fab3\"}>\n                                            {state.language?.LIVE}\n                                        </Label>\n                                    </LabelGroup>\n                                ) : (\n                                    <LabelGroup className=\"completed\">\n                                        {data.marketSuccessful ? (\n                                            <Label borderColor={\"#37fab3\"}>\n                                                ✓\n                                            </Label>\n                                        ) : (\n                                            <Label borderColor={\"#ff0000\"}>\n                                                X\n                                            </Label>\n                                        )}\n                                        {data.marketSuccessful ? (\n                                            <Label borderColor={\"#37fab3\"}>\n                                                {state.language?.FINISHED}\n                                            </Label>\n                                        ) : (\n                                            <Label borderColor={\"#ff0000\"}>\n                                                {state.language?.FINISHED}\n                                            </Label>\n                                        )}\n                                    </LabelGroup>\n                                )}\n                            </FirstCard>\n                            <Row12>\n                                <Text size=\"1.2rem\">\n                                    {data.tokenAuction.name} (\n                                    {data.tokenAuction.symbol})\n                                    <p>The DEX Super Aggregator</p>\n                                </Text>\n                                <RowBetween style={{ marginBottom: \"0\" }}>\n                                    <Text size=\".875rem\">\n                                        {\" \"}\n                                        Total sale tokens:{\" \"}\n                                        {!isNaN(totalSale)\n                                            ? parseFloat(\n                                                  totalSale.toFixed(5)\n                                              ).toLocaleString()\n                                            : 0}{\" \"}\n                                        {data.tokenAuction.symbol}\n                                    </Text>\n                                </RowBetween>\n                                <RowBetween style={{ marginBottom: \"0\" }}>\n                                    <Text size=\".875rem\">\n                                        Tokens remaining:{\" \"}\n                                        {!isNaN(totalRemaining)\n                                            ? parseFloat(\n                                                  totalRemaining.toFixed(5)\n                                              ).toLocaleString()\n                                            : 0}{\" \"}\n                                        {data.tokenAuction.symbol}\n                                    </Text>\n                                </RowBetween>\n                                <RowBetween style={{ marginBottom: \"0\" }}>\n                                    <Text size=\".875rem\">\n                                        {state.language?.TOTAL_RAISE}:{\" \"}\n                                        {!isNaN(totalRaise)\n                                            ? parseFloat(\n                                                  totalRaise.toFixed(5)\n                                              ).toLocaleString()\n                                            : 0}{\" \"}\n                                        {data.paymentCurrency.symbol}\n                                    </Text>\n                                </RowBetween>\n                                <RowBetween style={{ marginBottom: \"0\" }}>\n                                    <Text size=\".875rem\">\n                                        Time start: {timeStartFormat.dd} -{\" \"}\n                                        {timeStartFormat.mm} -{\" \"}\n                                        {timeStartFormat.yyyy}\n                                    </Text>\n                                </RowBetween>\n                                <RowBetween>\n                                    <Text size=\".875rem\">\n                                        Time end: {timeEndFormat.dd} -{\" \"}\n                                        {timeEndFormat.mm} -{\" \"}\n                                        {timeEndFormat.yyyy}\n                                    </Text>\n                                </RowBetween>\n                            </Row12>\n                        </Row1>\n\n                        <SecondCard>\n                            <WrapperCicle>\n                                <CountDownCircle\n                                    startTime={data.marketInfo?.startTime}\n                                    endTime={data.marketInfo?.endTime}\n                                    coin={\n                                        logoCurrency[\n                                            data.paymentCurrency.symbol\n                                        ]\n                                    }\n                                />\n                                <WrapperText>\n                                    <Text size=\"0.8rem\">\n                                        {state.language?.TOKEN_PRICE}\n                                    </Text>\n                                    <Text\n                                        size=\"0.8rem\"\n                                        style={{ textAlign: \"center\" }}\n                                    >\n                                        {tokenPrice\n                                            ? parseFloat(\n                                                  tokenPrice.toFixed(9)\n                                              ).toLocaleString()\n                                            : 0}{\" \"}\n                                        {data.paymentCurrency.symbol}\n                                    </Text>\n                                </WrapperText>\n                            </WrapperCicle>\n                            {/* <Text size=\"1.2rem\">\n                                {state.language?.AUCTION_TYPE}\n                            </Text> */}\n\n                            <WrapperAuctionType className=\"ButtonLive\">\n                                {status === \"live\" ? (\n                                    <ButtonBuy>\n                                        <a href=\"\">Buy now</a>\n                                    </ButtonBuy>\n                                ) : hasCommited ? (\n                                    <ButtonBuy>\n                                        <a href=\"\">Claim now</a>\n                                    </ButtonBuy>\n                                ) : (\n                                    <></>\n                                )}\n                                <TypeInfo>\n                                    <RocketTitle>\n                                        <ImgRocketAuctionType\n                                            src={image}\n                                            alt=\"\"\n                                        />\n                                        <Text size=\"1rem\">\n                                            Pre-Private Sale\n                                        </Text>\n                                    </RocketTitle>\n\n                                    {hasCommited ? (\n                                        <InfoAuction>Your Auction</InfoAuction>\n                                    ) : (\n                                        <></>\n                                    )}\n                                </TypeInfo>\n                            </WrapperAuctionType>\n                        </SecondCard>\n                    </InnerCard>\n                </LinkCard>\n            </Card>\n        </>\n    );\n};\n\nexport default CrowSaleCard;\n"],"sourceRoot":""}