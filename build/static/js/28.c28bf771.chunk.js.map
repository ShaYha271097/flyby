{"version":3,"sources":["pages/Marketplace/components/Live/LiveCard.tsx","pages/Marketplace/components/LiveAuctions.tsx"],"names":["LiveCard","data","templateId","Number","marketTemplate","BatchCard","status","CrowSaleCard","LiveAuctions","getDataAuction","useAllMarket","useState","dataMap","setDataMap","useAuctionState","state","numPage","setNumPage","numPageSearch","currentPage","setCurrentPage","limitPage","valueSearch","dataSearch","datas","live","noData","setNoData","loading","useActiveWeb3React","account","chainId","setPage","page","useEffect","getMapData","a","reverse","Math","ceil","length","pageData","slice","Promise","all","map","item","index","address","dataAuction","then","res","filter","undefined","FlybyLogo","language","LIVE_SALES","toUpperCase","NO_LIVE_MARKET","LoadingComponent","key","Pagination","setPages","num"],"mappings":"mQAsBeA,EAhBE,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAEVC,EAAaC,OAAOF,EAAKG,gBAC/B,OACI,oCAEuB,IAAfF,EACE,kBAACG,EAAA,EAAD,CAAWJ,KAAMA,EAAMK,OAAQ,SAG3B,kBAACC,EAAA,EAAD,CAAcN,KAAMA,EAAMK,OAAQ,W,4BC4KzCE,UAvKM,WAAO,IAAD,MACfC,EAAmBC,cAAnBD,eACR,EAAmCE,qBAAnC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgBC,cAATC,EAAP,oBACA,EAA8BJ,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA0CN,mBAAS,GAAnD,mBAAOO,EAAP,KACA,GADA,KACsCP,mBAAS,IAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KACA,EAAoBT,mBAAS,IAAtBU,EAAP,oBACA,EAA2CV,qBAA3C,mBAAOW,EAAP,KACA,GADA,KACyCX,sBAAzC,mBAAOY,EAAP,KACMC,GADN,KACmBT,EAAMS,MAAMC,MAC/B,EAA4Bd,oBAAS,GAArC,mBAAOe,EAAP,KAAeC,EAAf,KACA,EAA8BhB,oBAAS,GAAvC,mBAAOiB,EAAP,KACA,GADA,KAC6BC,eAArBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAEXC,EAAU,SAACC,GACbb,EAAea,IA4EnB,OA1CAC,qBAAU,WACN,IAAMC,EAAU,uCAAG,8BAAAC,EAAA,0DACXZ,EADW,uBAEXA,EAAMa,UACNpB,EAAWqB,KAAKC,KAAKf,EAAMgB,OAASnB,IAC9BoB,EAAWjB,EAAMkB,MACnBvB,EAAcE,GACbF,EAAc,GAAKE,GANb,SAQesB,QAAQC,IAAR,OACtBH,QADsB,IACtBA,OADsB,EACtBA,EAAUI,IAAV,uCAAc,WAAOC,EAAWC,GAAlB,eAAAX,EAAA,sEACS3B,EAAeqC,EAAKE,SAD7B,cACJ/C,EADI,yBAEHA,GAFG,2CAAd,0DATO,cAQLgD,EARK,yBAcJA,GAdI,4EAAH,qDAmBZzB,GAASA,EAAMgB,OAAS,GACxBL,IAAae,KAAb,uCAAkB,WAAOC,GAAP,eAAAf,EAAA,sDACVe,GAAsB,IAAfA,EAAIX,OACXb,GAAU,IAEJ1B,EADH,OACUkD,QADV,IACUA,OADV,EACUA,EAAKC,QAAO,SAACN,GACtB,YAAgBO,IAATP,KAEXjC,EAAWZ,IAPD,2CAAlB,yDAmBL,CAACuB,EAAOL,IAGP,kBAAC,IAAD,KACI,kBAACmC,EAAA,EAAD,MACA,kBAAC,IAAD,eAAQvC,EAAMwC,gBAAd,aAAQ,EAAgBC,WAAWC,eAMjC3B,GAAYC,GAITL,GAAUF,GAA0B,IAAjBA,EAAMgB,OAC1B,kBAAC,IAAD,KACI,kBAAC,IAAD,eAAWzB,EAAMwC,gBAAjB,aAAW,EAAgBG,iBAE9B9C,EAGD,oCACI,kBAAC,IAAD,KACKU,EACIM,EAWG,kBAAC+B,EAAA,EAAD,MAVApC,EACIA,EAAWsB,KAAI,SAACC,EAAWC,GAAZ,OACX,kBAAC,EAAD,CAAUa,IAAKb,EAAO9C,KAAM6C,OAGhC,kBAAC,IAAD,eACK/B,EAAMwC,gBADX,aACK,EAAgBG,gBAM7B9C,EACAA,EAAQiC,KAAI,SAACC,EAAWC,GAAZ,OACR,kBAAC,EAAD,CAAUa,IAAKb,EAAO9C,KAAM6C,OAGhC,sCAGR,kBAAC,IAAD,KACKxB,EACIM,EAWG,qCAVAL,EACI,kBAACsC,EAAA,EAAD,CACIC,SAAU9B,EACV+B,IAAK7C,EACLC,YAAaA,IAGjB,qCAKRP,EACA,kBAACiD,EAAA,EAAD,CACIC,SAAU9B,EACV+B,IAAK/C,EACLG,YAAaA,IAGjB,uCAhDZ,kBAACwC,EAAA,EAAD,MARA,kBAAC,IAAD,KACI,kBAAC,IAAD","file":"static/js/28.c28bf771.chunk.js","sourcesContent":["import React from 'react'\nimport BatchCard from '../Card/BatchCard'\n// import DutchCard from '../Card/DutchCard'\nimport CrowSaleCard from '../Card/CrowSaleCard'\n\n\nconst LiveCard = ({ data }: { data: any }) => {\n\n    const templateId = Number(data.marketTemplate)\n    return (\n        <>\n            {\n                templateId === 2\n                ? <BatchCard data={data} status={'live'} />\n                // : templateId === 2\n                //     ? <DutchCard data={data} status={'live'} />\n                    : <CrowSaleCard data={data} status={'live'} />\n            }\n        </>\n    )\n}\n\nexport default LiveCard","import React, { useState, useEffect } from \"react\";\nimport { useAllMarket } from \"../../../hooks/useAllMarket\";\nimport { useAuctionState } from \"../../../store\";\nimport LoadingComponent from \"../../../components/Loading/LoadingComponent\";\nimport Pagination from \"../../../components/Pagination\";\nimport LiveCard from \"./Live/LiveCard\";\nimport FlybyLogo from \"../../FlybyLogo\";\nimport { useActiveWeb3React } from \"../../../hooks\";\n\nimport {\n    WrapperPagination,\n    NoMarket,\n    Wrapper,\n    Title,\n    WrapperAuctions,\n    // SearchBar,\n} from \"./styled\";\n\n// import IndexedDb from '../../../utils/indexDB'\n// import { INDEXDB_OBJECT_STORE } from '../../../constants'\n\nconst LiveAuctions = () => {\n    const { getDataAuction } = useAllMarket();\n    const [dataMap, setDataMap]: any = useState();\n    const [state] = useAuctionState();\n    const [numPage, setNumPage] = useState(0);\n    const [numPageSearch, setNumPageSearch] = useState(0);\n    const [currentPage, setCurrentPage] = useState(0);\n    const [limitPage] = useState(12);\n    const [valueSearch, setValueSearch]: any = useState();\n    const [dataSearch, setDataSearch]: any = useState();\n    const datas: any = state.datas.live;\n    const [noData, setNoData] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const { account, chainId } = useActiveWeb3React();\n\n    const setPage = (page: any) => {\n        setCurrentPage(page);\n    };\n\n    const searchAuction = async (e: any) => {\n        setValueSearch(e.target.value);\n        setLoading(true);\n        setDataSearch();\n        const dataAddressSearch = datas.filter(\n            (item: any) => item.address === e.target.value\n        );\n        setNumPageSearch(Math.ceil(dataAddressSearch.length / limitPage));\n        const dataAuction: any = await Promise.all(\n            dataAddressSearch?.map(async (item: any, index: any) => {\n                const data = await getDataAuction(item.address);\n                return data;\n            })\n        );\n        setLoading(false);\n        if (dataAuction.length !== 0) {\n            setDataSearch(dataAuction);\n        }\n    };\n\n    // const getDataIndexDB = async() => {\n    //     const indexedDb = new IndexedDb('flyby');\n    //     await indexedDb.createObjectStore(INDEXDB_OBJECT_STORE);\n    //     const dataIndexDB = await indexedDb.getAllValue('auction_live');\n    //     if (!datas) {\n    //         if (dataIndexDB && dataIndexDB.length !== 0) {\n    //             setDataMap(dataIndexDB[dataIndexDB.length - 1].data)\n    //         }\n    //     }\n    // }\n\n    useEffect(() => {\n        const getMapData = async () => {\n            if (datas) {\n                datas.reverse();\n                setNumPage(Math.ceil(datas.length / limitPage));\n                const pageData = datas.slice(\n                    currentPage * limitPage,\n                    (currentPage + 1) * limitPage\n                );\n                const dataAuction = await Promise.all(\n                    pageData?.map(async (item: any, index: number) => {\n                        const data = await getDataAuction(item.address);\n                        return data;\n                    })\n                );\n                return dataAuction;\n            }\n            return;\n        };\n\n        if (datas && datas.length > 0) {\n            getMapData().then(async (res: any) => {\n                if (res && res.length === 0) {\n                    setNoData(true);\n                } else {\n                    const data = res?.filter((item: any) => {\n                        return item !== undefined;\n                    });\n                    setDataMap(data);\n                    // const indexedDb = new IndexedDb('flyby');\n                    // await indexedDb.createObjectStore(INDEXDB_OBJECT_STORE);\n                    // await indexedDb.deleteValue('auction_live', 0);\n                    // await indexedDb.putValue('auction_live', { data: data });\n                }\n            });\n        }\n        // else {\n        //     getDataIndexDB()\n        // }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [datas, currentPage]);\n\n    return (\n        <Wrapper>\n            <FlybyLogo />\n            <Title>{state.language?.LIVE_SALES.toUpperCase()}</Title>\n            {/* <SearchBar\n                onChange={searchAuction}\n                type=\"text\"\n                placeholder=\"Paste the address to search for auction\"\n            /> */}\n            {!account || !chainId ? (\n                <WrapperPagination>\n                    <NoMarket>Please connect your wallet</NoMarket>\n                </WrapperPagination>\n            ) : !noData && datas && datas.length === 0 ? (\n                <WrapperPagination>\n                    <NoMarket>{state.language?.NO_LIVE_MARKET}</NoMarket>\n                </WrapperPagination>\n            ) : !dataMap ? (\n                <LoadingComponent />\n            ) : (\n                <>\n                    <WrapperAuctions>\n                        {valueSearch ? (\n                            !loading ? (\n                                dataSearch ? (\n                                    dataSearch.map((item: any, index: any) => (\n                                        <LiveCard key={index} data={item} />\n                                    ))\n                                ) : (\n                                    <NoMarket>\n                                        {state.language?.NO_LIVE_MARKET}\n                                    </NoMarket>\n                                )\n                            ) : (\n                                <LoadingComponent />\n                            )\n                        ) : dataMap ? (\n                            dataMap.map((item: any, index: any) => (\n                                <LiveCard key={index} data={item} />\n                            ))\n                        ) : (\n                            <></>\n                        )}\n                    </WrapperAuctions>\n                    <WrapperPagination>\n                        {valueSearch ? (\n                            !loading ? (\n                                dataSearch ? (\n                                    <Pagination\n                                        setPages={setPage}\n                                        num={numPageSearch}\n                                        currentPage={currentPage}\n                                    />\n                                ) : (\n                                    <></>\n                                )\n                            ) : (\n                                <></>\n                            )\n                        ) : dataMap ? (\n                            <Pagination\n                                setPages={setPage}\n                                num={numPage}\n                                currentPage={currentPage}\n                            />\n                        ) : (\n                            <></>\n                        )}\n                    </WrapperPagination>\n                </>\n            )}\n        </Wrapper>\n    );\n};\n\nexport default LiveAuctions;\n"],"sourceRoot":""}