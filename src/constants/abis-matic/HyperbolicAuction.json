{
  "address": "0x9a5DEdeE49c6dD26AcE53138C91323CDff034347",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commitment",
          "type": "uint256"
        }
      ],
      "name": "AddedCommitment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "AdminRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "AdminRoleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "AuctionCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "AuctionFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minimumPrice",
          "type": "uint256"
        }
      ],
      "name": "AuctionPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "AuctionTimeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "AuctionWalletUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_data",
          "type": "string"
        }
      ],
      "name": "DocumentRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_data",
          "type": "string"
        }
      ],
      "name": "DocumentUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "MinterRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "MinterRoleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "OperatorRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "OperatorRoleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "SmartContractRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "SmartContractRoleRemoved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPERATOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SMART_CONTRACT_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addAdminRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addMinterRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addOperatorRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addSmartContractRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionEnded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionSuccessful",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "calls",
          "type": "bytes[]"
        },
        {
          "internalType": "bool",
          "name": "revertOnFail",
          "type": "bool"
        }
      ],
      "name": "batch",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "successes",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_commitment",
          "type": "uint256"
        }
      ],
      "name": "calculateCommitment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clearingPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "readAndAgreedToMarketParticipationAgreement",
          "type": "bool"
        }
      ],
      "name": "commitEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "readAndAgreedToMarketParticipationAgreement",
          "type": "bool"
        }
      ],
      "name": "commitTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "readAndAgreedToMarketParticipationAgreement",
          "type": "bool"
        }
      ],
      "name": "commitTokensFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_status",
          "type": "bool"
        }
      ],
      "name": "enableList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalizeTimeExpired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDocuments",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_paymentCurrency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_factor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minimumPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pointList",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "getAuctionInitData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseInformation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getDocument",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDocumentCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getDocumentName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasAdminRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasMinterRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasOperatorRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasSmartContractRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "initAccessControls",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_paymentCurrency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_factor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minimumPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pointList",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "initAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "initMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketInfo",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "startTime",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "endTime",
          "type": "uint64"
        },
        {
          "internalType": "uint128",
          "name": "totalTokens",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketParticipationAgreement",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketPrice",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "minimumPrice",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "alpha",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketStatus",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "commitmentsTotal",
          "type": "uint128"
        },
        {
          "internalType": "bool",
          "name": "finalized",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "usePointList",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketTemplate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymentCurrency",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permitToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pointList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFunction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeAdminRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "removeDocument",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeMinterRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeOperatorRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeSmartContractRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumPrice",
          "type": "uint256"
        }
      ],
      "name": "setAuctionPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "name": "setAuctionTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "setAuctionWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_data",
          "type": "string"
        }
      ],
      "name": "setDocument",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_name",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_data",
          "type": "string[]"
        }
      ],
      "name": "setDocuments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_list",
          "type": "address"
        }
      ],
      "name": "setList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "tokensClaimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "claimerCommitment",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTokensCommitted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9568b2fdee1862c6017d13fb761dd26ebd491d18316d4c309cd1fa04dbd825e5",
  "receipt": {
    "to": null,
    "from": "0x00B91B2F8aFE87FCDc2b3fFA9ee2278cd1E4DDf8",
    "contractAddress": "0x9a5DEdeE49c6dD26AcE53138C91323CDff034347",
    "transactionIndex": 5,
    "gasUsed": "4628971",
    "logsBloom": "0x
    "blockHash": "0x994d0e81f0ad8a6f7955dde2dff0f037eeef8a9f5e99b510d2b0ce043d1c6698",
    "transactionHash": "0x9568b2fdee1862c6017d13fb761dd26ebd491d18316d4c309cd1fa04dbd825e5",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 21930411,
        "transactionHash": "0x9568b2fdee1862c6017d13fb761dd26ebd491d18316d4c309cd1fa04dbd825e5",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000000b91b2f8afe87fcdc2b3ffa9ee2278cd1e4ddf8",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000398f160a7501000000000000000000000000000000000000000000000000009f31267dacb9f700000000000000000000000000000000000000000000000178c135c3b2005b2f7a0000000000000000000000000000000000000000000000009ef79767a244f600000000000000000000000000000000000000000000000178c16f52c80ad0307a",
        "logIndex": 12,
        "blockHash": "0x994d0e81f0ad8a6f7955dde2dff0f037eeef8a9f5e99b510d2b0ce043d1c6698"
      }
    ],
    "blockNumber": 21930411,
    "cumulativeGasUsed": "4896215",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "0bb2481c0a33b756a35d8c75b9e1dee6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commitment\",\"type\":\"uint256\"}],\"name\":\"AddedCommitment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AdminRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AdminRoleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"AuctionCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"AuctionFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumPrice\",\"type\":\"uint256\"}],\"name\":\"AuctionPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"AuctionTimeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"AuctionWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_data\",\"type\":\"string\"}],\"name\":\"DocumentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_data\",\"type\":\"string\"}],\"name\":\"DocumentUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MinterRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MinterRoleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"OperatorRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"OperatorRoleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SmartContractRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SmartContractRoleRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SMART_CONTRACT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addOperatorRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addSmartContractRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionSuccessful\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"calls\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"revertOnFail\",\"type\":\"bool\"}],\"name\":\"batch\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"successes\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commitment\",\"type\":\"uint256\"}],\"name\":\"calculateCommitment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"readAndAgreedToMarketParticipationAgreement\",\"type\":\"bool\"}],\"name\":\"commitEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readAndAgreedToMarketParticipationAgreement\",\"type\":\"bool\"}],\"name\":\"commitTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readAndAgreedToMarketParticipationAgreement\",\"type\":\"bool\"}],\"name\":\"commitTokensFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"enableList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizeTimeExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDocuments\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_paymentCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_factor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pointList\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"getAuctionInitData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseInformation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getDocument\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDocumentCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getDocumentName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasAdminRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasMinterRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasOperatorRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasSmartContractRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"initAccessControls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_paymentCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_factor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pointList\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"initAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketInfo\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"totalTokens\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketParticipationAgreement\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketPrice\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"minimumPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"alpha\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketStatus\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"commitmentsTotal\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"finalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"usePointList\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketTemplate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentCurrency\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pointList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFunction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"removeDocument\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeOperatorRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeSmartContractRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumPrice\",\"type\":\"uint256\"}],\"name\":\"setAuctionPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"setAuctionTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setAuctionWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_data\",\"type\":\"string\"}],\"name\":\"setDocument\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_name\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_data\",\"type\":\"string[]\"}],\"name\":\"setDocuments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_list\",\"type\":\"address\"}],\"name\":\"setList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"tokensClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimerCommitment\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensCommitted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAdminRole(address)\":{\"details\":\"The sender must have the admin role.\",\"params\":{\"_address\":\"EOA or contract receiving the new role.\"}},\"addMinterRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract receiving the new role\"}},\"addOperatorRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract receiving the new role\"}},\"addSmartContractRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract receiving the new role\"}},\"auctionEnded()\":{\"returns\":{\"_0\":\"True if auction is successful or time has ended.\"}},\"auctionSuccessful()\":{\"returns\":{\"_0\":\"True if tokenPrice is bigger or equal clearingPrice.\"}},\"batch(bytes[],bool)\":{\"params\":{\"calls\":\"An array of inputs for each call.\",\"revertOnFail\":\"If True then reverts after a failed call and stops doing further calls.\"},\"returns\":{\"results\":\"An array with the returned data of each function call, mapped one-to-one to `calls`. F1: External is ok here because this is the batch function, adding it to a batch makes no sense F2: Calls in the batch may be payable, delegatecall operates in the same context, so each call in the batch has access to msg.value C3: The length of the loop is fully under user control, so can't be exploited C7: Delegatecall is only used on the same contract, so it's safe\",\"successes\":\"An array indicating the success of a call, mapped one-to-one to `calls`.\"}},\"calculateCommitment(uint256)\":{\"params\":{\"_commitment\":\"Commitment user would like to make.\"},\"returns\":{\"_0\":\"Amount allowed to commit.\"}},\"cancelAuction()\":{\"details\":\"Admin can cancel the auction before it starts\"},\"commitEth(address,bool)\":{\"params\":{\"_beneficiary\":\"Auction participant ETH address.\"}},\"commitTokens(uint256,bool)\":{\"params\":{\"_amount\":\"Amount of tokens to commit.\"}},\"commitTokensFrom(address,uint256,bool)\":{\"details\":\"Users must approve contract prior to committing tokens to auction\"},\"finalize()\":{\"details\":\"Transfer contract funds to initialized wallet.\"},\"finalizeTimeExpired()\":{\"returns\":{\"_0\":\"Returns true if 7 days have passed since the end of the auction\"}},\"finalized()\":{\"returns\":{\"_0\":\"Returns true if market has been finalized\"}},\"getAllDocuments()\":{\"returns\":{\"_0\":\"string List of all documents names present in the contract.\"}},\"getAuctionInitData(address,address,uint256,uint256,uint256,address,uint256,uint256,address,address,address)\":{\"params\":{\"_endTime\":\"Auction end time.\",\"_factor\":\"Inflection point of the auction.\",\"_funder\":\"The address that funds the token for HyperbolicAuction.\",\"_minimumPrice\":\"The minimum auction price.\",\"_paymentCurrency\":\"The currency the HyperbolicAuction accepts for payment. Can be ETH or token address.\",\"_startTime\":\"Auction start time.\",\"_token\":\"Address of the token being sold.\",\"_totalTokens\":\"The total number of tokens to sell in auction.\",\"_wallet\":\"Address where collected funds will be forwarded to.\"},\"returns\":{\"_data\":\"All the data in bytes format.\"}},\"getDocument(string)\":{\"params\":{\"_name\":\"Name of the document\"},\"returns\":{\"_0\":\"string The data associated with the document.\",\"_1\":\"uint256 the timestamp at which the document was last modified.\"}},\"getDocumentCount()\":{\"returns\":{\"_0\":\"uint256 Count of the document names present in the contract.\"}},\"getDocumentName(uint256)\":{\"returns\":{\"_0\":\"string Name of the document name.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasAdminRole(address)\":{\"params\":{\"_address\":\"EOA or contract being checked.\"},\"returns\":{\"_0\":\"bool True if the account has the role or false if it does not.\"}},\"hasMinterRole(address)\":{\"params\":{\"_address\":\"EOA or contract being checked\"},\"returns\":{\"_0\":\"bool True if the account has the role or false if it does not\"}},\"hasOperatorRole(address)\":{\"params\":{\"_address\":\"EOA or contract being checked\"},\"returns\":{\"_0\":\"bool True if the account has the role or false if it does not\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"hasSmartContractRole(address)\":{\"params\":{\"_address\":\"EOA or contract being checked\"},\"returns\":{\"_0\":\"bool True if the account has the role or false if it does not\"}},\"initAccessControls(address)\":{\"params\":{\"_admin\":\"Admins address.\"}},\"initAuction(address,address,uint256,uint256,uint256,address,uint256,uint256,address,address,address)\":{\"details\":\"Init function\",\"params\":{\"_admin\":\"Address that can finalize auction.\",\"_endTime\":\"Auction end time\",\"_factor\":\"Inflection point of the auction\",\"_funder\":\"The address that funds the token for HyperbolicAuction\",\"_minimumPrice\":\"The minimum auction price\",\"_paymentCurrency\":\"The currency the HyperbolicAuction accepts for payment. Can be ETH or token address\",\"_pointList\":\"Address that will manage auction approvals.\",\"_startTime\":\"Auction start time\",\"_token\":\"Address of the token being sold\",\"_totalTokens\":\"The total number of tokens to sell in auction\",\"_wallet\":\"Address where collected funds will be forwarded to\"}},\"initMarket(bytes)\":{\"params\":{\"_data\":\"Encoded data for initialization.\"}},\"marketParticipationAgreement()\":{\"details\":\"Attribution to the awesome delta.financial contracts\"},\"priceFunction()\":{\"returns\":{\"_0\":\"Fixed start price or minimum price if outside of auction time, otherwise calculated current price.\"}},\"removeAdminRole(address)\":{\"details\":\"The sender must have the admin role.\",\"params\":{\"_address\":\"EOA or contract affected.\"}},\"removeMinterRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract affected\"}},\"removeOperatorRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract affected\"}},\"removeSmartContractRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract affected\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setAuctionPrice(uint256)\":{\"params\":{\"_minimumPrice\":\"Auction minimum price.\"}},\"setAuctionTime(uint256,uint256)\":{\"params\":{\"_endTime\":\"Auction end time.\",\"_startTime\":\"Auction start time.\"}},\"setAuctionWallet(address)\":{\"params\":{\"_wallet\":\"Auction wallet is where funds will be sent.\"}},\"tokenPrice()\":{\"returns\":{\"_0\":\"Average token price.\"}},\"tokensClaimable(address)\":{\"params\":{\"_user\":\"Auction participant address.\"},\"returns\":{\"claimerCommitment\":\"User commitments reduced by already claimed tokens.\"}},\"totalTokensCommitted()\":{\"returns\":{\"_0\":\"Number of tokens commited.\"}}},\"stateVariables\":{\"marketTemplate\":{\"details\":\"For different marketplace types, this must be incremented.\"}},\"version\":1},\"userdoc\":{\"events\":{\"MinterRoleGranted(address,address)\":{\"notice\":\"Events for adding and removing various roles\"}},\"kind\":\"user\",\"methods\":{\"MINTER_ROLE()\":{\"notice\":\"Role definitions\"},\"addAdminRole(address)\":{\"notice\":\"Grants the admin role to an address.\"},\"addMinterRole(address)\":{\"notice\":\"Grants the minter role to an address\"},\"addOperatorRole(address)\":{\"notice\":\"Grants the operator role to an address\"},\"addSmartContractRole(address)\":{\"notice\":\"Grants the smart contract role to an address\"},\"auctionEnded()\":{\"notice\":\"Checks if the auction has ended.\"},\"auctionSuccessful()\":{\"notice\":\"Successful if tokens sold equals totalTokens.\"},\"batch(bytes[],bool)\":{\"notice\":\"Allows batched call to self (this contract).\"},\"calculateCommitment(uint256)\":{\"notice\":\"Calculates the amount able to be committed during an auction.\"},\"cancelAuction()\":{\"notice\":\"Cancel Auction\"},\"clearingPrice()\":{\"notice\":\"The current clearing price of the Hyperbolic auction\"},\"commitEth(address,bool)\":{\"notice\":\"Checks the amount of ETH to commit and adds the commitment. Refunds the buyer if commit is too high.\"},\"commitTokens(uint256,bool)\":{\"notice\":\"Buy Tokens by commiting approved ERC20 tokens to this contract address.\"},\"finalize()\":{\"notice\":\"Auction finishes successfully above the reserve\"},\"getAllDocuments()\":{\"notice\":\"Used to retrieve a full list of documents attached to the smart contract.\"},\"getAuctionInitData(address,address,uint256,uint256,uint256,address,uint256,uint256,address,address,address)\":{\"notice\":\"Collects data to initialize the auction and encodes them.\"},\"getDocument(string)\":{\"notice\":\"Used to return the details of a document with a known name (`string`).\"},\"getDocumentCount()\":{\"notice\":\"Used to retrieve the total documents in the smart contract.\"},\"getDocumentName(uint256)\":{\"notice\":\"Used to retrieve the document name from index in the smart contract.\"},\"hasAdminRole(address)\":{\"notice\":\"Used to check whether an address has the admin role.\"},\"hasMinterRole(address)\":{\"notice\":\"Used to check whether an address has the minter role\"},\"hasOperatorRole(address)\":{\"notice\":\"Used to check whether an address has the operator role\"},\"hasSmartContractRole(address)\":{\"notice\":\"Used to check whether an address has the smart contract role\"},\"initAccessControls(address)\":{\"notice\":\"Initializes access controls.\"},\"initAuction(address,address,uint256,uint256,uint256,address,uint256,uint256,address,address,address)\":{\"notice\":\"Initializes main contract variables and transfers funds for the auction.\"},\"initMarket(bytes)\":{\"notice\":\"Decodes and hands auction data to the initAuction function.\"},\"marketTemplate()\":{\"notice\":\"FLYBYMarket template id.\"},\"permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Call wrapper that performs `ERC20.permit` on `token`. Lookup `IERC20.permit`. F6: Parameters can be used front-run the permit and the user's permit will fail (due to nonce or other revert) if part of a batch this could be used to grief once as the second call would not need the permit\"},\"priceFunction()\":{\"notice\":\"Returns auction price in any time.\"},\"removeAdminRole(address)\":{\"notice\":\"Removes the admin role from an address.\"},\"removeMinterRole(address)\":{\"notice\":\"Removes the minter role from an address\"},\"removeOperatorRole(address)\":{\"notice\":\"Removes the operator role from an address\"},\"removeSmartContractRole(address)\":{\"notice\":\"Removes the smart contract role from an address\"},\"setAuctionPrice(uint256)\":{\"notice\":\"Admin can set start and min price through this function.\"},\"setAuctionTime(uint256,uint256)\":{\"notice\":\"Admin can set start and end time through this function.\"},\"setAuctionWallet(address)\":{\"notice\":\"Admin can set the auction wallet through this function.\"},\"tokenPrice()\":{\"notice\":\"Calculates the average price of each token from all commitments.\"},\"tokensClaimable(address)\":{\"notice\":\"How many tokens the user is able to claim.\"},\"totalTokensCommitted()\":{\"notice\":\"Calculates total amount of tokens committed at current auction price.\"},\"withdrawTokens()\":{\"notice\":\"Withdraws bought tokens, or returns commitment if the sale is unsuccessful.\"},\"withdrawTokens(address)\":{\"notice\":\"Withdraw your tokens once the Auction has ended.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auctions/HyperbolicAuction.sol\":\"HyperbolicAuction\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Access/FLYBYAccessControls.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./FLYBYAdminAccess.sol\\\";\\n\\ncontract FLYBYAccessControls is FLYBYAdminAccess {\\n    /// @notice Role definitions\\n    bytes32 public constant MINTER_ROLE = keccak256(\\\"MINTER_ROLE\\\");\\n    bytes32 public constant SMART_CONTRACT_ROLE = keccak256(\\\"SMART_CONTRACT_ROLE\\\");\\n    bytes32 public constant OPERATOR_ROLE = keccak256(\\\"OPERATOR_ROLE\\\");\\n\\n    /// @notice Events for adding and removing various roles\\n\\n    event MinterRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event MinterRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event OperatorRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event OperatorRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event SmartContractRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event SmartContractRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    /**\\n     * @notice Used to check whether an address has the minter role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasMinterRole(address _address) public view returns (bool) {\\n        return hasRole(MINTER_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Used to check whether an address has the smart contract role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasSmartContractRole(address _address) public view returns (bool) {\\n        return hasRole(SMART_CONTRACT_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Used to check whether an address has the operator role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasOperatorRole(address _address) public view returns (bool) {\\n        return hasRole(OPERATOR_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Grants the minter role to an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract receiving the new role\\n     */\\n    function addMinterRole(address _address) external {\\n        grantRole(MINTER_ROLE, _address);\\n        emit MinterRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the minter role from an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract affected\\n     */\\n    function removeMinterRole(address _address) external {\\n        revokeRole(MINTER_ROLE, _address);\\n        emit MinterRoleRemoved(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Grants the smart contract role to an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract receiving the new role\\n     */\\n    function addSmartContractRole(address _address) external {\\n        grantRole(SMART_CONTRACT_ROLE, _address);\\n        emit SmartContractRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the smart contract role from an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract affected\\n     */\\n    function removeSmartContractRole(address _address) external {\\n        revokeRole(SMART_CONTRACT_ROLE, _address);\\n        emit SmartContractRoleRemoved(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Grants the operator role to an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract receiving the new role\\n     */\\n    function addOperatorRole(address _address) external {\\n        grantRole(OPERATOR_ROLE, _address);\\n        emit OperatorRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the operator role from an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract affected\\n     */\\n    function removeOperatorRole(address _address) external {\\n        revokeRole(OPERATOR_ROLE, _address);\\n        emit OperatorRoleRemoved(_address, _msgSender());\\n    }\\n}\",\"keccak256\":\"0x15d26912cdf5e68c3bf91040671f5c6f863e32b72906663c4007777abcb5d1e3\",\"license\":\"MIT\"},\"contracts/Access/FLYBYAdminAccess.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../OpenZeppelin/access/AccessControl.sol\\\";\\n\\ncontract FLYBYAdminAccess is AccessControl {\\n    bool private initAccess;\\n    event AdminRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event AdminRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    /**\\n     * @notice Initializes access controls.\\n     * @param _admin Admins address.\\n     */\\n    function initAccessControls(address _admin) public {\\n        require(!initAccess, \\\"Already initialised\\\");\\n        require(_admin != address(0), \\\"Incorrect input\\\");\\n        _setupRole(DEFAULT_ADMIN_ROLE, _admin);\\n        initAccess = true;\\n    }\\n\\n    /**\\n     * @notice Used to check whether an address has the admin role.\\n     * @param _address EOA or contract being checked.\\n     * @return bool True if the account has the role or false if it does not.\\n     */\\n    function hasAdminRole(address _address) public view returns (bool) {\\n        return hasRole(DEFAULT_ADMIN_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Grants the admin role to an address.\\n     * @dev The sender must have the admin role.\\n     * @param _address EOA or contract receiving the new role.\\n     */\\n    function addAdminRole(address _address) external {\\n        grantRole(DEFAULT_ADMIN_ROLE, _address);\\n        emit AdminRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the admin role from an address.\\n     * @dev The sender must have the admin role.\\n     * @param _address EOA or contract affected.\\n     */\\n    function removeAdminRole(address _address) external {\\n        revokeRole(DEFAULT_ADMIN_ROLE, _address);\\n        emit AdminRoleRemoved(_address, _msgSender());\\n    }\\n}\",\"keccak256\":\"0x043cc7e6c78cafc685a1348e2af7fb6d49dd66383605b5265383a795f9388f9a\",\"license\":\"MIT\"},\"contracts/Auctions/HyperbolicAuction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../OpenZeppelin/utils/ReentrancyGuard.sol\\\";\\nimport \\\"../Access/FLYBYAccessControls.sol\\\";\\nimport \\\"../Utils/SafeTransfer.sol\\\";\\nimport \\\"../Utils/BoringBatchable.sol\\\";\\nimport \\\"../Utils/BoringERC20.sol\\\";\\nimport \\\"../Utils/BoringMath.sol\\\";\\nimport \\\"../Utils/Documents.sol\\\";\\nimport \\\"../Interfaces/IPointList.sol\\\";\\nimport \\\"../Interfaces/IFlybyMarket.sol\\\";\\n\\n\\ncontract HyperbolicAuction is IFlybyMarket, FLYBYAccessControls, BoringBatchable, SafeTransfer, Documents , ReentrancyGuard  {\\n    using BoringERC20 for IERC20;\\n    using BoringMath for uint256;\\n    using BoringMath128 for uint128;\\n    using BoringMath64 for uint64;\\n\\n    /**\\n     * FLYBYMarket template id.\\n     * @dev For different marketplace types, this must be incremented.\\n     */\\n    uint256 public constant override marketTemplate = 4;\\n    address private constant ETH_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\\n    struct MarketInfo {\\n        uint64 startTime;\\n        uint64 endTime;\\n        uint128 totalTokens;\\n    }\\n    MarketInfo public marketInfo;\\n\\n    struct MarketPrice {\\n        uint128 minimumPrice;\\n        uint128 alpha;\\n    }\\n    MarketPrice public marketPrice;\\n\\n    struct MarketStatus {\\n        uint128 commitmentsTotal;\\n        bool finalized;\\n        bool usePointList;\\n\\n    }\\n    MarketStatus public marketStatus;\\n\\n    address public auctionToken;\\n    address public paymentCurrency;\\n    address payable public wallet;\\n    address public pointList;\\n\\n    mapping(address => uint256) public commitments;\\n    mapping(address => uint256) public claimed;\\n    \\n    event AuctionTimeUpdated(uint256 startTime, uint256 endTime); \\n    event AuctionPriceUpdated( uint256 minimumPrice); \\n    event AuctionWalletUpdated(address wallet); \\n    event AddedCommitment(address addr, uint256 commitment);\\n    event AuctionFinalized();\\n    event AuctionCancelled();\\n\\n    /**\\n     * @notice Initializes main contract variables and transfers funds for the auction.\\n     * @dev Init function\\n     * @param _funder The address that funds the token for HyperbolicAuction\\n     * @param _token Address of the token being sold\\n     * @param _paymentCurrency The currency the HyperbolicAuction accepts for payment. Can be ETH or token address\\n     * @param _totalTokens The total number of tokens to sell in auction\\n     * @param _startTime Auction start time\\n     * @param _endTime Auction end time\\n     * @param _factor Inflection point of the auction\\n     * @param _minimumPrice The minimum auction price\\n     * @param _admin Address that can finalize auction.\\n     * @param _pointList Address that will manage auction approvals.\\n     * @param _wallet Address where collected funds will be forwarded to\\n     */\\n    function initAuction(\\n        address _funder,\\n        address _token,\\n        uint256 _totalTokens,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        address _paymentCurrency,\\n        uint256 _factor,\\n        uint256 _minimumPrice,\\n        address _admin,\\n        address _pointList,\\n        address payable _wallet\\n    ) public {\\n        require(_startTime < 10000000000, \\\"HyperbolicAuction: enter an unix timestamp in seconds, not miliseconds\\\");\\n        require(_endTime < 10000000000, \\\"HyperbolicAuction: enter an unix timestamp in seconds, not miliseconds\\\");\\n        require(_startTime >= block.timestamp, \\\"HyperbolicAuction: start time is before current time\\\");\\n        require(_totalTokens > 0,\\\"HyperbolicAuction: total tokens must be greater than zero\\\");\\n        require(_endTime > _startTime, \\\"HyperbolicAuction: end time must be older than start time\\\");\\n        require(_minimumPrice > 0, \\\"HyperbolicAuction: minimum price must be greater than 0\\\"); \\n        require(_wallet != address(0), \\\"HyperbolicAuction: wallet is the zero address\\\");\\n        require(_admin != address(0), \\\"HyperbolicAuction: admin is the zero address\\\");\\n        require(_token != address(0), \\\"HyperbolicAuction: token is the zero address\\\");\\n        require(IERC20(_token).decimals() == 18, \\\"HyperbolicAuction: Token does not have 18 decimals\\\");\\n        if (_paymentCurrency != ETH_ADDRESS) {\\n            require(IERC20(_paymentCurrency).decimals() > 0, \\\"HyperbolicAuction: Payment currency is not ERC20\\\");\\n        }\\n\\n        marketInfo.startTime = BoringMath.to64(_startTime);\\n        marketInfo.endTime = BoringMath.to64(_endTime);\\n        marketInfo.totalTokens = BoringMath.to128(_totalTokens);\\n\\n        marketPrice.minimumPrice = BoringMath.to128(_minimumPrice);\\n\\n        auctionToken = _token;\\n        paymentCurrency = _paymentCurrency;\\n        wallet = _wallet;\\n\\n        initAccessControls(_admin);\\n        \\n        _setList(_pointList);\\n\\n        uint256 _duration = _endTime - _startTime;\\n        uint256 _alpha = _duration.mul(_minimumPrice);\\n        marketPrice.alpha = BoringMath.to128(_alpha);\\n\\n        _safeTransferFrom(_token, _funder, _totalTokens);\\n    }\\n\\n    /************************************\\n     *          Auction Price\\n     ************************************/\\n\\n    /**\\n     * @notice Calculates the average price of each token from all commitments.\\n     * @return Average token price.\\n     */\\n    function tokenPrice() public view returns (uint256) {\\n        return uint256(marketStatus.commitmentsTotal)\\n            .mul(1e18).div(uint256(marketInfo.totalTokens));\\n    }\\n\\n    /**\\n     * @notice Returns auction price in any time.\\n     * @return Fixed start price or minimum price if outside of auction time, otherwise calculated current price.\\n     */\\n    function priceFunction() public view returns (uint256) {\\n        if (block.timestamp <= uint256(marketInfo.startTime)) {\\n            return uint256(type(uint256).max);\\n        }\\n        if (block.timestamp >= uint256(marketInfo.endTime)) {\\n            return uint256(marketPrice.minimumPrice);\\n        }\\n        return _currentPrice();\\n    }\\n\\n    /// @notice The current clearing price of the Hyperbolic auction\\n    function clearingPrice() public view returns (uint256) {\\n        if (tokenPrice() > priceFunction()) {\\n            return tokenPrice();\\n        }\\n        return priceFunction();\\n    }\\n\\n    /**\\n     * @notice Calculates price during the auction.\\n     * @return Current auction price.\\n     */\\n    function _currentPrice() private view returns (uint256) {\\n        uint256 elapsed = block.timestamp.sub(uint256(marketInfo.startTime));\\n        uint256 currentPrice = uint256(marketPrice.alpha).div(elapsed);\\n        return currentPrice;\\n    }\\n\\n    /*********************************\\n     *         Commit Tokens\\n     *********************************/\\n\\n    /**\\n     * @notice Buy Tokens by committing ETH to this contract address\\n     * @dev Needs sufficient gas limit for additional state changes\\n     */\\n    receive() external payable {\\n        revertBecauseUserDidNotProvideAgreement();\\n    }\\n\\n    /** \\n     * @dev Attribution to the awesome delta.financial contracts\\n     */  \\n    function marketParticipationAgreement() public pure returns (string memory) {\\n        return \\\"I understand that I'm interacting with a smart contract. I understand that tokens commited are subject to the token issuer and local laws where applicable. I reviewed code of the smart contract and understand it fully. I agree to not hold developers or other people associated with the project liable for any losses or misunderstandings\\\";\\n    }\\n    /** \\n     * @dev Not using modifiers is a purposeful choice for code readability.\\n     */ \\n    function revertBecauseUserDidNotProvideAgreement() internal pure {\\n        revert(\\\"No agreement provided, please review the smart contract before interacting with it\\\");\\n    }\\n\\n    /**\\n     * @notice Checks the amount of ETH to commit and adds the commitment. Refunds the buyer if commit is too high.\\n     * @param _beneficiary Auction participant ETH address.\\n     */\\n    function commitEth(\\n        address payable _beneficiary,\\n        bool readAndAgreedToMarketParticipationAgreement\\n    ) \\n        public payable\\n    {\\n        require(paymentCurrency == ETH_ADDRESS, \\\"HyperbolicAuction: payment currency is not ETH address\\\");\\n\\n        if(readAndAgreedToMarketParticipationAgreement == false) {\\n            revertBecauseUserDidNotProvideAgreement();\\n        }\\n        require(msg.value > 0, \\\"HyperbolicAuction: Value must be higher than 0\\\");\\n        uint256 ethToTransfer = calculateCommitment(msg.value);\\n        uint256 ethToRefund = msg.value.sub(ethToTransfer);\\n        if (ethToTransfer > 0) {\\n            _addCommitment(_beneficiary, ethToTransfer);\\n        }\\n        if (ethToRefund > 0) {\\n            _beneficiary.transfer(ethToRefund);\\n        }\\n        \\n        require(marketStatus.commitmentsTotal <= address(this).balance, \\\"DutchAuction: The committed ETH exceeds the balance\\\");\\n    }\\n\\n    /**\\n     * @notice Buy Tokens by commiting approved ERC20 tokens to this contract address.\\n     * @param _amount Amount of tokens to commit.\\n     */\\n    function commitTokens(uint256 _amount, bool readAndAgreedToMarketParticipationAgreement) public {\\n        commitTokensFrom(msg.sender, _amount, readAndAgreedToMarketParticipationAgreement);\\n    }\\n\\n    /// @dev Users must approve contract prior to committing tokens to auction\\n    function commitTokensFrom(\\n        address _from,\\n        uint256 _amount,\\n        bool readAndAgreedToMarketParticipationAgreement\\n    )\\n        public nonReentrant\\n    {\\n        require(paymentCurrency != ETH_ADDRESS, \\\"HyperbolicAuction: payment currency is not a token\\\");\\n        if(readAndAgreedToMarketParticipationAgreement == false) {\\n            revertBecauseUserDidNotProvideAgreement();\\n        }\\n        uint256 tokensToTransfer = calculateCommitment(_amount);\\n        if (tokensToTransfer > 0) {\\n            _safeTransferFrom(paymentCurrency, msg.sender, tokensToTransfer);\\n            _addCommitment(_from, tokensToTransfer);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates total amount of tokens committed at current auction price.\\n     * @return Number of tokens commited.\\n     */\\n    function totalTokensCommitted() public view returns (uint256) {\\n        return uint256(marketStatus.commitmentsTotal).mul(1e18).div(clearingPrice());\\n    }\\n\\n    /**\\n     * @notice Calculates the amount able to be committed during an auction.\\n     * @param _commitment Commitment user would like to make.\\n     * @return Amount allowed to commit.\\n     */\\n    function calculateCommitment(uint256 _commitment) public view returns (uint256 ) {\\n        uint256 maxCommitment = uint256(marketInfo.totalTokens).mul(clearingPrice()).div(1e18);\\n        if (uint256(marketStatus.commitmentsTotal).add(_commitment) > maxCommitment) {\\n            return maxCommitment.sub(uint256(marketStatus.commitmentsTotal));\\n        }\\n        return _commitment;\\n    }\\n\\n\\n    /**\\n     * @notice Updates commitment for this address and total commitment of the auction.\\n     * @param _addr Bidders address.\\n     * @param _commitment The amount to commit.\\n     */\\n    function _addCommitment(address _addr, uint256 _commitment) internal {\\n        require(block.timestamp >= uint256(marketInfo.startTime) && block.timestamp <= uint256(marketInfo.endTime), \\\"HyperbolicAuction: outside auction hours\\\"); \\n        MarketStatus storage status = marketStatus;\\n        require(!status.finalized, \\\"HyperbolicAuction: auction already finalized\\\");\\n\\n        uint256 newCommitment = commitments[_addr].add(_commitment);\\n        if (status.usePointList) {\\n            require(IPointList(pointList).hasPoints(_addr, newCommitment));\\n        }\\n\\n        commitments[_addr] = newCommitment;\\n        status.commitmentsTotal = BoringMath.to128(uint256(status.commitmentsTotal).add(_commitment));\\n        emit AddedCommitment(_addr, _commitment);\\n    }\\n\\n    /***********************************\\n     *        Finalize Auction\\n     ***********************************/\\n\\n    /**\\n     * @notice Successful if tokens sold equals totalTokens.\\n     * @return True if tokenPrice is bigger or equal clearingPrice.\\n     */\\n    function auctionSuccessful() public view returns (bool) {\\n        return tokenPrice() >= clearingPrice();\\n    }\\n\\n    /**\\n     * @notice Checks if the auction has ended.\\n     * @return True if auction is successful or time has ended.\\n     */\\n    function auctionEnded() public view returns (bool) {\\n        return auctionSuccessful() || block.timestamp > uint256(marketInfo.endTime);\\n    }\\n\\n    /**\\n     * @return Returns true if market has been finalized\\n     */\\n    function finalized() public view returns (bool) {\\n        return marketStatus.finalized;\\n    }\\n\\n    /**\\n     * @return Returns true if 7 days have passed since the end of the auction\\n     */\\n    function finalizeTimeExpired() public view returns (bool) {\\n        return uint256(marketInfo.endTime) + 7 days < block.timestamp;\\n    }\\n\\n    /**\\n     * @notice Auction finishes successfully above the reserve\\n     * @dev Transfer contract funds to initialized wallet.\\n     */\\n    function finalize()\\n        public nonReentrant\\n    {\\n        require(hasAdminRole(msg.sender) \\n                || wallet == msg.sender\\n                || hasSmartContractRole(msg.sender) \\n                || finalizeTimeExpired(), \\\"HyperbolicAuction: sender must be an admin\\\");\\n        MarketStatus storage status = marketStatus;\\n        MarketInfo storage info = marketInfo;\\n\\n        require(!status.finalized, \\\"HyperbolicAuction: auction already finalized\\\");\\n        if (auctionSuccessful()) {\\n            _safeTokenPayment(paymentCurrency, wallet, uint256(status.commitmentsTotal));\\n        } else {\\n            require(block.timestamp > uint256(info.endTime), \\\"HyperbolicAuction: auction has not finished yet\\\"); \\n            _safeTokenPayment(auctionToken, wallet, uint256(info.totalTokens));\\n        }\\n        status.finalized = true;\\n        emit AuctionFinalized();\\n    }\\n\\n    /**\\n     * @notice Cancel Auction\\n     * @dev Admin can cancel the auction before it starts\\n     */\\n    function cancelAuction() public nonReentrant {\\n        require(hasAdminRole(msg.sender));\\n        MarketStatus storage status = marketStatus;\\n        require(!status.finalized, \\\"HyperbolicAuction: auction already finalized\\\");\\n        require( uint256(status.commitmentsTotal) == 0, \\\"HyperbolicAuction: auction already committed\\\" );\\n\\n        _safeTokenPayment(auctionToken, wallet, uint256(marketInfo.totalTokens));\\n\\n        status.finalized = true;\\n        emit AuctionCancelled();\\n    }\\n\\n    /** \\n     * @notice How many tokens the user is able to claim.\\n     * @param _user Auction participant address.\\n     * @return claimerCommitment User commitments reduced by already claimed tokens.\\n     */\\n    function tokensClaimable(address _user) public view returns (uint256 claimerCommitment) {\\n        if (commitments[_user] == 0) return 0;\\n        uint256 unclaimedTokens = IERC20(auctionToken).balanceOf(address(this));\\n        claimerCommitment = commitments[_user].mul(uint256(marketInfo.totalTokens)).div(uint256(marketStatus.commitmentsTotal));\\n        claimerCommitment = claimerCommitment.sub(claimed[_user]);\\n\\n        if(claimerCommitment > unclaimedTokens){\\n            claimerCommitment = unclaimedTokens;\\n        }\\n    }\\n\\n    /// @notice Withdraws bought tokens, or returns commitment if the sale is unsuccessful.\\n    function withdrawTokens() public {\\n        withdrawTokens(payable(msg.sender));\\n    }\\n\\n    /// @notice Withdraw your tokens once the Auction has ended.\\n    function withdrawTokens(address payable beneficiary) \\n        public nonReentrant\\n    {\\n        if (auctionSuccessful()) {\\n            require(marketStatus.finalized, \\\"HyperbolicAuction: not finalized\\\");\\n            uint256 tokensToClaim = tokensClaimable(beneficiary);\\n            require(tokensToClaim > 0, \\\"HyperbolicAuction: no tokens to claim\\\"); \\n            claimed[beneficiary] = claimed[beneficiary].add(tokensToClaim);\\n\\n            _safeTokenPayment(auctionToken, beneficiary, tokensToClaim);\\n        } else {\\n            require(block.timestamp > uint256(marketInfo.endTime), \\\"HyperbolicAuction: auction has not finished yet\\\");\\n            uint256 fundsCommitted = commitments[beneficiary];\\n            commitments[beneficiary] = 0;\\n            _safeTokenPayment(paymentCurrency, beneficiary, fundsCommitted);\\n        }\\n    }\\n\\n    /**********************************\\n     *           Documents\\n     **********************************/\\n\\n    function setDocument(string calldata _name, string calldata _data) external {\\n        require(hasAdminRole(msg.sender));\\n        _setDocument( _name, _data);\\n    }\\n\\n    function setDocuments(string[] calldata _name, string[] calldata _data) external {\\n        require(hasAdminRole(msg.sender) );\\n        uint256 numDocs = _name.length;\\n        for (uint256 i = 0; i < numDocs; i++) {\\n            _setDocument( _name[i], _data[i]);\\n        }\\n    }\\n\\n    function removeDocument(string calldata _name) external {\\n        require(hasAdminRole(msg.sender));\\n        _removeDocument(_name);\\n    }\\n\\n\\n    /***********************************\\n     *           Point Lists\\n     ***********************************/\\n\\n\\n    function setList(address _list) external {\\n        require(hasAdminRole(msg.sender));\\n        _setList(_list);\\n    }\\n\\n    function enableList(bool _status) external {\\n        require(hasAdminRole(msg.sender));\\n        marketStatus.usePointList = _status;\\n    }\\n\\n    function _setList(address _pointList) private {\\n        if (_pointList != address(0)) {\\n            pointList = _pointList;\\n            marketStatus.usePointList = true;\\n        }\\n    }\\n\\n    /***********************************\\n     *         Setter Auction\\n     ***********************************/\\n\\n    /**\\n     * @notice Admin can set start and end time through this function.\\n     * @param _startTime Auction start time.\\n     * @param _endTime Auction end time.\\n     */\\n    function setAuctionTime(uint256 _startTime, uint256 _endTime) external {\\n        require(hasAdminRole(msg.sender));\\n        require(_startTime < 10000000000, \\\"HyperbolicAuction: enter an unix timestamp in seconds, not miliseconds\\\");\\n        require(_endTime < 10000000000, \\\"HyperbolicAuction: enter an unix timestamp in seconds, not miliseconds\\\");\\n        require(_startTime >= block.timestamp, \\\"HyperbolicAuction: start time is before current time\\\");\\n        require(_endTime > _startTime, \\\"HyperbolicAuction: end time must be older than start price\\\");\\n        require(marketStatus.commitmentsTotal == 0, \\\"HyperbolicAuction: auction cannot have already started\\\");\\n\\n        marketInfo.startTime = BoringMath.to64(_startTime);\\n        marketInfo.endTime = BoringMath.to64(_endTime);\\n\\n        uint64 _duration = marketInfo.endTime - marketInfo.startTime;        \\n        uint256 _alpha = uint256(_duration).mul(uint256(marketPrice.minimumPrice));\\n        marketPrice.alpha = BoringMath.to128(_alpha);\\n        \\n        emit AuctionTimeUpdated(_startTime,_endTime);\\n    }\\n\\n    /**\\n     * @notice Admin can set start and min price through this function.\\n     * @param _minimumPrice Auction minimum price.\\n     */\\n    function setAuctionPrice( uint256 _minimumPrice) external {\\n        require(hasAdminRole(msg.sender));\\n        require(_minimumPrice > 0, \\\"HyperbolicAuction: minimum price must be greater than 0\\\"); \\n        require(marketStatus.commitmentsTotal == 0, \\\"HyperbolicAuction: auction cannot have already started\\\");\\n\\n        marketPrice.minimumPrice = BoringMath.to128(_minimumPrice);\\n\\n        uint64 _duration = marketInfo.endTime - marketInfo.startTime;        \\n        uint256 _alpha = uint256(_duration).mul(uint256(marketPrice.minimumPrice));\\n        marketPrice.alpha = BoringMath.to128(_alpha);\\n\\n        emit AuctionPriceUpdated(_minimumPrice);\\n    }\\n\\n    /**\\n     * @notice Admin can set the auction wallet through this function.\\n     * @param _wallet Auction wallet is where funds will be sent.\\n     */\\n    function setAuctionWallet(address payable _wallet) external {\\n        require(hasAdminRole(msg.sender));\\n        require(_wallet != address(0), \\\"HyperbolicAuction: wallet is the zero address\\\");\\n\\n        wallet = _wallet;\\n\\n        emit AuctionWalletUpdated(_wallet);\\n    }\\n\\n    /***********************************\\n     *        Market Launchers\\n     ***********************************/\\n\\n    function init(bytes calldata _data) external override payable {}\\n\\n    /**\\n     * @notice Decodes and hands auction data to the initAuction function.\\n     * @param _data Encoded data for initialization.\\n     */\\n    function initMarket(bytes calldata _data) public override {\\n        (\\n        address _funder,\\n        address _token,\\n        uint256 _totalTokens,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        address _paymentCurrency,\\n        uint256 _factor,\\n        uint256 _minimumPrice,\\n        address _admin,\\n        address _pointList,\\n        address payable _wallet\\n        ) = abi.decode(_data, (\\n            address,\\n            address,\\n            uint256,\\n            uint256,\\n            uint256,\\n            address,\\n            uint256,\\n            uint256,\\n            address,\\n            address,\\n            address\\n        ));\\n        initAuction(_funder, _token, _totalTokens, _startTime, _endTime, _paymentCurrency, _factor, _minimumPrice, _admin, _pointList, _wallet);\\n    }\\n\\n    /**\\n     * @notice Collects data to initialize the auction and encodes them.\\n     * @param _funder The address that funds the token for HyperbolicAuction.\\n     * @param _token Address of the token being sold.\\n     * @param _totalTokens The total number of tokens to sell in auction.\\n     * @param _startTime Auction start time.\\n     * @param _endTime Auction end time.\\n     * @param _paymentCurrency The currency the HyperbolicAuction accepts for payment. Can be ETH or token address.\\n     * @param _factor Inflection point of the auction.\\n     * @param _minimumPrice The minimum auction price.\\n     * @param _wallet Address where collected funds will be forwarded to.\\n     * @return _data All the data in bytes format.\\n     */\\n    function getAuctionInitData(\\n        address _funder,\\n        address _token,\\n        uint256 _totalTokens,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        address _paymentCurrency,\\n        uint256 _factor,\\n        uint256 _minimumPrice,\\n        address _admin,\\n        address _pointList,\\n        address payable _wallet\\n    )\\n        external pure returns (bytes memory _data) {\\n            return abi.encode(\\n                _funder,\\n                _token,\\n                _totalTokens,\\n                _startTime,\\n                _endTime,\\n                _paymentCurrency,\\n                _factor,\\n                _minimumPrice,\\n                _admin,\\n                _pointList,\\n                _wallet\\n            );\\n        }\\n\\n    function getBaseInformation() external view returns(\\n        address, \\n        uint64,\\n        uint64,\\n        bool \\n    ) {\\n        return (auctionToken, marketInfo.startTime, marketInfo.endTime, marketStatus.finalized);\\n    }\\n    \\n    function getTotalTokens() external view returns(uint256) {\\n        return uint256(marketInfo.totalTokens);\\n    }\\n}\",\"keccak256\":\"0x5681032dcff9dc60c029397651c00bcb886ab6a6456f57c9fbb7a3122716548b\",\"license\":\"MIT\"},\"contracts/Interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\",\"keccak256\":\"0xe4f8cb9ac9cd376f81da2348709e1f44dc0bd2fb44513c5d230702bb1b9e8b36\",\"license\":\"MIT\"},\"contracts/Interfaces/IFlybyMarket.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IFlybyMarket {\\n\\n    function init(bytes calldata data) external payable;\\n    function initMarket( bytes calldata data ) external;\\n    function marketTemplate() external view returns (uint256);\\n\\n}\",\"keccak256\":\"0xd862ab29398a22d9a62798c45017d14e702eab21756b96f13b20be4e54eb1bdf\",\"license\":\"MIT\"},\"contracts/Interfaces/IPointList.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IPointList {\\n    function isInList(address account) external view returns (bool);\\n    function hasPoints(address account, uint256 amount) external view  returns (bool);\\n    function setPoints(\\n        address[] memory accounts,\\n        uint256[] memory amounts\\n    ) external; \\n    function initPointList(address accessControl) external ;\\n\\n}\\n\",\"keccak256\":\"0x5ca6189f48425c8ef1041cecd626b6c6f66af41464fe8e149554d41632544e5c\",\"license\":\"MIT\"},\"contracts/OpenZeppelin/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/EnumerableSet.sol\\\";\\n\\nabstract contract AccessControl is Context {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    struct RoleData {\\n        EnumerableSet.AddressSet members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping (bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _roles[role].members.contains(account);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\\n        return _roles[role].members.length();\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\\n        return _roles[role].members.at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to grant\\\");\\n\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to revoke\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\\n        _roles[role].adminRole = adminRole;\\n    }\\n\\n    function _grantRole(bytes32 role, address account) private {\\n        if (_roles[role].members.add(account)) {\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) private {\\n        if (_roles[role].members.remove(account)) {\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\",\"keccak256\":\"0x70a4ac51d4857ce35422d73f70cbec83f00f568e1f95a804dcfbbe509de5a82c\",\"license\":\"MIT\"},\"contracts/OpenZeppelin/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return payable(msg.sender);\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0xe0521887b553a6c5bef0acd727645ff69535b60fe7c5947e40f19391307d70d2\",\"license\":\"MIT\"},\"contracts/OpenZeppelin/utils/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping (bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\\n\\n            bytes32 lastvalue = set._values[lastIndex];\\n\\n            // Move the last value to the index where the value to delete is\\n            set._values[toDeleteIndex] = lastvalue;\\n            // Update the index for the moved value\\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        require(set._values.length > index, \\\"EnumerableSet: index out of bounds\\\");\\n        return set._values[index];\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n}\",\"keccak256\":\"0x01c748c0e9f9c425f95c8f0e7eb6625675a4fde41b7f5444bcf6b894b375e72c\",\"license\":\"MIT\"},\"contracts/OpenZeppelin/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n        _status = _ENTERED;\\n        _;\\n        _status = _NOT_ENTERED;\\n    }\\n}\",\"keccak256\":\"0xc1656b57a49e1aad644a6cb3c589394ac337d328cec38bceef3c8d5bfd7a1949\",\"license\":\"MIT\"},\"contracts/Utils/BoringBatchable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\npragma experimental ABIEncoderV2;\\n\\n// solhint-disable avoid-low-level-calls\\n// solhint-disable no-inline-assembly\\nimport \\\"./BoringERC20.sol\\\";\\n\\ncontract BaseBoringBatchable {\\n    /// @dev Helper function to extract a useful revert message from a failed call.\\n    /// If the returned data is malformed or not correctly abi encoded then this call can fail itself.\\n    function _getRevertMsg(bytes memory _returnData) internal pure returns (string memory) {\\n        if (_returnData.length < 68) return \\\"Transaction reverted silently\\\";\\n\\n        assembly {\\n            _returnData := add(_returnData, 0x04)\\n        }\\n        return abi.decode(_returnData, (string));\\n    }\\n\\n    /**\\n     * @notice Allows batched call to self (this contract).\\n     * @param calls An array of inputs for each call.\\n     * @param revertOnFail If True then reverts after a failed call and stops doing further calls.\\n     * @return successes An array indicating the success of a call, mapped one-to-one to `calls`.\\n     * @return results An array with the returned data of each function call, mapped one-to-one to `calls`.\\n     * F1: External is ok here because this is the batch function, adding it to a batch makes no sense\\n     * F2: Calls in the batch may be payable, delegatecall operates in the same context, so each call in the batch has access to msg.value\\n     * C3: The length of the loop is fully under user control, so can't be exploited\\n     * C7: Delegatecall is only used on the same contract, so it's safe\\n     */\\n    function batch(bytes[] calldata calls, bool revertOnFail) external payable returns (bool[] memory successes, bytes[] memory results) {\\n        successes = new bool[](calls.length);\\n        results = new bytes[](calls.length);\\n        for (uint256 i = 0; i < calls.length; i++) {\\n            (bool success, bytes memory result) = address(this).delegatecall(calls[i]);\\n            require(success || !revertOnFail, _getRevertMsg(result));\\n            successes[i] = success;\\n            results[i] = result;\\n        }\\n    }\\n}\\n\\ncontract BoringBatchable is BaseBoringBatchable {\\n    /**\\n     * @notice Call wrapper that performs `ERC20.permit` on `token`.\\n     * Lookup `IERC20.permit`.\\n     * F6: Parameters can be used front-run the permit and the user's permit will fail (due to nonce or other revert)\\n     * if part of a batch this could be used to grief once as the second call would not need the permit\\n     */\\n    function permitToken(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public {\\n        token.permit(from, to, amount, deadline, v, r, s);\\n    }\\n}\",\"keccak256\":\"0xc8fa0456e38bbb57f17d2397cc712e61904564dcff041cf2c9bd1bc88d5a122d\",\"license\":\"MIT\"},\"contracts/Utils/BoringERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../Interfaces/IERC20.sol\\\";\\n\\nlibrary BoringERC20 {\\n    bytes4 private constant SIG_SYMBOL = 0x95d89b41;\\n    bytes4 private constant SIG_NAME = 0x06fdde03;\\n    bytes4 private constant SIG_DECIMALS = 0x313ce567;\\n    bytes4 private constant SIG_TRANSFER = 0xa9059cbb;\\n    bytes4 private constant SIG_TRANSFER_FROM = 0x23b872dd;\\n\\n    /**\\n     * @notice Provides a safe ERC20.symbol version which returns '???' as fallback string.\\n     * @param token The address of the ERC-20 token contract.\\n     * @return (string) Token symbol.\\n     */\\n    function safeSymbol(IERC20 token) internal view returns (string memory) {\\n        (bool success, bytes memory data) = address(token).staticcall(abi.encodeWithSelector(SIG_SYMBOL));\\n        return success && data.length > 0 ? abi.decode(data, (string)) : \\\"???\\\";\\n    }\\n\\n    /**\\n     * @notice Provides a safe ERC20.name version which returns '???' as fallback string.\\n     * @param token The address of the ERC-20 token contract.\\n     * @return (string) Token name.\\n     */\\n    function safeName(IERC20 token) internal view returns (string memory) {\\n        (bool success, bytes memory data) = address(token).staticcall(abi.encodeWithSelector(SIG_NAME));\\n        return success && data.length > 0 ? abi.decode(data, (string)) : \\\"???\\\";\\n    }\\n\\n    /**\\n     * @notice Provides a safe ERC20.decimals version which returns '18' as fallback value.\\n     * @param token The address of the ERC-20 token contract.\\n     * @return (uint8) Token decimals.\\n     */\\n    function safeDecimals(IERC20 token) internal view returns (uint8) {\\n        (bool success, bytes memory data) = address(token).staticcall(abi.encodeWithSelector(SIG_DECIMALS));\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\n    }\\n\\n    /**\\n     * @notice Provides a safe ERC20.transfer version for different ERC-20 implementations.\\n     * Reverts on a failed transfer.\\n     * @param token The address of the ERC-20 token.\\n     * @param to Transfer tokens to.\\n     * @param amount The token amount.\\n     */\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(abi.encodeWithSelector(SIG_TRANSFER, to, amount));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"BoringERC20: Transfer failed\\\");\\n    }\\n\\n    /**\\n     * @notice Provides a safe ERC20.transferFrom version for different ERC-20 implementations.\\n     * Reverts on a failed transfer.\\n     * @param token The address of the ERC-20 token.\\n     * @param from Transfer tokens from.\\n     * @param to Transfer tokens to.\\n     * @param amount The token amount.\\n     */\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"BoringERC20: TransferFrom failed\\\");\\n    }\\n}\",\"keccak256\":\"0x413926605152de55ab59259a7c23e2cd974bd316dbf777113f235f05dbc6e1bb\",\"license\":\"MIT\"},\"contracts/Utils/BoringMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nlibrary BoringMath {\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require(b > 0, \\\"BoringMath: Div zero\\\");\\n        c = a / b;\\n    }\\n\\n    function to128(uint256 a) internal pure returns (uint128 c) {\\n        require(a <= uint128(type(uint128).max), \\\"BoringMath: uint128 Overflow\\\");\\n        c = uint128(a);\\n    }\\n\\n    function to64(uint256 a) internal pure returns (uint64 c) {\\n        require(a <= uint64(type(uint64).max), \\\"BoringMath: uint64 Overflow\\\");\\n        c = uint64(a);\\n    }\\n\\n    function to32(uint256 a) internal pure returns (uint32 c) {\\n        require(a <= uint32(type(uint32).max), \\\"BoringMath: uint32 Overflow\\\");\\n        c = uint32(a);\\n    }\\n\\n    function to16(uint256 a) internal pure returns (uint16 c) {\\n        require(a <= uint16(type(uint16).max), \\\"BoringMath: uint16 Overflow\\\");\\n        c = uint16(a);\\n    }\\n\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint128.\\nlibrary BoringMath128 {\\n    function add(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint64.\\nlibrary BoringMath64 {\\n    function add(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath32 {\\n    function add(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath16 {\\n    function add(uint16 a, uint16 b) internal pure returns (uint16 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint16 a, uint16 b) internal pure returns (uint16 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\",\"keccak256\":\"0x89df8679004bb5921d308b1339717c59cdb689cedbb673cdb2510fceece81b87\",\"license\":\"MIT\"},\"contracts/Utils/Documents.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\npragma experimental ABIEncoderV2;\\n\\ncontract Documents {\\n\\n    struct Document {\\n        uint32 docIndex;\\n        uint64 lastModified;\\n        string data;\\n    }\\n\\n    mapping(string => Document) internal _documents;\\n    mapping(string => uint32) internal _docIndexes;\\n\\n    string[] _docNames;\\n\\n    event DocumentRemoved(string indexed _name, string _data);\\n    event DocumentUpdated(string indexed _name, string _data);\\n\\n    /**\\n     * @notice Used to attach a new document to the contract, or update the data or hash of an existing attached document\\n     * @dev Can only be executed by the owner of the contract.\\n     * @param _name Name of the document. It should be unique always\\n     * @param _data Off-chain data of the document from where it is accessible to investors/advisors to read.\\n     */\\n    function _setDocument(string calldata _name, string calldata _data) internal {\\n        require(bytes(_name).length > 0, \\\"Zero name is not allowed\\\");\\n        require(bytes(_data).length > 0, \\\"Should not be a empty data\\\");\\n        if (_documents[_name].lastModified == uint64(0)) {\\n            _docNames.push(_name);\\n            _documents[_name].docIndex = uint32(_docNames.length);\\n        }\\n        _documents[_name] = Document(_documents[_name].docIndex, uint64(block.timestamp), _data);\\n        emit DocumentUpdated(_name, _data);\\n    }\\n\\n    /**\\n     * @notice Used to remove an existing document from the contract by giving the name of the document.\\n     * @dev Can only be executed by the owner of the contract.\\n     * @param _name Name of the document. It should be unique always\\n     */\\n    function _removeDocument(string calldata _name) internal {\\n        require(_documents[_name].lastModified != uint64(0), \\\"Document should exist\\\");\\n        uint32 index = _documents[_name].docIndex - 1;\\n        if (index != _docNames.length - 1) {\\n            _docNames[index] = _docNames[_docNames.length - 1];\\n            _documents[_docNames[index]].docIndex = index + 1; \\n        }\\n        _docNames.pop();\\n        emit DocumentRemoved(_name, _documents[_name].data);\\n        delete _documents[_name];\\n    }\\n\\n    /**\\n     * @notice Used to return the details of a document with a known name (`string`).\\n     * @param _name Name of the document\\n     * @return string The data associated with the document.\\n     * @return uint256 the timestamp at which the document was last modified.\\n     */\\n    function getDocument(string calldata _name) external view returns (string memory, uint256) {\\n        return (\\n            _documents[_name].data,\\n            uint256(_documents[_name].lastModified)\\n        );\\n    }\\n\\n    /**\\n     * @notice Used to retrieve a full list of documents attached to the smart contract.\\n     * @return string List of all documents names present in the contract.\\n     */\\n    function getAllDocuments() external view returns (string[] memory) {\\n        return _docNames;\\n    }\\n\\n    /**\\n     * @notice Used to retrieve the total documents in the smart contract.\\n     * @return uint256 Count of the document names present in the contract.\\n     */\\n    function getDocumentCount() external view returns (uint256) {\\n        return _docNames.length;\\n    }\\n\\n    /**\\n     * @notice Used to retrieve the document name from index in the smart contract.\\n     * @return string Name of the document name.\\n     */\\n    function getDocumentName(uint256 _index) external view returns (string memory) {\\n        require(_index < _docNames.length, \\\"Index out of bounds\\\");\\n        return _docNames[_index];\\n    }\\n}\",\"keccak256\":\"0x554ef7b2fc3356ba0d2ab6c044de3db03e43bfc3103b439e20264dd12a757d5c\",\"license\":\"MIT\"},\"contracts/Utils/SafeTransfer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ncontract SafeTransfer {\\n\\n    address private constant ETH_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\\n    function _safeTokenPayment(\\n        address _token,\\n        address payable _to,\\n        uint256 _amount\\n    ) internal {\\n        if (address(_token) == ETH_ADDRESS) {\\n            _safeTransferETH(_to,_amount );\\n        } else {\\n            _safeTransfer(_token, _to, _amount);\\n        }\\n    }\\n    \\n    function _tokenPayment(\\n        address _token,\\n        address payable _to,\\n        uint256 _amount\\n    ) internal {\\n        if (address(_token) == ETH_ADDRESS) {\\n            _to.transfer(_amount);\\n        } else {\\n            _safeTransfer(_token, _to, _amount);\\n        }\\n    }\\n    \\n    function _safeApprove(address token, address to, uint value) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper: APPROVE_FAILED\\\");\\n    }\\n    \\n    function _safeTransfer(\\n        address token,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        (bool success, bytes memory data) =\\n            token.call(\\n                abi.encodeWithSelector(0xa9059cbb, to, amount)\\n            );\\n        require(success && (data.length == 0 || abi.decode(data, (bool))));\\n    }\\n\\n    function _safeTransferFrom(\\n        address token,\\n        address from,\\n        uint256 amount\\n    ) internal virtual {\\n        (bool success, bytes memory data) =\\n            token.call(\\n                abi.encodeWithSelector(0x23b872dd, from, address(this), amount)\\n            );\\n        require(success && (data.length == 0 || abi.decode(data, (bool))));\\n    }\\n\\n    function _safeTransferFrom(address token, address from, address to, uint value) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper: TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function _safeTransferETH(address to, uint value) internal {\\n        (bool success,) = to.call{value:value}(new bytes(0));\\n        require(success, \\\"TransferHelper: ETH_TRANSFER_FAILED\\\");\\n    }\\n\\n}\",\"keccak256\":\"0xe07868766e4bb0ca00fcb4b73c692b0aa2ec5d77991042f9defa64e7b30b3b41\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600160055561525d806100256000396000f3fe60806040526004361061041f5760003560e01c80638a845fc01161021e578063c6b547e611610123578063dccfe310116100ab578063e8fcf7231161007a578063e8fcf72314610bfb578063f04899d314610c1b578063f08b82e614610c30578063f5b541a614610c45578063fc4e3e0a14610c5a5761042e565b8063dccfe31014610b77578063dde51f6d14610b97578063e0e081d714610bb7578063e6594abd14610bdb5761042e565b8063d2423b51116100f2578063d2423b5114610ae1578063d539139314610b02578063d547741f14610b17578063d69d3e6214610b37578063dc97e08214610b575761042e565b8063c6b547e614610a61578063c884ef8314610a81578063c92bce8714610aa1578063ca15c87314610ac15761042e565b80639c64d0ae116101a6578063adbf377611610175578063adbf3776146109cc578063b1f16218146109ec578063b3f05b9714610a0c578063b7928b1d14610a21578063c395fcb314610a415761042e565b80639c64d0ae146109605780639fa5f50b14610980578063a217fddf146109a2578063a9d87ee6146109b75761042e565b8063919e93b5116101ed578063919e93b5146108d657806391d14854146108eb5780639478941c1461090b57806399fdb3201461092b5780639a87222c146109405761042e565b80638a845fc01461086c5780638d8f2adb1461088c5780638fa8b790146108a15780639010d07c146108b65761042e565b806349df728c1161032457806373973fcb116102ac5780637ff9b5961161027b5780637ff9b596146107ed57806381353c8e1461080257806384720f1614610822578063857d26081461084257806386433374146108575761042e565b806373973fcb1461075d57806374cf9fc51461077d5780637c516e941461079f5780637ccb6a64146107bf5761042e565b80634ddf47d4116102f35780634ddf47d4146106d5578063521eb273146106e857806354f1e126146106fd5780636595171c1461071d5780636ae260c11461073d5761042e565b806349df728c146106605780634b3e6abb146106805780634bb278f3146106a05780634dc80e15146106b55761042e565b8063314148e2116103a75780633b33fe73116103765780633b33fe73146105c65780633d15cc6d146105e65780633d1c2273146106085780633f16431a1461061d57806345a153881461063d5761042e565b8063314148e21461055757806332a0f2d71461057c57806336568abe1461059157806336d0054b146105b15761042e565b80631b3e460e116103ee5780631b3e460e146104c2578063212f8a81146104e4578063248a9ca31461050457806329762960146105245780632f2ff15d146105375761042e565b8063031bee0014610433578063099db01714610460578063113b0ab21461048d57806317026455146104ad5761042e565b3661042e5761042c610c7a565b005b600080fd5b34801561043f57600080fd5b50610448610c9b565b60405161045793929190614e52565b60405180910390f35b34801561046c57600080fd5b5061048061047b366004613995565b610cc8565b6040516104579190614146565b34801561049957600080fd5b506104806104a8366004613995565b610cea565b3480156104b957600080fd5b50610480610d04565b3480156104ce57600080fd5b506104d7610d30565b6040516104579190614151565b3480156104f057600080fd5b5061042c6104ff366004613ac7565b610d35565b34801561051057600080fd5b506104d761051f366004613bf1565b610de8565b61042c610532366004613a6e565b610dfd565b34801561054357600080fd5b5061042c610552366004613c09565b610f04565b34801561056357600080fd5b5061056c610f4c565b604051610457949392919061401d565b34801561058857600080fd5b506104d7610f84565b34801561059d57600080fd5b5061042c6105ac366004613c09565b610fb8565b3480156105bd57600080fd5b50610480610ffa565b3480156105d257600080fd5b5061042c6105e1366004613bf1565b611013565b3480156105f257600080fd5b506105fb611145565b6040516104579190613f2c565b34801561061457600080fd5b506104d7611154565b34801561062957600080fd5b5061042c610638366004613995565b61115a565b34801561064957600080fd5b506106526111bc565b604051610457929190614e2a565b34801561066c57600080fd5b5061042c61067b366004613995565b6111d6565b34801561068c57600080fd5b5061042c61069b366004613bb9565b611320565b3480156106ac57600080fd5b5061042c611350565b3480156106c157600080fd5b506104d76106d0366004613995565b6114d9565b61042c6106e3366004613c4e565b610f48565b3480156106f457600080fd5b506105fb611603565b34801561070957600080fd5b5061042c610718366004613995565b611612565b34801561072957600080fd5b5061042c610738366004613995565b611674565b34801561074957600080fd5b5061042c610758366004613c2d565b6116c9565b34801561076957600080fd5b506104d7610778366004613bf1565b61188b565b34801561078957600080fd5b50610792611905565b604051610457919061415a565b3480156107ab57600080fd5b5061042c6107ba366004613c8d565b611928565b3480156107cb57600080fd5b506107df6107da366004613c4e565b61199c565b60405161045792919061419c565b3480156107f957600080fd5b506104d7611a94565b34801561080e57600080fd5b5061042c61081d366004613c4e565b611ac7565b34801561082e57600080fd5b5061079261083d366004613aa6565b611b17565b34801561084e57600080fd5b506104d7611b5e565b34801561086357600080fd5b50610480611b70565b34801561087857600080fd5b5061042c610887366004613995565b611b99565b34801561089857600080fd5b5061042c611bfb565b3480156108ad57600080fd5b5061042c611c06565b3480156108c257600080fd5b506105fb6108d1366004613c2d565b611d05565b3480156108e257600080fd5b506104d7611d26565b3480156108f757600080fd5b50610480610906366004613c09565b611d51565b34801561091757600080fd5b5061042c610926366004613995565b611d69565b34801561093757600080fd5b506105fb611dcb565b34801561094c57600080fd5b5061042c61095b366004613995565b611dda565b34801561096c57600080fd5b5061042c61097b366004613d0f565b611e68565b34801561098c57600080fd5b50610995611e86565b60405161045791906140e6565b3480156109ae57600080fd5b506104d7611f5f565b3480156109c357600080fd5b506104d7611f64565b3480156109d857600080fd5b5061042c6109e7366004613995565b611fb5565b3480156109f857600080fd5b5061042c610a07366004613aa6565b612017565b348015610a1857600080fd5b506104806123e5565b348015610a2d57600080fd5b5061042c610a3c366004613995565b6123f5565b348015610a4d57600080fd5b50610480610a5c366004613995565b612457565b348015610a6d57600080fd5b50610792610a7c366004613bf1565b612463565b348015610a8d57600080fd5b506104d7610a9c366004613995565b612542565b348015610aad57600080fd5b5061042c610abc366004613b51565b612554565b348015610acd57600080fd5b506104d7610adc366004613bf1565b6125f8565b610af4610aef366004613b08565b61260f565b60405161045792919061404f565b348015610b0e57600080fd5b506104d7612803565b348015610b2357600080fd5b5061042c610b32366004613c09565b612815565b348015610b4357600080fd5b5061042c610b52366004613995565b61284f565b348015610b6357600080fd5b5061042c610b72366004613e25565b61286d565b348015610b8357600080fd5b5061042c610b92366004613995565b612878565b348015610ba357600080fd5b5061042c610bb2366004613c4e565b6128cd565b348015610bc357600080fd5b50610bcc6128e9565b60405161045793929190614e07565b348015610be757600080fd5b5061042c610bf6366004613995565b61290e565b348015610c0757600080fd5b506104d7610c16366004613995565b612971565b348015610c2757600080fd5b506105fb612983565b348015610c3c57600080fd5b506104d7612992565b348015610c5157600080fd5b506104d76129a8565b348015610c6657600080fd5b50610480610c75366004613995565b6129ba565b60405162461bcd60e51b8152600401610c9290614546565b60405180910390fd5b6006546001600160401b0380821691600160401b810490911690600160801b90046001600160801b031683565b6000610ce260008051602061520883398151915283611d51565b90505b919050565b6000610ce260008051602061507883398151915283611d51565b6006546000904290610d2990600160401b90046001600160401b031662093a80614ec2565b1090505b90565b600481565b60026005541415610d585760405162461bcd60e51b8152600401610c9290614d1c565b6002600555600a546001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610d9c5760405162461bcd60e51b8152600401610c92906147a0565b80610da957610da9610c7a565b6000610db48361188b565b90508015610ddd57600a54610dd3906001600160a01b031633836129d4565b610ddd8482612ab0565b505060016005555050565b60009081526020819052604090206002015490565b600a546001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610e3b5760405162461bcd60e51b8152600401610c929061466a565b80610e4857610e48610c7a565b60003411610e685760405162461bcd60e51b8152600401610c92906143d9565b6000610e733461188b565b90506000610e813483612c6c565b90508115610e9357610e938483612ab0565b8015610ed1576040516001600160a01b0385169082156108fc029083906000818181858888f19350505050158015610ecf573d6000803e3d6000fd5b505b600854476001600160801b039091161115610efe5760405162461bcd60e51b8152600401610c9290614427565b50505050565b600082815260208190526040902060020154610f2290610906612c9a565b610f3e5760405162461bcd60e51b8152600401610c929061438a565b610f488282612c9e565b5050565b6009546006546008546001600160a01b03909216926001600160401b0380831693600160401b9093041691600160801b900460ff1690565b6000610f8e611f64565b610f96611a94565b1115610fab57610fa4611a94565b9050610d2d565b610fb3611f64565b905090565b610fc0612c9a565b6001600160a01b0316816001600160a01b031614610ff05760405162461bcd60e51b8152600401610c9290614d8a565b610f488282612d07565b6000611004610f84565b61100c611a94565b1015905090565b61101c33612457565b61102557600080fd5b600081116110455760405162461bcd60e51b8152600401610c9290614bc2565b6008546001600160801b03161561106e5760405162461bcd60e51b8152600401610c9290614c1f565b61107781612d70565b600780546001600160801b0319166001600160801b03929092169190911790556006546000906110ba906001600160401b0380821691600160401b900416614f7d565b6007549091506000906110e0906001600160401b038416906001600160801b0316612d9d565b90506110eb81612d70565b600780546001600160801b03928316600160801b0292169190911790556040517f1fd3f6b4312b53d1521fb9dab5af66131ff5b6141870420ded20e5ffb42f6cf290611138908590614151565b60405180910390a1505050565b600a546001600160a01b031681565b60045490565b61117260008051602061507883398151915282610f04565b61117a612c9a565b6001600160a01b0316816001600160a01b03167f1d5f9ec24c6f91be922ea13ceaad919ad6554a41b5c26087f96289a9baf98ad260405160405180910390a350565b6007546001600160801b0380821691600160801b90041682565b600260055414156111f95760405162461bcd60e51b8152600401610c9290614d1c565b6002600555611206610ffa565b156112b657600854600160801b900460ff166112345760405162461bcd60e51b8152600401610c929061447a565b600061123f826114d9565b9050600081116112615760405162461bcd60e51b8152600401610c92906147f2565b6001600160a01b0382166000908152600e60205260409020546112849082612ddd565b6001600160a01b038084166000908152600e60205260409020919091556009546112b091168383612e0b565b50611318565b600654600160401b90046001600160401b031642116112e75760405162461bcd60e51b8152600401610c929061461b565b6001600160a01b038082166000908152600d602052604081208054919055600a54909161131691168383612e0b565b505b506001600555565b61132933612457565b61133257600080fd5b60088054911515600160881b0260ff60881b19909216919091179055565b600260055414156113735760405162461bcd60e51b8152600401610c9290614d1c565b600260055561138133612457565b806113965750600b546001600160a01b031633145b806113a557506113a533610cea565b806113b357506113b3610d04565b6113cf5760405162461bcd60e51b8152600401610c92906144fc565b60088054600690600160801b900460ff16156113fd5760405162461bcd60e51b8152600401610c9290614a0d565b611405610ffa565b1561143757600a54600b548354611432926001600160a01b039081169216906001600160801b0316612e0b565b611496565b8054600160401b90046001600160401b031642116114675760405162461bcd60e51b8152600401610c929061461b565b600954600b548254611496926001600160a01b03908116921690600160801b90046001600160801b0316612e0b565b815460ff60801b1916600160801b1782556040517f32bebcfd2d04dbae321298091d96d2cb1d07279f59718cd83bd98245b8b82b5a90600090a150506001600555565b6001600160a01b0381166000908152600d60205260408120546114fe57506000610ce5565b6009546040516370a0823160e01b81526000916001600160a01b0316906370a082319061152f903090600401613f2c565b60206040518083038186803b15801561154757600080fd5b505afa15801561155b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157f9190613e0d565b6008546006546001600160a01b0386166000908152600d60205260409020549293506115c8926001600160801b03928316926115c292600160801b900416612d9d565b90612e4f565b6001600160a01b0384166000908152600e60205260409020549092506115ef908390612c6c565b9150808211156115fd578091505b50919050565b600b546001600160a01b031681565b61162a60008051602061520883398151915282612815565b611632612c9a565b6001600160a01b0316816001600160a01b03167f56692a161ffec953ddf9def93b958ea8d1ec95e21b80870c66be91a4374dc4e360405160405180910390a350565b61167f600082610f04565b611687612c9a565b6001600160a01b0316816001600160a01b03167f2570ac42fd8b322dc453ada624dc2ed0e9bdd67f16f201a25bbd30468f2aa18760405160405180910390a350565b6116d233612457565b6116db57600080fd5b6402540be40082106116ff5760405162461bcd60e51b8152600401610c92906149a1565b6402540be40081106117235760405162461bcd60e51b8152600401610c92906149a1565b428210156117435760405162461bcd60e51b8152600401610c92906146c0565b8181116117625760405162461bcd60e51b8152600401610c9290614743565b6008546001600160801b03161561178b5760405162461bcd60e51b8152600401610c9290614c1f565b61179482612e7a565b6006805467ffffffffffffffff19166001600160401b03929092169190911790556117be81612e7a565b6006805467ffffffffffffffff60401b1916600160401b6001600160401b03938416810291909117918290556000926117fd9280821692900416614f7d565b600754909150600090611823906001600160401b038416906001600160801b0316612d9d565b905061182e81612d70565b600780546001600160801b03928316600160801b0292169190911790556040517f5725d1e4352d6944889e54837ffaefde55cdc0b55796b831365d61cd4c87fdb89061187d9086908690614e44565b60405180910390a150505050565b6000806118be670de0b6b3a76400006115c26118a5610f84565b600654600160801b90046001600160801b031690612d9d565b60085490915081906118d9906001600160801b031685612ddd565b11156118fe576008546118f69082906001600160801b0316612c6c565b915050610ce5565b5090919050565b606060405180610180016040528061015081526020016150986101509139905090565b60405163d505accf60e01b81526001600160a01b0389169063d505accf90611960908a908a908a908a908a908a908a90600401613fc3565b600060405180830381600087803b15801561197a57600080fd5b505af115801561198e573d6000803e3d6000fd5b505050505050505050505050565b60606000600284846040516119b2929190613e91565b9081526020016040518091039020600101600285856040516119d5929190613e91565b9081526040519081900360200190205481546001600160401b0364010000000090920491909116908290611a0890614fc9565b80601f0160208091040260200160405190810160405280929190818152602001828054611a3490614fc9565b8015611a815780601f10611a5657610100808354040283529160200191611a81565b820191906000526020600020905b815481529060010190602001808311611a6457829003601f168201915b50505050509150915091505b9250929050565b600654600854600091610fb3916001600160801b03600160801b9092048216916115c29116670de0b6b3a7640000612d9d565b600080808080808080808080611adf8c8e018e6139b8565b9a509a509a509a509a509a509a509a509a509a509a50611b088b8b8b8b8b8b8b8b8b8b8b612017565b50505050505050505050505050565b60608b8b8b8b8b8b8b8b8b8b8b604051602001611b3e9b9a99989796959493929190613f64565b60405160208183030381529060405290509b9a5050505050505050505050565b60008051602061507883398151915281565b6000611b7a610ffa565b80610fb3575050600654600160401b90046001600160401b0316421190565b611bb160008051602061507883398151915282612815565b611bb9612c9a565b6001600160a01b0316816001600160a01b03167fe5f1aa9e528307345194b88b24a32401c13926e0823060f1049d9b26c0bb62b260405160405180910390a350565b611c04336111d6565b565b60026005541415611c295760405162461bcd60e51b8152600401610c9290614d1c565b6002600555611c3733612457565b611c4057600080fd5b60088054600160801b900460ff1615611c6b5760405162461bcd60e51b8152600401610c9290614a0d565b80546001600160801b031615611c935760405162461bcd60e51b8152600401610c9290614a59565b600954600b54600654611cc3926001600160a01b03908116921690600160801b90046001600160801b0316612e0b565b805460ff60801b1916600160801b1781556040517fa5fb31e47bd1eca58bf14a3312d5e6aeafdc4ee787c8ed348c15c2b092324d9390600090a1506001600555565b6000828152602081905260408120611d1d9083612ea3565b90505b92915050565b6000610fb3611d33610f84565b6008546115c2906001600160801b0316670de0b6b3a7640000612d9d565b6000828152602081905260408120611d1d9083612eaf565b611d816000805160206151e883398151915282612815565b611d89612c9a565b6001600160a01b0316816001600160a01b03167f70b25138b6fadeb9992d18b9653564271823e34b3e3257515d12a6d4b15fcddf60405160405180910390a350565b6009546001600160a01b031681565b611de333612457565b611dec57600080fd5b6001600160a01b038116611e125760405162461bcd60e51b8152600401610c92906144af565b600b80546001600160a01b0319166001600160a01b0383161790556040517f34ae2bad9265f0212d4cf341708b8250949164bb54f9d0e4f442024f83bb2f9090611e5d908390613f2c565b60405180910390a150565b611e7133612457565b611e7a57600080fd5b610efe84848484612ec4565b60606004805480602002602001604051908101604052809291908181526020016000905b82821015611f56578382906000526020600020018054611ec990614fc9565b80601f0160208091040260200160405190810160405280929190818152602001828054611ef590614fc9565b8015611f425780601f10611f1757610100808354040283529160200191611f42565b820191906000526020600020905b815481529060010190602001808311611f2557829003601f168201915b505050505081526020019060010190611eaa565b50505050905090565b600081565b6006546000906001600160401b03164211611f825750600019610d2d565b600654600160401b90046001600160401b03164210611fad57506007546001600160801b0316610d2d565b610fb3613116565b611fcd60008051602061520883398151915282610f04565b611fd5612c9a565b6001600160a01b0316816001600160a01b03167f0be6ab9784c7401fafb73f7bc47bc67cc4ef8c47a60ad3cb66d1de0353a0784c60405160405180910390a350565b6402540be400881061203b5760405162461bcd60e51b8152600401610c92906149a1565b6402540be400871061205f5760405162461bcd60e51b8152600401610c92906149a1565b4288101561207f5760405162461bcd60e51b8152600401610c92906146c0565b6000891161209f5760405162461bcd60e51b8152600401610c929061432d565b8787116120be5760405162461bcd60e51b8152600401610c92906145be565b600084116120de5760405162461bcd60e51b8152600401610c9290614bc2565b6001600160a01b0381166121045760405162461bcd60e51b8152600401610c92906144af565b6001600160a01b03831661212a5760405162461bcd60e51b8152600401610c92906148be565b6001600160a01b038a166121505760405162461bcd60e51b8152600401610c9290614aa5565b896001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561218957600080fd5b505afa15801561219d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c19190613e49565b60ff166012146121e35760405162461bcd60e51b8152600401610c9290614af1565b6001600160a01b03861673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461229a576000866001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561224257600080fd5b505afa158015612256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227a9190613e49565b60ff161161229a5760405162461bcd60e51b8152600401610c929061426e565b6122a388612e7a565b6006805467ffffffffffffffff19166001600160401b03929092169190911790556122cd87612e7a565b600680546001600160401b0392909216600160401b0267ffffffffffffffff60401b1990921691909117905561230289612d70565b600680546001600160801b03928316600160801b02921691909117905561232884612d70565b600780546001600160801b0319166001600160801b0392909216919091179055600980546001600160a01b03199081166001600160a01b038d811691909117909255600a80548216898416179055600b805490911691831691909117905561238f8361290e565b6123988261315c565b60006123a48989614f41565b905060006123b28287612d9d565b90506123bd81612d70565b600780546001600160801b03928316600160801b029216919091179055611b088c8e8d6129d4565b600854600160801b900460ff1690565b61240d6000805160206151e883398151915282610f04565b612415612c9a565b6001600160a01b0316816001600160a01b03167f2d45ee102874989882745a26688d0b4fffee125a18df26536b12582c7fde4e1760405160405180910390a350565b6000610ce28183611d51565b60045460609082106124875760405162461bcd60e51b8152600401610c9290614cb8565b600482815481106124a857634e487b7160e01b600052603260045260246000fd5b9060005260206000200180546124bd90614fc9565b80601f01602080910402602001604051908101604052809291908181526020018280546124e990614fc9565b80156125365780601f1061250b57610100808354040283529160200191612536565b820191906000526020600020905b81548152906001019060200180831161251957829003601f168201915b50505050509050919050565b600e6020526000908152604090205481565b61255d33612457565b61256657600080fd5b8260005b818110156125f0576125de86868381811061259557634e487b7160e01b600052603260045260246000fd5b90506020028101906125a79190614e7e565b8686858181106125c757634e487b7160e01b600052603260045260246000fd5b90506020028101906125d99190614e7e565b612ec4565b806125e881614ffe565b91505061256a565b505050505050565b6000818152602081905260408120610ce29061319e565b606080836001600160401b0381111561263857634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612661578160200160208202803683370190505b509150836001600160401b0381111561268a57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156126bd57816020015b60608152602001906001900390816126a85790505b50905060005b848110156127fa57600080308888858181106126ef57634e487b7160e01b600052603260045260246000fd5b90506020028101906127019190614e7e565b60405161270f929190613e91565b600060405180830381855af49150503d806000811461274a576040519150601f19603f3d011682016040523d82523d6000602084013e61274f565b606091505b5091509150818061275e575085155b612767826131a9565b906127855760405162461bcd60e51b8152600401610c92919061415a565b50818584815181106127a757634e487b7160e01b600052603260045260246000fd5b602002602001019015159081151581525050808484815181106127da57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250505080806127f290614ffe565b9150506126c3565b50935093915050565b60008051602061520883398151915281565b60008281526020819052604090206002015461283390610906612c9a565b610ff05760405162461bcd60e51b8152600401610c929061486e565b61285833612457565b61286157600080fd5b61286a8161315c565b50565b610f48338383610d35565b612883600082612815565b61288b612c9a565b6001600160a01b0316816001600160a01b03167f21ba1239795d4e22874e3dc55f0a9d7b65bfb23069d32965d7c23be9524ccf9560405160405180910390a350565b6128d633612457565b6128df57600080fd5b610f488282613209565b6008546001600160801b0381169060ff600160801b8204811691600160881b90041683565b60015460ff16156129315760405162461bcd60e51b8152600401610c92906142be565b6001600160a01b0381166129575760405162461bcd60e51b8152600401610c9290614978565b612962600082610f3e565b506001805460ff191681179055565b600d6020526000908152604090205481565b600c546001600160a01b031681565b600654600160801b90046001600160801b031690565b6000805160206151e883398151915281565b6000610ce26000805160206151e883398151915283611d51565b600080846001600160a01b03166323b872dd8530866040516024016129fb93929190613f40565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051612a349190613ea1565b6000604051808303816000865af19150503d8060008114612a71576040519150601f19603f3d011682016040523d82523d6000602084013e612a76565b606091505b5091509150818015612aa0575080511580612aa0575080806020019051810190612aa09190613bd5565b612aa957600080fd5b5050505050565b6006546001600160401b03164210801590612add5750600654600160401b90046001600160401b03164211155b612af95760405162461bcd60e51b8152600401610c9290614b7a565b60088054600160801b900460ff1615612b245760405162461bcd60e51b8152600401610c9290614a0d565b6001600160a01b0383166000908152600d6020526040812054612b479084612ddd565b8254909150600160881b900460ff1615612be657600c54604051631cd53d5560e01b81526001600160a01b0390911690631cd53d5590612b8d9087908590600401614004565b60206040518083038186803b158015612ba557600080fd5b505afa158015612bb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bdd9190613bd5565b612be657600080fd5b6001600160a01b0384166000908152600d602052604090208190558154612c1f90612c1a906001600160801b031685612ddd565b612d70565b82546001600160801b0319166001600160801b03919091161782556040517f077511a636ba1f10551cc7b89c13ff66a6ac9344e8a917527817a9690b15af7a9061187d9086908690614004565b600082612c798382614f41565b9150811115611d205760405162461bcd60e51b8152600401610c929061423f565b3390565b6000828152602081905260409020612cb690826134a1565b15610f4857612cc3612c9a565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081905260409020612d1f90826134b6565b15610f4857612d2c612c9a565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006001600160801b03821115612d995760405162461bcd60e51b8152600401610c9290614837565b5090565b6000811580612dc157508282612db38183614f22565b9250612dbf9083614f02565b145b611d205760405162461bcd60e51b8152600401610c9290614d53565b600081612dea8185614ec2565b9150811015611d205760405162461bcd60e51b8152600401610c929061490a565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612e3f57612e3a82826134cb565b612e4a565b612e4a838383613558565b505050565b6000808211612e705760405162461bcd60e51b8152600401610c9290614dd9565b611d1d8284614f02565b60006001600160401b03821115612d995760405162461bcd60e51b8152600401610c9290614b43565b6000611d1d838361357d565b6000611d1d836001600160a01b0384166135d6565b82612ee15760405162461bcd60e51b8152600401610c9290614941565b80612efe5760405162461bcd60e51b8152600401610c9290614ce5565b60006001600160401b031660028585604051612f1b929190613e91565b908152604051908190036020019020546001600160401b03640100000000909104161415612fc15760048054600181018255600091909152612f80907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018585613759565b50600454604051600290612f979087908790613e91565b908152604051908190036020019020805463ffffffff9290921663ffffffff199092169190911790555b604051806060016040528060028686604051612fde929190613e91565b90815260408051602092819003830190205463ffffffff168352426001600160401b0316838301528051601f86018390048302810183018252858152920191908590859081908401838280828437600092019190915250505091525060405160029061304d9087908790613e91565b9081526040805191829003602090810190922083518154858501516001600160401b0316640100000000026bffffffffffffffff000000001963ffffffff90931663ffffffff19909216919091179190911617815590830151805191926130bc926001850192909101906137d9565b50506040516130cf915085908590613e91565b60405180910390207fbaa206e5ea800eb88bce099f453fee53295b793b9d5d1cfc4ce4b6db06a34f53838360405161310892919061416d565b60405180910390a250505050565b60065460009081906131329042906001600160401b0316612c6c565b60075490915060009061315590600160801b90046001600160801b031683612e4f565b9250505090565b6001600160a01b0381161561286a57600c80546001600160a01b0383166001600160a01b03199091161790556008805460ff60881b1916600160881b17905550565b6000610ce2826135ee565b60606044825110156131ef575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c790000006020820152610ce5565b60048201915081806020019051810190610ce29190613d6b565b60006001600160401b031660028383604051613226929190613e91565b908152604051908190036020019020546001600160401b036401000000009091041614156132665760405162461bcd60e51b8152600401610c9290614714565b600060016002848460405161327c929190613e91565b9081526040519081900360200190205461329c919063ffffffff16614f58565b6004549091506132ae90600190614f41565b8163ffffffff16146133b057600480546132ca90600190614f41565b815481106132e857634e487b7160e01b600052603260045260246000fd5b9060005260206000200160048263ffffffff168154811061331957634e487b7160e01b600052603260045260246000fd5b9060005260206000200190805461332f90614fc9565b61333a92919061384d565b50613346816001614eda565b600260048363ffffffff168154811061336f57634e487b7160e01b600052603260045260246000fd5b906000526020600020016040516133869190613ebd565b908152604051908190036020019020805463ffffffff9290921663ffffffff199092169190911790555b60048054806133cf57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160006133eb91906138c8565b905582826040516133fd929190613e91565b60405180910390207f4b5338540b4d1c0f6dd0308a25f633b7ff60472f894d711cff9dd64e35c613b260028585604051613438929190613e91565b908152602001604051809103902060010160405161345691906141be565b60405180910390a260028383604051613470929190613e91565b90815260405190819003602001902080546bffffffffffffffffffffffff191681556000612aa960018301826138c8565b6000611d1d836001600160a01b0384166135f2565b6000611d1d836001600160a01b03841661363c565b604080516000808252602082019092526001600160a01b0384169083906040516134f59190613ea1565b60006040518083038185875af1925050503d8060008114613532576040519150601f19603f3d011682016040523d82523d6000602084013e613537565b606091505b5050905080612e4a5760405162461bcd60e51b8152600401610c9290614c75565b600080846001600160a01b031663a9059cbb85856040516024016129fb929190614004565b815460009082106135a05760405162461bcd60e51b8152600401610c92906142eb565b8260000182815481106135c357634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b60006135fe83836135d6565b61363457508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611d20565b506000611d20565b6000818152600183016020526040812054801561374f576000613660600183614f41565b855490915060009061367490600190614f41565b9050600086600001828154811061369b57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106136cc57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001556136e3836001614ec2565b6000828152600189016020526040902055865487908061371357634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611d20565b6000915050611d20565b82805461376590614fc9565b90600052602060002090601f01602090048101928261378757600085556137cd565b82601f106137a05782800160ff198235161785556137cd565b828001600101855582156137cd579182015b828111156137cd5782358255916020019190600101906137b2565b50612d99929150613900565b8280546137e590614fc9565b90600052602060002090601f01602090048101928261380757600085556137cd565b82601f1061382057805160ff19168380011785556137cd565b828001600101855582156137cd579182015b828111156137cd578251825591602001919060010190613832565b82805461385990614fc9565b90600052602060002090601f01602090048101928261387b57600085556137cd565b82601f1061388c57805485556137cd565b828001600101855582156137cd57600052602060002091601f016020900482015b828111156137cd5782548255916001019190600101906138ad565b5080546138d490614fc9565b6000825580601f106138e6575061286a565b601f01602090049060005260206000209081019061286a91905b5b80821115612d995760008155600101613901565b60008083601f840112613926578081fd5b5081356001600160401b0381111561393c578182fd5b6020830191508360208083028501011115611a8d57600080fd5b60008083601f840112613967578182fd5b5081356001600160401b0381111561397d578182fd5b602083019150836020828501011115611a8d57600080fd5b6000602082840312156139a6578081fd5b81356139b181615045565b9392505050565b60008060008060008060008060008060006101608c8e0312156139d9578687fd5b8b356139e481615045565b9a5060208c01356139f481615045565b995060408c0135985060608c0135975060808c0135965060a08c0135613a1981615045565b955060c08c0135945060e08c013593506101008c0135613a3881615045565b92506101208c0135613a4981615045565b91506101408c0135613a5a81615045565b809150509295989b509295989b9093969950565b60008060408385031215613a80578182fd5b8235613a8b81615045565b91506020830135613a9b8161505a565b809150509250929050565b60008060008060008060008060008060006101608c8e0312156139d9578081fd5b600080600060608486031215613adb578081fd5b8335613ae681615045565b9250602084013591506040840135613afd8161505a565b809150509250925092565b600080600060408486031215613b1c578081fd5b83356001600160401b03811115613b31578182fd5b613b3d86828701613915565b9094509250506020840135613afd8161505a565b60008060008060408587031215613b66578182fd5b84356001600160401b0380821115613b7c578384fd5b613b8888838901613915565b90965094506020870135915080821115613ba0578384fd5b50613bad87828801613915565b95989497509550505050565b600060208284031215613bca578081fd5b81356139b18161505a565b600060208284031215613be6578081fd5b81516139b18161505a565b600060208284031215613c02578081fd5b5035919050565b60008060408385031215613c1b578182fd5b823591506020830135613a9b81615045565b60008060408385031215613c3f578182fd5b50508035926020909101359150565b60008060208385031215613c60578182fd5b82356001600160401b03811115613c75578283fd5b613c8185828601613956565b90969095509350505050565b600080600080600080600080610100898b031215613ca9578182fd5b8835613cb481615045565b97506020890135613cc481615045565b96506040890135613cd481615045565b9550606089013594506080890135935060a0890135613cf281615068565b979a969950949793969295929450505060c08201359160e0013590565b60008060008060408587031215613d24578182fd5b84356001600160401b0380821115613d3a578384fd5b613d4688838901613956565b90965094506020870135915080821115613d5e578384fd5b50613bad87828801613956565b600060208284031215613d7c578081fd5b81516001600160401b0380821115613d92578283fd5b818401915084601f830112613da5578283fd5b815181811115613db757613db761502f565b604051601f8201601f191681016020018381118282101715613ddb57613ddb61502f565b604052818152838201602001871015613df2578485fd5b613e03826020830160208701614f9d565b9695505050505050565b600060208284031215613e1e578081fd5b5051919050565b60008060408385031215613e37578182fd5b823591506020830135613a9b8161505a565b600060208284031215613e5a578081fd5b81516139b181615068565b60008151808452613e7d816020860160208601614f9d565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b60008251613eb3818460208701614f9d565b9190910192915050565b6000808354613ecb81614fc9565b60018281168015613ee35760018114613ef457613f20565b60ff19841687528287019450613f20565b8786526020808720875b85811015613f175781548a820152908401908201613efe565b50505082870194505b50929695505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039b8c168152998b1660208b015260408a01989098526060890196909652608088019490945291871660a087015260c086015260e0850152841661010084015283166101208301529091166101408201526101600190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039490941684526001600160401b039283166020850152911660408301521515606082015260800190565b604080825283519082018190526000906020906060840190828701845b8281101561408a57815115158452928401929084019060010161406c565b5050508381038285015284518082528282019080840283018401878501865b838110156140d757601f198684030185526140c5838351613e65565b948701949250908601906001016140a9565b50909998505050505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561413957603f19888603018452614127858351613e65565b9450928501929085019060010161410b565b5092979650505050505050565b901515815260200190565b90815260200190565b600060208252611d1d6020830184613e65565b60006020825282602083015282846040840137818301604090810191909152601f909201601f19160101919050565b6000604082526141af6040830185613e65565b90508260208301529392505050565b600060208083528184546141d181614fc9565b808487015260406001808416600081146141f2576001811461420657614231565b60ff19851689840152606089019550614231565b898852868820885b858110156142295781548b820186015290830190880161420e565b8a0184019650505b509398975050505050505050565b602080825260159082015274426f72696e674d6174683a20556e646572666c6f7760581b604082015260600190565b60208082526030908201527f4879706572626f6c696341756374696f6e3a205061796d656e7420637572726560408201526f06e6379206973206e6f742045524332360841b606082015260800190565b602080825260139082015272105b1c9958591e481a5b9a5d1a585b1a5cd959606a1b604082015260600190565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b60208082526039908201527f4879706572626f6c696341756374696f6e3a20746f74616c20746f6b656e732060408201527f6d7573742062652067726561746572207468616e207a65726f00000000000000606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b6020808252602e908201527f4879706572626f6c696341756374696f6e3a2056616c7565206d75737420626560408201526d020686967686572207468616e20360941b606082015260800190565b60208082526033908201527f447574636841756374696f6e3a2054686520636f6d6d6974746564204554482060408201527265786365656473207468652062616c616e636560681b606082015260800190565b6020808252818101527f4879706572626f6c696341756374696f6e3a206e6f742066696e616c697a6564604082015260600190565b6020808252602d908201527f4879706572626f6c696341756374696f6e3a2077616c6c65742069732074686560408201526c207a65726f206164647265737360981b606082015260800190565b6020808252602a908201527f4879706572626f6c696341756374696f6e3a2073656e646572206d7573742062604082015269329030b71030b236b4b760b11b606082015260800190565b60208082526052908201527f4e6f2061677265656d656e742070726f76696465642c20706c6561736520726560408201527f766965772074686520736d61727420636f6e7472616374206265666f726520696060820152711b9d195c9858dd1a5b99c81dda5d1a081a5d60721b608082015260a00190565b60208082526039908201527f4879706572626f6c696341756374696f6e3a20656e642074696d65206d75737460408201527f206265206f6c646572207468616e2073746172742074696d6500000000000000606082015260800190565b6020808252602f908201527f4879706572626f6c696341756374696f6e3a2061756374696f6e20686173206e60408201526e1bdd08199a5b9a5cda1959081e595d608a1b606082015260800190565b60208082526036908201527f4879706572626f6c696341756374696f6e3a207061796d656e742063757272656040820152756e6379206973206e6f7420455448206164647265737360501b606082015260800190565b60208082526034908201527f4879706572626f6c696341756374696f6e3a2073746172742074696d65206973604082015273206265666f72652063757272656e742074696d6560601b606082015260800190565b602080825260159082015274111bd8dd5b595b9d081cda1bdd5b1908195e1a5cdd605a1b604082015260600190565b6020808252603a908201527f4879706572626f6c696341756374696f6e3a20656e642074696d65206d75737460408201527f206265206f6c646572207468616e207374617274207072696365000000000000606082015260800190565b60208082526032908201527f4879706572626f6c696341756374696f6e3a207061796d656e742063757272656040820152713731bc9034b9903737ba1030903a37b5b2b760711b606082015260800190565b60208082526025908201527f4879706572626f6c696341756374696f6e3a206e6f20746f6b656e7320746f20604082015264636c61696d60d81b606082015260800190565b6020808252601c908201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604082015260600190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b6020808252602c908201527f4879706572626f6c696341756374696f6e3a2061646d696e206973207468652060408201526b7a65726f206164647265737360a01b606082015260800190565b60208082526018908201527f426f72696e674d6174683a20416464204f766572666c6f770000000000000000604082015260600190565b60208082526018908201527f5a65726f206e616d65206973206e6f7420616c6c6f7765640000000000000000604082015260600190565b6020808252600f908201526e125b98dbdc9c9958dd081a5b9c1d5d608a1b604082015260600190565b60208082526046908201527f4879706572626f6c696341756374696f6e3a20656e74657220616e20756e697860408201527f2074696d657374616d7020696e207365636f6e64732c206e6f74206d696c697360608201526565636f6e647360d01b608082015260a00190565b6020808252602c908201527f4879706572626f6c696341756374696f6e3a2061756374696f6e20616c72656160408201526b191e48199a5b985b1a5e995960a21b606082015260800190565b6020808252602c908201527f4879706572626f6c696341756374696f6e3a2061756374696f6e20616c72656160408201526b191e4818dbdb5b5a5d1d195960a21b606082015260800190565b6020808252602c908201527f4879706572626f6c696341756374696f6e3a20746f6b656e206973207468652060408201526b7a65726f206164647265737360a01b606082015260800190565b60208082526032908201527f4879706572626f6c696341756374696f6e3a20546f6b656e20646f6573206e6f60408201527174206861766520313820646563696d616c7360701b606082015260800190565b6020808252601b908201527f426f72696e674d6174683a2075696e743634204f766572666c6f770000000000604082015260600190565b60208082526028908201527f4879706572626f6c696341756374696f6e3a206f7574736964652061756374696040820152676f6e20686f75727360c01b606082015260800190565b60208082526037908201527f4879706572626f6c696341756374696f6e3a206d696e696d756d20707269636560408201527f206d7573742062652067726561746572207468616e2030000000000000000000606082015260800190565b60208082526036908201527f4879706572626f6c696341756374696f6e3a2061756374696f6e2063616e6e6f6040820152751d081a185d9948185b1c9958591e481cdd185c9d195960521b606082015260800190565b60208082526023908201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960408201526213115160ea1b606082015260800190565b602080825260139082015272496e646578206f7574206f6620626f756e647360681b604082015260600190565b6020808252601a908201527f53686f756c64206e6f74206265206120656d7074792064617461000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526018908201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b602080825260149082015273426f72696e674d6174683a20446976207a65726f60601b604082015260600190565b6001600160801b0393909316835290151560208301521515604082015260600190565b6001600160801b0392831681529116602082015260400190565b918252602082015260400190565b6001600160401b0393841681529190921660208201526001600160801b03909116604082015260600190565b6000808335601e19843603018112614e94578283fd5b8301803591506001600160401b03821115614ead578283fd5b602001915036819003821315611a8d57600080fd5b60008219821115614ed557614ed5615019565b500190565b600063ffffffff808316818516808303821115614ef957614ef9615019565b01949350505050565b600082614f1d57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615614f3c57614f3c615019565b500290565b600082821015614f5357614f53615019565b500390565b600063ffffffff83811690831681811015614f7557614f75615019565b039392505050565b60006001600160401b0383811690831681811015614f7557614f75615019565b60005b83811015614fb8578181015183820152602001614fa0565b83811115610efe5750506000910152565b600281046001821680614fdd57607f821691505b602082108114156115fd57634e487b7160e01b600052602260045260246000fd5b600060001982141561501257615012615019565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461286a57600080fd5b801515811461286a57600080fd5b60ff8116811461286a57600080fdfe9d49f397ae9ef1a834b569acb967799a367061e305932181a44f5773da873bfd4920756e6465727374616e6420746861742049276d20696e746572616374696e672077697468206120736d61727420636f6e74726163742e204920756e6465727374616e64207468617420746f6b656e7320636f6d6d6974656420617265207375626a65637420746f2074686520746f6b656e2069737375657220616e64206c6f63616c206c617773207768657265206170706c696361626c652e204920726576696577656420636f6465206f662074686520736d61727420636f6e747261637420616e6420756e6465727374616e642069742066756c6c792e204920616772656520746f206e6f7420686f6c6420646576656c6f70657273206f72206f746865722070656f706c65206173736f6369617465642077697468207468652070726f6a656374206c6961626c6520666f7220616e79206c6f73736573206f72206d6973756e6465727374616e64696e677397667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9299f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a2646970667358221220e6ccd89317cdef017c4d83998ec4030579d475e3cf954627f0f29c1dbe50294e64736f6c63430008000033",
  "deployedBytecode": "0x60806040526004361061041f5760003560e01c80638a845fc01161021e578063c6b547e611610123578063dccfe310116100ab578063e8fcf7231161007a578063e8fcf72314610bfb578063f04899d314610c1b578063f08b82e614610c30578063f5b541a614610c45578063fc4e3e0a14610c5a5761042e565b8063dccfe31014610b77578063dde51f6d14610b97578063e0e081d714610bb7578063e6594abd14610bdb5761042e565b8063d2423b51116100f2578063d2423b5114610ae1578063d539139314610b02578063d547741f14610b17578063d69d3e6214610b37578063dc97e08214610b575761042e565b8063c6b547e614610a61578063c884ef8314610a81578063c92bce8714610aa1578063ca15c87314610ac15761042e565b80639c64d0ae116101a6578063adbf377611610175578063adbf3776146109cc578063b1f16218146109ec578063b3f05b9714610a0c578063b7928b1d14610a21578063c395fcb314610a415761042e565b80639c64d0ae146109605780639fa5f50b14610980578063a217fddf146109a2578063a9d87ee6146109b75761042e565b8063919e93b5116101ed578063919e93b5146108d657806391d14854146108eb5780639478941c1461090b57806399fdb3201461092b5780639a87222c146109405761042e565b80638a845fc01461086c5780638d8f2adb1461088c5780638fa8b790146108a15780639010d07c146108b65761042e565b806349df728c1161032457806373973fcb116102ac5780637ff9b5961161027b5780637ff9b596146107ed57806381353c8e1461080257806384720f1614610822578063857d26081461084257806386433374146108575761042e565b806373973fcb1461075d57806374cf9fc51461077d5780637c516e941461079f5780637ccb6a64146107bf5761042e565b80634ddf47d4116102f35780634ddf47d4146106d5578063521eb273146106e857806354f1e126146106fd5780636595171c1461071d5780636ae260c11461073d5761042e565b806349df728c146106605780634b3e6abb146106805780634bb278f3146106a05780634dc80e15146106b55761042e565b8063314148e2116103a75780633b33fe73116103765780633b33fe73146105c65780633d15cc6d146105e65780633d1c2273146106085780633f16431a1461061d57806345a153881461063d5761042e565b8063314148e21461055757806332a0f2d71461057c57806336568abe1461059157806336d0054b146105b15761042e565b80631b3e460e116103ee5780631b3e460e146104c2578063212f8a81146104e4578063248a9ca31461050457806329762960146105245780632f2ff15d146105375761042e565b8063031bee0014610433578063099db01714610460578063113b0ab21461048d57806317026455146104ad5761042e565b3661042e5761042c610c7a565b005b600080fd5b34801561043f57600080fd5b50610448610c9b565b60405161045793929190614e52565b60405180910390f35b34801561046c57600080fd5b5061048061047b366004613995565b610cc8565b6040516104579190614146565b34801561049957600080fd5b506104806104a8366004613995565b610cea565b3480156104b957600080fd5b50610480610d04565b3480156104ce57600080fd5b506104d7610d30565b6040516104579190614151565b3480156104f057600080fd5b5061042c6104ff366004613ac7565b610d35565b34801561051057600080fd5b506104d761051f366004613bf1565b610de8565b61042c610532366004613a6e565b610dfd565b34801561054357600080fd5b5061042c610552366004613c09565b610f04565b34801561056357600080fd5b5061056c610f4c565b604051610457949392919061401d565b34801561058857600080fd5b506104d7610f84565b34801561059d57600080fd5b5061042c6105ac366004613c09565b610fb8565b3480156105bd57600080fd5b50610480610ffa565b3480156105d257600080fd5b5061042c6105e1366004613bf1565b611013565b3480156105f257600080fd5b506105fb611145565b6040516104579190613f2c565b34801561061457600080fd5b506104d7611154565b34801561062957600080fd5b5061042c610638366004613995565b61115a565b34801561064957600080fd5b506106526111bc565b604051610457929190614e2a565b34801561066c57600080fd5b5061042c61067b366004613995565b6111d6565b34801561068c57600080fd5b5061042c61069b366004613bb9565b611320565b3480156106ac57600080fd5b5061042c611350565b3480156106c157600080fd5b506104d76106d0366004613995565b6114d9565b61042c6106e3366004613c4e565b610f48565b3480156106f457600080fd5b506105fb611603565b34801561070957600080fd5b5061042c610718366004613995565b611612565b34801561072957600080fd5b5061042c610738366004613995565b611674565b34801561074957600080fd5b5061042c610758366004613c2d565b6116c9565b34801561076957600080fd5b506104d7610778366004613bf1565b61188b565b34801561078957600080fd5b50610792611905565b604051610457919061415a565b3480156107ab57600080fd5b5061042c6107ba366004613c8d565b611928565b3480156107cb57600080fd5b506107df6107da366004613c4e565b61199c565b60405161045792919061419c565b3480156107f957600080fd5b506104d7611a94565b34801561080e57600080fd5b5061042c61081d366004613c4e565b611ac7565b34801561082e57600080fd5b5061079261083d366004613aa6565b611b17565b34801561084e57600080fd5b506104d7611b5e565b34801561086357600080fd5b50610480611b70565b34801561087857600080fd5b5061042c610887366004613995565b611b99565b34801561089857600080fd5b5061042c611bfb565b3480156108ad57600080fd5b5061042c611c06565b3480156108c257600080fd5b506105fb6108d1366004613c2d565b611d05565b3480156108e257600080fd5b506104d7611d26565b3480156108f757600080fd5b50610480610906366004613c09565b611d51565b34801561091757600080fd5b5061042c610926366004613995565b611d69565b34801561093757600080fd5b506105fb611dcb565b34801561094c57600080fd5b5061042c61095b366004613995565b611dda565b34801561096c57600080fd5b5061042c61097b366004613d0f565b611e68565b34801561098c57600080fd5b50610995611e86565b60405161045791906140e6565b3480156109ae57600080fd5b506104d7611f5f565b3480156109c357600080fd5b506104d7611f64565b3480156109d857600080fd5b5061042c6109e7366004613995565b611fb5565b3480156109f857600080fd5b5061042c610a07366004613aa6565b612017565b348015610a1857600080fd5b506104806123e5565b348015610a2d57600080fd5b5061042c610a3c366004613995565b6123f5565b348015610a4d57600080fd5b50610480610a5c366004613995565b612457565b348015610a6d57600080fd5b50610792610a7c366004613bf1565b612463565b348015610a8d57600080fd5b506104d7610a9c366004613995565b612542565b348015610aad57600080fd5b5061042c610abc366004613b51565b612554565b348015610acd57600080fd5b506104d7610adc366004613bf1565b6125f8565b610af4610aef366004613b08565b61260f565b60405161045792919061404f565b348015610b0e57600080fd5b506104d7612803565b348015610b2357600080fd5b5061042c610b32366004613c09565b612815565b348015610b4357600080fd5b5061042c610b52366004613995565b61284f565b348015610b6357600080fd5b5061042c610b72366004613e25565b61286d565b348015610b8357600080fd5b5061042c610b92366004613995565b612878565b348015610ba357600080fd5b5061042c610bb2366004613c4e565b6128cd565b348015610bc357600080fd5b50610bcc6128e9565b60405161045793929190614e07565b348015610be757600080fd5b5061042c610bf6366004613995565b61290e565b348015610c0757600080fd5b506104d7610c16366004613995565b612971565b348015610c2757600080fd5b506105fb612983565b348015610c3c57600080fd5b506104d7612992565b348015610c5157600080fd5b506104d76129a8565b348015610c6657600080fd5b50610480610c75366004613995565b6129ba565b60405162461bcd60e51b8152600401610c9290614546565b60405180910390fd5b6006546001600160401b0380821691600160401b810490911690600160801b90046001600160801b031683565b6000610ce260008051602061520883398151915283611d51565b90505b919050565b6000610ce260008051602061507883398151915283611d51565b6006546000904290610d2990600160401b90046001600160401b031662093a80614ec2565b1090505b90565b600481565b60026005541415610d585760405162461bcd60e51b8152600401610c9290614d1c565b6002600555600a546001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610d9c5760405162461bcd60e51b8152600401610c92906147a0565b80610da957610da9610c7a565b6000610db48361188b565b90508015610ddd57600a54610dd3906001600160a01b031633836129d4565b610ddd8482612ab0565b505060016005555050565b60009081526020819052604090206002015490565b600a546001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610e3b5760405162461bcd60e51b8152600401610c929061466a565b80610e4857610e48610c7a565b60003411610e685760405162461bcd60e51b8152600401610c92906143d9565b6000610e733461188b565b90506000610e813483612c6c565b90508115610e9357610e938483612ab0565b8015610ed1576040516001600160a01b0385169082156108fc029083906000818181858888f19350505050158015610ecf573d6000803e3d6000fd5b505b600854476001600160801b039091161115610efe5760405162461bcd60e51b8152600401610c9290614427565b50505050565b600082815260208190526040902060020154610f2290610906612c9a565b610f3e5760405162461bcd60e51b8152600401610c929061438a565b610f488282612c9e565b5050565b6009546006546008546001600160a01b03909216926001600160401b0380831693600160401b9093041691600160801b900460ff1690565b6000610f8e611f64565b610f96611a94565b1115610fab57610fa4611a94565b9050610d2d565b610fb3611f64565b905090565b610fc0612c9a565b6001600160a01b0316816001600160a01b031614610ff05760405162461bcd60e51b8152600401610c9290614d8a565b610f488282612d07565b6000611004610f84565b61100c611a94565b1015905090565b61101c33612457565b61102557600080fd5b600081116110455760405162461bcd60e51b8152600401610c9290614bc2565b6008546001600160801b03161561106e5760405162461bcd60e51b8152600401610c9290614c1f565b61107781612d70565b600780546001600160801b0319166001600160801b03929092169190911790556006546000906110ba906001600160401b0380821691600160401b900416614f7d565b6007549091506000906110e0906001600160401b038416906001600160801b0316612d9d565b90506110eb81612d70565b600780546001600160801b03928316600160801b0292169190911790556040517f1fd3f6b4312b53d1521fb9dab5af66131ff5b6141870420ded20e5ffb42f6cf290611138908590614151565b60405180910390a1505050565b600a546001600160a01b031681565b60045490565b61117260008051602061507883398151915282610f04565b61117a612c9a565b6001600160a01b0316816001600160a01b03167f1d5f9ec24c6f91be922ea13ceaad919ad6554a41b5c26087f96289a9baf98ad260405160405180910390a350565b6007546001600160801b0380821691600160801b90041682565b600260055414156111f95760405162461bcd60e51b8152600401610c9290614d1c565b6002600555611206610ffa565b156112b657600854600160801b900460ff166112345760405162461bcd60e51b8152600401610c929061447a565b600061123f826114d9565b9050600081116112615760405162461bcd60e51b8152600401610c92906147f2565b6001600160a01b0382166000908152600e60205260409020546112849082612ddd565b6001600160a01b038084166000908152600e60205260409020919091556009546112b091168383612e0b565b50611318565b600654600160401b90046001600160401b031642116112e75760405162461bcd60e51b8152600401610c929061461b565b6001600160a01b038082166000908152600d602052604081208054919055600a54909161131691168383612e0b565b505b506001600555565b61132933612457565b61133257600080fd5b60088054911515600160881b0260ff60881b19909216919091179055565b600260055414156113735760405162461bcd60e51b8152600401610c9290614d1c565b600260055561138133612457565b806113965750600b546001600160a01b031633145b806113a557506113a533610cea565b806113b357506113b3610d04565b6113cf5760405162461bcd60e51b8152600401610c92906144fc565b60088054600690600160801b900460ff16156113fd5760405162461bcd60e51b8152600401610c9290614a0d565b611405610ffa565b1561143757600a54600b548354611432926001600160a01b039081169216906001600160801b0316612e0b565b611496565b8054600160401b90046001600160401b031642116114675760405162461bcd60e51b8152600401610c929061461b565b600954600b548254611496926001600160a01b03908116921690600160801b90046001600160801b0316612e0b565b815460ff60801b1916600160801b1782556040517f32bebcfd2d04dbae321298091d96d2cb1d07279f59718cd83bd98245b8b82b5a90600090a150506001600555565b6001600160a01b0381166000908152600d60205260408120546114fe57506000610ce5565b6009546040516370a0823160e01b81526000916001600160a01b0316906370a082319061152f903090600401613f2c565b60206040518083038186803b15801561154757600080fd5b505afa15801561155b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157f9190613e0d565b6008546006546001600160a01b0386166000908152600d60205260409020549293506115c8926001600160801b03928316926115c292600160801b900416612d9d565b90612e4f565b6001600160a01b0384166000908152600e60205260409020549092506115ef908390612c6c565b9150808211156115fd578091505b50919050565b600b546001600160a01b031681565b61162a60008051602061520883398151915282612815565b611632612c9a565b6001600160a01b0316816001600160a01b03167f56692a161ffec953ddf9def93b958ea8d1ec95e21b80870c66be91a4374dc4e360405160405180910390a350565b61167f600082610f04565b611687612c9a565b6001600160a01b0316816001600160a01b03167f2570ac42fd8b322dc453ada624dc2ed0e9bdd67f16f201a25bbd30468f2aa18760405160405180910390a350565b6116d233612457565b6116db57600080fd5b6402540be40082106116ff5760405162461bcd60e51b8152600401610c92906149a1565b6402540be40081106117235760405162461bcd60e51b8152600401610c92906149a1565b428210156117435760405162461bcd60e51b8152600401610c92906146c0565b8181116117625760405162461bcd60e51b8152600401610c9290614743565b6008546001600160801b03161561178b5760405162461bcd60e51b8152600401610c9290614c1f565b61179482612e7a565b6006805467ffffffffffffffff19166001600160401b03929092169190911790556117be81612e7a565b6006805467ffffffffffffffff60401b1916600160401b6001600160401b03938416810291909117918290556000926117fd9280821692900416614f7d565b600754909150600090611823906001600160401b038416906001600160801b0316612d9d565b905061182e81612d70565b600780546001600160801b03928316600160801b0292169190911790556040517f5725d1e4352d6944889e54837ffaefde55cdc0b55796b831365d61cd4c87fdb89061187d9086908690614e44565b60405180910390a150505050565b6000806118be670de0b6b3a76400006115c26118a5610f84565b600654600160801b90046001600160801b031690612d9d565b60085490915081906118d9906001600160801b031685612ddd565b11156118fe576008546118f69082906001600160801b0316612c6c565b915050610ce5565b5090919050565b606060405180610180016040528061015081526020016150986101509139905090565b60405163d505accf60e01b81526001600160a01b0389169063d505accf90611960908a908a908a908a908a908a908a90600401613fc3565b600060405180830381600087803b15801561197a57600080fd5b505af115801561198e573d6000803e3d6000fd5b505050505050505050505050565b60606000600284846040516119b2929190613e91565b9081526020016040518091039020600101600285856040516119d5929190613e91565b9081526040519081900360200190205481546001600160401b0364010000000090920491909116908290611a0890614fc9565b80601f0160208091040260200160405190810160405280929190818152602001828054611a3490614fc9565b8015611a815780601f10611a5657610100808354040283529160200191611a81565b820191906000526020600020905b815481529060010190602001808311611a6457829003601f168201915b50505050509150915091505b9250929050565b600654600854600091610fb3916001600160801b03600160801b9092048216916115c29116670de0b6b3a7640000612d9d565b600080808080808080808080611adf8c8e018e6139b8565b9a509a509a509a509a509a509a509a509a509a509a50611b088b8b8b8b8b8b8b8b8b8b8b612017565b50505050505050505050505050565b60608b8b8b8b8b8b8b8b8b8b8b604051602001611b3e9b9a99989796959493929190613f64565b60405160208183030381529060405290509b9a5050505050505050505050565b60008051602061507883398151915281565b6000611b7a610ffa565b80610fb3575050600654600160401b90046001600160401b0316421190565b611bb160008051602061507883398151915282612815565b611bb9612c9a565b6001600160a01b0316816001600160a01b03167fe5f1aa9e528307345194b88b24a32401c13926e0823060f1049d9b26c0bb62b260405160405180910390a350565b611c04336111d6565b565b60026005541415611c295760405162461bcd60e51b8152600401610c9290614d1c565b6002600555611c3733612457565b611c4057600080fd5b60088054600160801b900460ff1615611c6b5760405162461bcd60e51b8152600401610c9290614a0d565b80546001600160801b031615611c935760405162461bcd60e51b8152600401610c9290614a59565b600954600b54600654611cc3926001600160a01b03908116921690600160801b90046001600160801b0316612e0b565b805460ff60801b1916600160801b1781556040517fa5fb31e47bd1eca58bf14a3312d5e6aeafdc4ee787c8ed348c15c2b092324d9390600090a1506001600555565b6000828152602081905260408120611d1d9083612ea3565b90505b92915050565b6000610fb3611d33610f84565b6008546115c2906001600160801b0316670de0b6b3a7640000612d9d565b6000828152602081905260408120611d1d9083612eaf565b611d816000805160206151e883398151915282612815565b611d89612c9a565b6001600160a01b0316816001600160a01b03167f70b25138b6fadeb9992d18b9653564271823e34b3e3257515d12a6d4b15fcddf60405160405180910390a350565b6009546001600160a01b031681565b611de333612457565b611dec57600080fd5b6001600160a01b038116611e125760405162461bcd60e51b8152600401610c92906144af565b600b80546001600160a01b0319166001600160a01b0383161790556040517f34ae2bad9265f0212d4cf341708b8250949164bb54f9d0e4f442024f83bb2f9090611e5d908390613f2c565b60405180910390a150565b611e7133612457565b611e7a57600080fd5b610efe84848484612ec4565b60606004805480602002602001604051908101604052809291908181526020016000905b82821015611f56578382906000526020600020018054611ec990614fc9565b80601f0160208091040260200160405190810160405280929190818152602001828054611ef590614fc9565b8015611f425780601f10611f1757610100808354040283529160200191611f42565b820191906000526020600020905b815481529060010190602001808311611f2557829003601f168201915b505050505081526020019060010190611eaa565b50505050905090565b600081565b6006546000906001600160401b03164211611f825750600019610d2d565b600654600160401b90046001600160401b03164210611fad57506007546001600160801b0316610d2d565b610fb3613116565b611fcd60008051602061520883398151915282610f04565b611fd5612c9a565b6001600160a01b0316816001600160a01b03167f0be6ab9784c7401fafb73f7bc47bc67cc4ef8c47a60ad3cb66d1de0353a0784c60405160405180910390a350565b6402540be400881061203b5760405162461bcd60e51b8152600401610c92906149a1565b6402540be400871061205f5760405162461bcd60e51b8152600401610c92906149a1565b4288101561207f5760405162461bcd60e51b8152600401610c92906146c0565b6000891161209f5760405162461bcd60e51b8152600401610c929061432d565b8787116120be5760405162461bcd60e51b8152600401610c92906145be565b600084116120de5760405162461bcd60e51b8152600401610c9290614bc2565b6001600160a01b0381166121045760405162461bcd60e51b8152600401610c92906144af565b6001600160a01b03831661212a5760405162461bcd60e51b8152600401610c92906148be565b6001600160a01b038a166121505760405162461bcd60e51b8152600401610c9290614aa5565b896001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561218957600080fd5b505afa15801561219d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c19190613e49565b60ff166012146121e35760405162461bcd60e51b8152600401610c9290614af1565b6001600160a01b03861673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461229a576000866001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561224257600080fd5b505afa158015612256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227a9190613e49565b60ff161161229a5760405162461bcd60e51b8152600401610c929061426e565b6122a388612e7a565b6006805467ffffffffffffffff19166001600160401b03929092169190911790556122cd87612e7a565b600680546001600160401b0392909216600160401b0267ffffffffffffffff60401b1990921691909117905561230289612d70565b600680546001600160801b03928316600160801b02921691909117905561232884612d70565b600780546001600160801b0319166001600160801b0392909216919091179055600980546001600160a01b03199081166001600160a01b038d811691909117909255600a80548216898416179055600b805490911691831691909117905561238f8361290e565b6123988261315c565b60006123a48989614f41565b905060006123b28287612d9d565b90506123bd81612d70565b600780546001600160801b03928316600160801b029216919091179055611b088c8e8d6129d4565b600854600160801b900460ff1690565b61240d6000805160206151e883398151915282610f04565b612415612c9a565b6001600160a01b0316816001600160a01b03167f2d45ee102874989882745a26688d0b4fffee125a18df26536b12582c7fde4e1760405160405180910390a350565b6000610ce28183611d51565b60045460609082106124875760405162461bcd60e51b8152600401610c9290614cb8565b600482815481106124a857634e487b7160e01b600052603260045260246000fd5b9060005260206000200180546124bd90614fc9565b80601f01602080910402602001604051908101604052809291908181526020018280546124e990614fc9565b80156125365780601f1061250b57610100808354040283529160200191612536565b820191906000526020600020905b81548152906001019060200180831161251957829003601f168201915b50505050509050919050565b600e6020526000908152604090205481565b61255d33612457565b61256657600080fd5b8260005b818110156125f0576125de86868381811061259557634e487b7160e01b600052603260045260246000fd5b90506020028101906125a79190614e7e565b8686858181106125c757634e487b7160e01b600052603260045260246000fd5b90506020028101906125d99190614e7e565b612ec4565b806125e881614ffe565b91505061256a565b505050505050565b6000818152602081905260408120610ce29061319e565b606080836001600160401b0381111561263857634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612661578160200160208202803683370190505b509150836001600160401b0381111561268a57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156126bd57816020015b60608152602001906001900390816126a85790505b50905060005b848110156127fa57600080308888858181106126ef57634e487b7160e01b600052603260045260246000fd5b90506020028101906127019190614e7e565b60405161270f929190613e91565b600060405180830381855af49150503d806000811461274a576040519150601f19603f3d011682016040523d82523d6000602084013e61274f565b606091505b5091509150818061275e575085155b612767826131a9565b906127855760405162461bcd60e51b8152600401610c92919061415a565b50818584815181106127a757634e487b7160e01b600052603260045260246000fd5b602002602001019015159081151581525050808484815181106127da57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250505080806127f290614ffe565b9150506126c3565b50935093915050565b60008051602061520883398151915281565b60008281526020819052604090206002015461283390610906612c9a565b610ff05760405162461bcd60e51b8152600401610c929061486e565b61285833612457565b61286157600080fd5b61286a8161315c565b50565b610f48338383610d35565b612883600082612815565b61288b612c9a565b6001600160a01b0316816001600160a01b03167f21ba1239795d4e22874e3dc55f0a9d7b65bfb23069d32965d7c23be9524ccf9560405160405180910390a350565b6128d633612457565b6128df57600080fd5b610f488282613209565b6008546001600160801b0381169060ff600160801b8204811691600160881b90041683565b60015460ff16156129315760405162461bcd60e51b8152600401610c92906142be565b6001600160a01b0381166129575760405162461bcd60e51b8152600401610c9290614978565b612962600082610f3e565b506001805460ff191681179055565b600d6020526000908152604090205481565b600c546001600160a01b031681565b600654600160801b90046001600160801b031690565b6000805160206151e883398151915281565b6000610ce26000805160206151e883398151915283611d51565b600080846001600160a01b03166323b872dd8530866040516024016129fb93929190613f40565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051612a349190613ea1565b6000604051808303816000865af19150503d8060008114612a71576040519150601f19603f3d011682016040523d82523d6000602084013e612a76565b606091505b5091509150818015612aa0575080511580612aa0575080806020019051810190612aa09190613bd5565b612aa957600080fd5b5050505050565b6006546001600160401b03164210801590612add5750600654600160401b90046001600160401b03164211155b612af95760405162461bcd60e51b8152600401610c9290614b7a565b60088054600160801b900460ff1615612b245760405162461bcd60e51b8152600401610c9290614a0d565b6001600160a01b0383166000908152600d6020526040812054612b479084612ddd565b8254909150600160881b900460ff1615612be657600c54604051631cd53d5560e01b81526001600160a01b0390911690631cd53d5590612b8d9087908590600401614004565b60206040518083038186803b158015612ba557600080fd5b505afa158015612bb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bdd9190613bd5565b612be657600080fd5b6001600160a01b0384166000908152600d602052604090208190558154612c1f90612c1a906001600160801b031685612ddd565b612d70565b82546001600160801b0319166001600160801b03919091161782556040517f077511a636ba1f10551cc7b89c13ff66a6ac9344e8a917527817a9690b15af7a9061187d9086908690614004565b600082612c798382614f41565b9150811115611d205760405162461bcd60e51b8152600401610c929061423f565b3390565b6000828152602081905260409020612cb690826134a1565b15610f4857612cc3612c9a565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081905260409020612d1f90826134b6565b15610f4857612d2c612c9a565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006001600160801b03821115612d995760405162461bcd60e51b8152600401610c9290614837565b5090565b6000811580612dc157508282612db38183614f22565b9250612dbf9083614f02565b145b611d205760405162461bcd60e51b8152600401610c9290614d53565b600081612dea8185614ec2565b9150811015611d205760405162461bcd60e51b8152600401610c929061490a565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612e3f57612e3a82826134cb565b612e4a565b612e4a838383613558565b505050565b6000808211612e705760405162461bcd60e51b8152600401610c9290614dd9565b611d1d8284614f02565b60006001600160401b03821115612d995760405162461bcd60e51b8152600401610c9290614b43565b6000611d1d838361357d565b6000611d1d836001600160a01b0384166135d6565b82612ee15760405162461bcd60e51b8152600401610c9290614941565b80612efe5760405162461bcd60e51b8152600401610c9290614ce5565b60006001600160401b031660028585604051612f1b929190613e91565b908152604051908190036020019020546001600160401b03640100000000909104161415612fc15760048054600181018255600091909152612f80907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018585613759565b50600454604051600290612f979087908790613e91565b908152604051908190036020019020805463ffffffff9290921663ffffffff199092169190911790555b604051806060016040528060028686604051612fde929190613e91565b90815260408051602092819003830190205463ffffffff168352426001600160401b0316838301528051601f86018390048302810183018252858152920191908590859081908401838280828437600092019190915250505091525060405160029061304d9087908790613e91565b9081526040805191829003602090810190922083518154858501516001600160401b0316640100000000026bffffffffffffffff000000001963ffffffff90931663ffffffff19909216919091179190911617815590830151805191926130bc926001850192909101906137d9565b50506040516130cf915085908590613e91565b60405180910390207fbaa206e5ea800eb88bce099f453fee53295b793b9d5d1cfc4ce4b6db06a34f53838360405161310892919061416d565b60405180910390a250505050565b60065460009081906131329042906001600160401b0316612c6c565b60075490915060009061315590600160801b90046001600160801b031683612e4f565b9250505090565b6001600160a01b0381161561286a57600c80546001600160a01b0383166001600160a01b03199091161790556008805460ff60881b1916600160881b17905550565b6000610ce2826135ee565b60606044825110156131ef575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c790000006020820152610ce5565b60048201915081806020019051810190610ce29190613d6b565b60006001600160401b031660028383604051613226929190613e91565b908152604051908190036020019020546001600160401b036401000000009091041614156132665760405162461bcd60e51b8152600401610c9290614714565b600060016002848460405161327c929190613e91565b9081526040519081900360200190205461329c919063ffffffff16614f58565b6004549091506132ae90600190614f41565b8163ffffffff16146133b057600480546132ca90600190614f41565b815481106132e857634e487b7160e01b600052603260045260246000fd5b9060005260206000200160048263ffffffff168154811061331957634e487b7160e01b600052603260045260246000fd5b9060005260206000200190805461332f90614fc9565b61333a92919061384d565b50613346816001614eda565b600260048363ffffffff168154811061336f57634e487b7160e01b600052603260045260246000fd5b906000526020600020016040516133869190613ebd565b908152604051908190036020019020805463ffffffff9290921663ffffffff199092169190911790555b60048054806133cf57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160006133eb91906138c8565b905582826040516133fd929190613e91565b60405180910390207f4b5338540b4d1c0f6dd0308a25f633b7ff60472f894d711cff9dd64e35c613b260028585604051613438929190613e91565b908152602001604051809103902060010160405161345691906141be565b60405180910390a260028383604051613470929190613e91565b90815260405190819003602001902080546bffffffffffffffffffffffff191681556000612aa960018301826138c8565b6000611d1d836001600160a01b0384166135f2565b6000611d1d836001600160a01b03841661363c565b604080516000808252602082019092526001600160a01b0384169083906040516134f59190613ea1565b60006040518083038185875af1925050503d8060008114613532576040519150601f19603f3d011682016040523d82523d6000602084013e613537565b606091505b5050905080612e4a5760405162461bcd60e51b8152600401610c9290614c75565b600080846001600160a01b031663a9059cbb85856040516024016129fb929190614004565b815460009082106135a05760405162461bcd60e51b8152600401610c92906142eb565b8260000182815481106135c357634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b60006135fe83836135d6565b61363457508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611d20565b506000611d20565b6000818152600183016020526040812054801561374f576000613660600183614f41565b855490915060009061367490600190614f41565b9050600086600001828154811061369b57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106136cc57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001556136e3836001614ec2565b6000828152600189016020526040902055865487908061371357634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611d20565b6000915050611d20565b82805461376590614fc9565b90600052602060002090601f01602090048101928261378757600085556137cd565b82601f106137a05782800160ff198235161785556137cd565b828001600101855582156137cd579182015b828111156137cd5782358255916020019190600101906137b2565b50612d99929150613900565b8280546137e590614fc9565b90600052602060002090601f01602090048101928261380757600085556137cd565b82601f1061382057805160ff19168380011785556137cd565b828001600101855582156137cd579182015b828111156137cd578251825591602001919060010190613832565b82805461385990614fc9565b90600052602060002090601f01602090048101928261387b57600085556137cd565b82601f1061388c57805485556137cd565b828001600101855582156137cd57600052602060002091601f016020900482015b828111156137cd5782548255916001019190600101906138ad565b5080546138d490614fc9565b6000825580601f106138e6575061286a565b601f01602090049060005260206000209081019061286a91905b5b80821115612d995760008155600101613901565b60008083601f840112613926578081fd5b5081356001600160401b0381111561393c578182fd5b6020830191508360208083028501011115611a8d57600080fd5b60008083601f840112613967578182fd5b5081356001600160401b0381111561397d578182fd5b602083019150836020828501011115611a8d57600080fd5b6000602082840312156139a6578081fd5b81356139b181615045565b9392505050565b60008060008060008060008060008060006101608c8e0312156139d9578687fd5b8b356139e481615045565b9a5060208c01356139f481615045565b995060408c0135985060608c0135975060808c0135965060a08c0135613a1981615045565b955060c08c0135945060e08c013593506101008c0135613a3881615045565b92506101208c0135613a4981615045565b91506101408c0135613a5a81615045565b809150509295989b509295989b9093969950565b60008060408385031215613a80578182fd5b8235613a8b81615045565b91506020830135613a9b8161505a565b809150509250929050565b60008060008060008060008060008060006101608c8e0312156139d9578081fd5b600080600060608486031215613adb578081fd5b8335613ae681615045565b9250602084013591506040840135613afd8161505a565b809150509250925092565b600080600060408486031215613b1c578081fd5b83356001600160401b03811115613b31578182fd5b613b3d86828701613915565b9094509250506020840135613afd8161505a565b60008060008060408587031215613b66578182fd5b84356001600160401b0380821115613b7c578384fd5b613b8888838901613915565b90965094506020870135915080821115613ba0578384fd5b50613bad87828801613915565b95989497509550505050565b600060208284031215613bca578081fd5b81356139b18161505a565b600060208284031215613be6578081fd5b81516139b18161505a565b600060208284031215613c02578081fd5b5035919050565b60008060408385031215613c1b578182fd5b823591506020830135613a9b81615045565b60008060408385031215613c3f578182fd5b50508035926020909101359150565b60008060208385031215613c60578182fd5b82356001600160401b03811115613c75578283fd5b613c8185828601613956565b90969095509350505050565b600080600080600080600080610100898b031215613ca9578182fd5b8835613cb481615045565b97506020890135613cc481615045565b96506040890135613cd481615045565b9550606089013594506080890135935060a0890135613cf281615068565b979a969950949793969295929450505060c08201359160e0013590565b60008060008060408587031215613d24578182fd5b84356001600160401b0380821115613d3a578384fd5b613d4688838901613956565b90965094506020870135915080821115613d5e578384fd5b50613bad87828801613956565b600060208284031215613d7c578081fd5b81516001600160401b0380821115613d92578283fd5b818401915084601f830112613da5578283fd5b815181811115613db757613db761502f565b604051601f8201601f191681016020018381118282101715613ddb57613ddb61502f565b604052818152838201602001871015613df2578485fd5b613e03826020830160208701614f9d565b9695505050505050565b600060208284031215613e1e578081fd5b5051919050565b60008060408385031215613e37578182fd5b823591506020830135613a9b8161505a565b600060208284031215613e5a578081fd5b81516139b181615068565b60008151808452613e7d816020860160208601614f9d565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b60008251613eb3818460208701614f9d565b9190910192915050565b6000808354613ecb81614fc9565b60018281168015613ee35760018114613ef457613f20565b60ff19841687528287019450613f20565b8786526020808720875b85811015613f175781548a820152908401908201613efe565b50505082870194505b50929695505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039b8c168152998b1660208b015260408a01989098526060890196909652608088019490945291871660a087015260c086015260e0850152841661010084015283166101208301529091166101408201526101600190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039490941684526001600160401b039283166020850152911660408301521515606082015260800190565b604080825283519082018190526000906020906060840190828701845b8281101561408a57815115158452928401929084019060010161406c565b5050508381038285015284518082528282019080840283018401878501865b838110156140d757601f198684030185526140c5838351613e65565b948701949250908601906001016140a9565b50909998505050505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561413957603f19888603018452614127858351613e65565b9450928501929085019060010161410b565b5092979650505050505050565b901515815260200190565b90815260200190565b600060208252611d1d6020830184613e65565b60006020825282602083015282846040840137818301604090810191909152601f909201601f19160101919050565b6000604082526141af6040830185613e65565b90508260208301529392505050565b600060208083528184546141d181614fc9565b808487015260406001808416600081146141f2576001811461420657614231565b60ff19851689840152606089019550614231565b898852868820885b858110156142295781548b820186015290830190880161420e565b8a0184019650505b509398975050505050505050565b602080825260159082015274426f72696e674d6174683a20556e646572666c6f7760581b604082015260600190565b60208082526030908201527f4879706572626f6c696341756374696f6e3a205061796d656e7420637572726560408201526f06e6379206973206e6f742045524332360841b606082015260800190565b602080825260139082015272105b1c9958591e481a5b9a5d1a585b1a5cd959606a1b604082015260600190565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b60208082526039908201527f4879706572626f6c696341756374696f6e3a20746f74616c20746f6b656e732060408201527f6d7573742062652067726561746572207468616e207a65726f00000000000000606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b6020808252602e908201527f4879706572626f6c696341756374696f6e3a2056616c7565206d75737420626560408201526d020686967686572207468616e20360941b606082015260800190565b60208082526033908201527f447574636841756374696f6e3a2054686520636f6d6d6974746564204554482060408201527265786365656473207468652062616c616e636560681b606082015260800190565b6020808252818101527f4879706572626f6c696341756374696f6e3a206e6f742066696e616c697a6564604082015260600190565b6020808252602d908201527f4879706572626f6c696341756374696f6e3a2077616c6c65742069732074686560408201526c207a65726f206164647265737360981b606082015260800190565b6020808252602a908201527f4879706572626f6c696341756374696f6e3a2073656e646572206d7573742062604082015269329030b71030b236b4b760b11b606082015260800190565b60208082526052908201527f4e6f2061677265656d656e742070726f76696465642c20706c6561736520726560408201527f766965772074686520736d61727420636f6e7472616374206265666f726520696060820152711b9d195c9858dd1a5b99c81dda5d1a081a5d60721b608082015260a00190565b60208082526039908201527f4879706572626f6c696341756374696f6e3a20656e642074696d65206d75737460408201527f206265206f6c646572207468616e2073746172742074696d6500000000000000606082015260800190565b6020808252602f908201527f4879706572626f6c696341756374696f6e3a2061756374696f6e20686173206e60408201526e1bdd08199a5b9a5cda1959081e595d608a1b606082015260800190565b60208082526036908201527f4879706572626f6c696341756374696f6e3a207061796d656e742063757272656040820152756e6379206973206e6f7420455448206164647265737360501b606082015260800190565b60208082526034908201527f4879706572626f6c696341756374696f6e3a2073746172742074696d65206973604082015273206265666f72652063757272656e742074696d6560601b606082015260800190565b602080825260159082015274111bd8dd5b595b9d081cda1bdd5b1908195e1a5cdd605a1b604082015260600190565b6020808252603a908201527f4879706572626f6c696341756374696f6e3a20656e642074696d65206d75737460408201527f206265206f6c646572207468616e207374617274207072696365000000000000606082015260800190565b60208082526032908201527f4879706572626f6c696341756374696f6e3a207061796d656e742063757272656040820152713731bc9034b9903737ba1030903a37b5b2b760711b606082015260800190565b60208082526025908201527f4879706572626f6c696341756374696f6e3a206e6f20746f6b656e7320746f20604082015264636c61696d60d81b606082015260800190565b6020808252601c908201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604082015260600190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b6020808252602c908201527f4879706572626f6c696341756374696f6e3a2061646d696e206973207468652060408201526b7a65726f206164647265737360a01b606082015260800190565b60208082526018908201527f426f72696e674d6174683a20416464204f766572666c6f770000000000000000604082015260600190565b60208082526018908201527f5a65726f206e616d65206973206e6f7420616c6c6f7765640000000000000000604082015260600190565b6020808252600f908201526e125b98dbdc9c9958dd081a5b9c1d5d608a1b604082015260600190565b60208082526046908201527f4879706572626f6c696341756374696f6e3a20656e74657220616e20756e697860408201527f2074696d657374616d7020696e207365636f6e64732c206e6f74206d696c697360608201526565636f6e647360d01b608082015260a00190565b6020808252602c908201527f4879706572626f6c696341756374696f6e3a2061756374696f6e20616c72656160408201526b191e48199a5b985b1a5e995960a21b606082015260800190565b6020808252602c908201527f4879706572626f6c696341756374696f6e3a2061756374696f6e20616c72656160408201526b191e4818dbdb5b5a5d1d195960a21b606082015260800190565b6020808252602c908201527f4879706572626f6c696341756374696f6e3a20746f6b656e206973207468652060408201526b7a65726f206164647265737360a01b606082015260800190565b60208082526032908201527f4879706572626f6c696341756374696f6e3a20546f6b656e20646f6573206e6f60408201527174206861766520313820646563696d616c7360701b606082015260800190565b6020808252601b908201527f426f72696e674d6174683a2075696e743634204f766572666c6f770000000000604082015260600190565b60208082526028908201527f4879706572626f6c696341756374696f6e3a206f7574736964652061756374696040820152676f6e20686f75727360c01b606082015260800190565b60208082526037908201527f4879706572626f6c696341756374696f6e3a206d696e696d756d20707269636560408201527f206d7573742062652067726561746572207468616e2030000000000000000000606082015260800190565b60208082526036908201527f4879706572626f6c696341756374696f6e3a2061756374696f6e2063616e6e6f6040820152751d081a185d9948185b1c9958591e481cdd185c9d195960521b606082015260800190565b60208082526023908201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960408201526213115160ea1b606082015260800190565b602080825260139082015272496e646578206f7574206f6620626f756e647360681b604082015260600190565b6020808252601a908201527f53686f756c64206e6f74206265206120656d7074792064617461000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526018908201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b602080825260149082015273426f72696e674d6174683a20446976207a65726f60601b604082015260600190565b6001600160801b0393909316835290151560208301521515604082015260600190565b6001600160801b0392831681529116602082015260400190565b918252602082015260400190565b6001600160401b0393841681529190921660208201526001600160801b03909116604082015260600190565b6000808335601e19843603018112614e94578283fd5b8301803591506001600160401b03821115614ead578283fd5b602001915036819003821315611a8d57600080fd5b60008219821115614ed557614ed5615019565b500190565b600063ffffffff808316818516808303821115614ef957614ef9615019565b01949350505050565b600082614f1d57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615614f3c57614f3c615019565b500290565b600082821015614f5357614f53615019565b500390565b600063ffffffff83811690831681811015614f7557614f75615019565b039392505050565b60006001600160401b0383811690831681811015614f7557614f75615019565b60005b83811015614fb8578181015183820152602001614fa0565b83811115610efe5750506000910152565b600281046001821680614fdd57607f821691505b602082108114156115fd57634e487b7160e01b600052602260045260246000fd5b600060001982141561501257615012615019565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461286a57600080fd5b801515811461286a57600080fd5b60ff8116811461286a57600080fdfe9d49f397ae9ef1a834b569acb967799a367061e305932181a44f5773da873bfd4920756e6465727374616e6420746861742049276d20696e746572616374696e672077697468206120736d61727420636f6e74726163742e204920756e6465727374616e64207468617420746f6b656e7320636f6d6d6974656420617265207375626a65637420746f2074686520746f6b656e2069737375657220616e64206c6f63616c206c617773207768657265206170706c696361626c652e204920726576696577656420636f6465206f662074686520736d61727420636f6e747261637420616e6420756e6465727374616e642069742066756c6c792e204920616772656520746f206e6f7420686f6c6420646576656c6f70657273206f72206f746865722070656f706c65206173736f6369617465642077697468207468652070726f6a656374206c6961626c6520666f7220616e79206c6f73736573206f72206d6973756e6465727374616e64696e677397667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9299f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a2646970667358221220e6ccd89317cdef017c4d83998ec4030579d475e3cf954627f0f29c1dbe50294e64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAdminRole(address)": {
        "details": "The sender must have the admin role.",
        "params": {
          "_address": "EOA or contract receiving the new role."
        }
      },
      "addMinterRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract receiving the new role"
        }
      },
      "addOperatorRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract receiving the new role"
        }
      },
      "addSmartContractRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract receiving the new role"
        }
      },
      "auctionEnded()": {
        "returns": {
          "_0": "True if auction is successful or time has ended."
        }
      },
      "auctionSuccessful()": {
        "returns": {
          "_0": "True if tokenPrice is bigger or equal clearingPrice."
        }
      },
      "batch(bytes[],bool)": {
        "params": {
          "calls": "An array of inputs for each call.",
          "revertOnFail": "If True then reverts after a failed call and stops doing further calls."
        },
        "returns": {
          "results": "An array with the returned data of each function call, mapped one-to-one to `calls`. F1: External is ok here because this is the batch function, adding it to a batch makes no sense F2: Calls in the batch may be payable, delegatecall operates in the same context, so each call in the batch has access to msg.value C3: The length of the loop is fully under user control, so can't be exploited C7: Delegatecall is only used on the same contract, so it's safe",
          "successes": "An array indicating the success of a call, mapped one-to-one to `calls`."
        }
      },
      "calculateCommitment(uint256)": {
        "params": {
          "_commitment": "Commitment user would like to make."
        },
        "returns": {
          "_0": "Amount allowed to commit."
        }
      },
      "cancelAuction()": {
        "details": "Admin can cancel the auction before it starts"
      },
      "commitEth(address,bool)": {
        "params": {
          "_beneficiary": "Auction participant ETH address."
        }
      },
      "commitTokens(uint256,bool)": {
        "params": {
          "_amount": "Amount of tokens to commit."
        }
      },
      "commitTokensFrom(address,uint256,bool)": {
        "details": "Users must approve contract prior to committing tokens to auction"
      },
      "finalize()": {
        "details": "Transfer contract funds to initialized wallet."
      },
      "finalizeTimeExpired()": {
        "returns": {
          "_0": "Returns true if 7 days have passed since the end of the auction"
        }
      },
      "finalized()": {
        "returns": {
          "_0": "Returns true if market has been finalized"
        }
      },
      "getAllDocuments()": {
        "returns": {
          "_0": "string List of all documents names present in the contract."
        }
      },
      "getAuctionInitData(address,address,uint256,uint256,uint256,address,uint256,uint256,address,address,address)": {
        "params": {
          "_endTime": "Auction end time.",
          "_factor": "Inflection point of the auction.",
          "_funder": "The address that funds the token for HyperbolicAuction.",
          "_minimumPrice": "The minimum auction price.",
          "_paymentCurrency": "The currency the HyperbolicAuction accepts for payment. Can be ETH or token address.",
          "_startTime": "Auction start time.",
          "_token": "Address of the token being sold.",
          "_totalTokens": "The total number of tokens to sell in auction.",
          "_wallet": "Address where collected funds will be forwarded to."
        },
        "returns": {
          "_data": "All the data in bytes format."
        }
      },
      "getDocument(string)": {
        "params": {
          "_name": "Name of the document"
        },
        "returns": {
          "_0": "string The data associated with the document.",
          "_1": "uint256 the timestamp at which the document was last modified."
        }
      },
      "getDocumentCount()": {
        "returns": {
          "_0": "uint256 Count of the document names present in the contract."
        }
      },
      "getDocumentName(uint256)": {
        "returns": {
          "_0": "string Name of the document name."
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasAdminRole(address)": {
        "params": {
          "_address": "EOA or contract being checked."
        },
        "returns": {
          "_0": "bool True if the account has the role or false if it does not."
        }
      },
      "hasMinterRole(address)": {
        "params": {
          "_address": "EOA or contract being checked"
        },
        "returns": {
          "_0": "bool True if the account has the role or false if it does not"
        }
      },
      "hasOperatorRole(address)": {
        "params": {
          "_address": "EOA or contract being checked"
        },
        "returns": {
          "_0": "bool True if the account has the role or false if it does not"
        }
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "hasSmartContractRole(address)": {
        "params": {
          "_address": "EOA or contract being checked"
        },
        "returns": {
          "_0": "bool True if the account has the role or false if it does not"
        }
      },
      "initAccessControls(address)": {
        "params": {
          "_admin": "Admins address."
        }
      },
      "initAuction(address,address,uint256,uint256,uint256,address,uint256,uint256,address,address,address)": {
        "details": "Init function",
        "params": {
          "_admin": "Address that can finalize auction.",
          "_endTime": "Auction end time",
          "_factor": "Inflection point of the auction",
          "_funder": "The address that funds the token for HyperbolicAuction",
          "_minimumPrice": "The minimum auction price",
          "_paymentCurrency": "The currency the HyperbolicAuction accepts for payment. Can be ETH or token address",
          "_pointList": "Address that will manage auction approvals.",
          "_startTime": "Auction start time",
          "_token": "Address of the token being sold",
          "_totalTokens": "The total number of tokens to sell in auction",
          "_wallet": "Address where collected funds will be forwarded to"
        }
      },
      "initMarket(bytes)": {
        "params": {
          "_data": "Encoded data for initialization."
        }
      },
      "marketParticipationAgreement()": {
        "details": "Attribution to the awesome delta.financial contracts"
      },
      "priceFunction()": {
        "returns": {
          "_0": "Fixed start price or minimum price if outside of auction time, otherwise calculated current price."
        }
      },
      "removeAdminRole(address)": {
        "details": "The sender must have the admin role.",
        "params": {
          "_address": "EOA or contract affected."
        }
      },
      "removeMinterRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract affected"
        }
      },
      "removeOperatorRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract affected"
        }
      },
      "removeSmartContractRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract affected"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setAuctionPrice(uint256)": {
        "params": {
          "_minimumPrice": "Auction minimum price."
        }
      },
      "setAuctionTime(uint256,uint256)": {
        "params": {
          "_endTime": "Auction end time.",
          "_startTime": "Auction start time."
        }
      },
      "setAuctionWallet(address)": {
        "params": {
          "_wallet": "Auction wallet is where funds will be sent."
        }
      },
      "tokenPrice()": {
        "returns": {
          "_0": "Average token price."
        }
      },
      "tokensClaimable(address)": {
        "params": {
          "_user": "Auction participant address."
        },
        "returns": {
          "claimerCommitment": "User commitments reduced by already claimed tokens."
        }
      },
      "totalTokensCommitted()": {
        "returns": {
          "_0": "Number of tokens commited."
        }
      }
    },
    "stateVariables": {
      "marketTemplate": {
        "details": "For different marketplace types, this must be incremented."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "MinterRoleGranted(address,address)": {
        "notice": "Events for adding and removing various roles"
      }
    },
    "kind": "user",
    "methods": {
      "MINTER_ROLE()": {
        "notice": "Role definitions"
      },
      "addAdminRole(address)": {
        "notice": "Grants the admin role to an address."
      },
      "addMinterRole(address)": {
        "notice": "Grants the minter role to an address"
      },
      "addOperatorRole(address)": {
        "notice": "Grants the operator role to an address"
      },
      "addSmartContractRole(address)": {
        "notice": "Grants the smart contract role to an address"
      },
      "auctionEnded()": {
        "notice": "Checks if the auction has ended."
      },
      "auctionSuccessful()": {
        "notice": "Successful if tokens sold equals totalTokens."
      },
      "batch(bytes[],bool)": {
        "notice": "Allows batched call to self (this contract)."
      },
      "calculateCommitment(uint256)": {
        "notice": "Calculates the amount able to be committed during an auction."
      },
      "cancelAuction()": {
        "notice": "Cancel Auction"
      },
      "clearingPrice()": {
        "notice": "The current clearing price of the Hyperbolic auction"
      },
      "commitEth(address,bool)": {
        "notice": "Checks the amount of ETH to commit and adds the commitment. Refunds the buyer if commit is too high."
      },
      "commitTokens(uint256,bool)": {
        "notice": "Buy Tokens by commiting approved ERC20 tokens to this contract address."
      },
      "finalize()": {
        "notice": "Auction finishes successfully above the reserve"
      },
      "getAllDocuments()": {
        "notice": "Used to retrieve a full list of documents attached to the smart contract."
      },
      "getAuctionInitData(address,address,uint256,uint256,uint256,address,uint256,uint256,address,address,address)": {
        "notice": "Collects data to initialize the auction and encodes them."
      },
      "getDocument(string)": {
        "notice": "Used to return the details of a document with a known name (`string`)."
      },
      "getDocumentCount()": {
        "notice": "Used to retrieve the total documents in the smart contract."
      },
      "getDocumentName(uint256)": {
        "notice": "Used to retrieve the document name from index in the smart contract."
      },
      "hasAdminRole(address)": {
        "notice": "Used to check whether an address has the admin role."
      },
      "hasMinterRole(address)": {
        "notice": "Used to check whether an address has the minter role"
      },
      "hasOperatorRole(address)": {
        "notice": "Used to check whether an address has the operator role"
      },
      "hasSmartContractRole(address)": {
        "notice": "Used to check whether an address has the smart contract role"
      },
      "initAccessControls(address)": {
        "notice": "Initializes access controls."
      },
      "initAuction(address,address,uint256,uint256,uint256,address,uint256,uint256,address,address,address)": {
        "notice": "Initializes main contract variables and transfers funds for the auction."
      },
      "initMarket(bytes)": {
        "notice": "Decodes and hands auction data to the initAuction function."
      },
      "marketTemplate()": {
        "notice": "FLYBYMarket template id."
      },
      "permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Call wrapper that performs `ERC20.permit` on `token`. Lookup `IERC20.permit`. F6: Parameters can be used front-run the permit and the user's permit will fail (due to nonce or other revert) if part of a batch this could be used to grief once as the second call would not need the permit"
      },
      "priceFunction()": {
        "notice": "Returns auction price in any time."
      },
      "removeAdminRole(address)": {
        "notice": "Removes the admin role from an address."
      },
      "removeMinterRole(address)": {
        "notice": "Removes the minter role from an address"
      },
      "removeOperatorRole(address)": {
        "notice": "Removes the operator role from an address"
      },
      "removeSmartContractRole(address)": {
        "notice": "Removes the smart contract role from an address"
      },
      "setAuctionPrice(uint256)": {
        "notice": "Admin can set start and min price through this function."
      },
      "setAuctionTime(uint256,uint256)": {
        "notice": "Admin can set start and end time through this function."
      },
      "setAuctionWallet(address)": {
        "notice": "Admin can set the auction wallet through this function."
      },
      "tokenPrice()": {
        "notice": "Calculates the average price of each token from all commitments."
      },
      "tokensClaimable(address)": {
        "notice": "How many tokens the user is able to claim."
      },
      "totalTokensCommitted()": {
        "notice": "Calculates total amount of tokens committed at current auction price."
      },
      "withdrawTokens()": {
        "notice": "Withdraws bought tokens, or returns commitment if the sale is unsuccessful."
      },
      "withdrawTokens(address)": {
        "notice": "Withdraw your tokens once the Auction has ended."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12488,
        "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)12483_storage)"
      },
      {
        "astId": 215,
        "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
        "label": "initAccess",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 20763,
        "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
        "label": "_documents",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Document)20758_storage)"
      },
      {
        "astId": 20767,
        "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
        "label": "_docIndexes",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_uint32)"
      },
      {
        "astId": 20770,
        "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
        "label": "_docNames",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 15264,
        "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
        "label": "_status",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 5426,
        "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
        "label": "marketInfo",
        "offset": 0,
        "slot": "6",
        "type": "t_struct(MarketInfo)5423_storage"
      },
      {
        "astId": 5434,
        "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
        "label": "marketPrice",
        "offset": 0,
        "slot": "7",
        "type": "t_struct(MarketPrice)5431_storage"
      },
      {
        "astId": 5444,
        "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
        "label": "marketStatus",
        "offset": 0,
        "slot": "8",
        "type": "t_struct(MarketStatus)5441_storage"
      },
      {
        "astId": 5446,
        "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
        "label": "auctionToken",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 5448,
        "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
        "label": "paymentCurrency",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      },
      {
        "astId": 5450,
        "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
        "label": "wallet",
        "offset": 0,
        "slot": "11",
        "type": "t_address_payable"
      },
      {
        "astId": 5452,
        "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
        "label": "pointList",
        "offset": 0,
        "slot": "12",
        "type": "t_address"
      },
      {
        "astId": 5456,
        "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
        "label": "commitments",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5460,
        "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
        "label": "claimed",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)12483_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)12483_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Document)20758_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Documents.Document)",
        "numberOfBytes": "32",
        "value": "t_struct(Document)20758_storage"
      },
      "t_mapping(t_string_memory_ptr,t_uint32)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint32)",
        "numberOfBytes": "32",
        "value": "t_uint32"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AddressSet)14934_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "members": [
          {
            "astId": 14933,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)14657_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Document)20758_storage": {
        "encoding": "inplace",
        "label": "struct Documents.Document",
        "members": [
          {
            "astId": 20753,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "docIndex",
            "offset": 0,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 20755,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "lastModified",
            "offset": 4,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 20757,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "data",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(MarketInfo)5423_storage": {
        "encoding": "inplace",
        "label": "struct HyperbolicAuction.MarketInfo",
        "members": [
          {
            "astId": 5418,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "startTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 5420,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "endTime",
            "offset": 8,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 5422,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "totalTokens",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(MarketPrice)5431_storage": {
        "encoding": "inplace",
        "label": "struct HyperbolicAuction.MarketPrice",
        "members": [
          {
            "astId": 5428,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "minimumPrice",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 5430,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "alpha",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(MarketStatus)5441_storage": {
        "encoding": "inplace",
        "label": "struct HyperbolicAuction.MarketStatus",
        "members": [
          {
            "astId": 5436,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "commitmentsTotal",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 5438,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "finalized",
            "offset": 16,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 5440,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "usePointList",
            "offset": 17,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(RoleData)12483_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 12480,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(AddressSet)14934_storage"
          },
          {
            "astId": 12482,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "adminRole",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Set)14657_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "members": [
          {
            "astId": 14652,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 14656,
            "contract": "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}