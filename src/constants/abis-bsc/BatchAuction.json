{
  "address": "0x0638dAa0344EdB0Ca5223eFe8405b58D7a9157e5",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commitment",
          "type": "uint256"
        }
      ],
      "name": "AddedCommitment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "AdminRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "AdminRoleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "AuctionCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "AuctionFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minimumCommitmentAmount",
          "type": "uint256"
        }
      ],
      "name": "AuctionPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "AuctionTimeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "AuctionWalletUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_data",
          "type": "string"
        }
      ],
      "name": "DocumentRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_data",
          "type": "string"
        }
      ],
      "name": "DocumentUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "MinterRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "MinterRoleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "OperatorRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "OperatorRoleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "SmartContractRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "SmartContractRoleRemoved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPERATOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SMART_CONTRACT_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addAdminRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addMinterRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addOperatorRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addSmartContractRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionEnded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionSuccessful",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "calls",
          "type": "bytes[]"
        },
        {
          "internalType": "bool",
          "name": "revertOnFail",
          "type": "bool"
        }
      ],
      "name": "batch",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "successes",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "readAndAgreedToMarketParticipationAgreement",
          "type": "bool"
        }
      ],
      "name": "commitEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "readAndAgreedToMarketParticipationAgreement",
          "type": "bool"
        }
      ],
      "name": "commitTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "readAndAgreedToMarketParticipationAgreement",
          "type": "bool"
        }
      ],
      "name": "commitTokensFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_status",
          "type": "bool"
        }
      ],
      "name": "enableList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalizeTimeExpired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDocuments",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseInformation",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "startTime",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "endTime",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "marketFinalized",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_paymentCurrency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minimumCommitmentAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pointList",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "getBatchAuctionInitData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getDocument",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDocumentCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getDocumentName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasAdminRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasMinterRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasOperatorRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasSmartContractRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "initAccessControls",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_paymentCurrency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minimumCommitmentAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pointList",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "initAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "initMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketInfo",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "startTime",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "endTime",
          "type": "uint64"
        },
        {
          "internalType": "uint128",
          "name": "totalTokens",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketParticipationAgreement",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketStatus",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "commitmentsTotal",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "minimumCommitmentAmount",
          "type": "uint128"
        },
        {
          "internalType": "bool",
          "name": "finalized",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "usePointList",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketTemplate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymentCurrency",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permitToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pointList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeAdminRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "removeDocument",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeMinterRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeOperatorRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeSmartContractRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumCommitmentAmount",
          "type": "uint256"
        }
      ],
      "name": "setAuctionPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "name": "setAuctionTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "setAuctionWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_data",
          "type": "string"
        }
      ],
      "name": "setDocument",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_name",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_data",
          "type": "string[]"
        }
      ],
      "name": "setDocuments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_list",
          "type": "address"
        }
      ],
      "name": "setList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "tokensClaimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "claimerCommitment",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x2b61cf8e245e2992085796e6b4c12ff85dd37e19b154597afe13973b9f86ef06",
  "receipt": {
    "to": null,
    "from": "0x00B91B2F8aFE87FCDc2b3fFA9ee2278cd1E4DDf8",
    "contractAddress": "0x0638dAa0344EdB0Ca5223eFe8405b58D7a9157e5",
    "transactionIndex": 3,
    "gasUsed": "4341510",
    "logsBloom": "0x
    "blockHash": "0x930f93456b380dcd4e2496a789a230197f3c93280e65d8304142641eddf13e87",
    "transactionHash": "0x2b61cf8e245e2992085796e6b4c12ff85dd37e19b154597afe13973b9f86ef06",
    "logs": [],
    "blockNumber": 14440447,
    "cumulativeGasUsed": "4871149",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "0bb2481c0a33b756a35d8c75b9e1dee6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commitment\",\"type\":\"uint256\"}],\"name\":\"AddedCommitment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AdminRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AdminRoleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"AuctionCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"AuctionFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumCommitmentAmount\",\"type\":\"uint256\"}],\"name\":\"AuctionPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"AuctionTimeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"AuctionWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_data\",\"type\":\"string\"}],\"name\":\"DocumentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_data\",\"type\":\"string\"}],\"name\":\"DocumentUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MinterRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MinterRoleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"OperatorRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"OperatorRoleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SmartContractRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SmartContractRoleRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SMART_CONTRACT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addOperatorRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addSmartContractRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionSuccessful\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"calls\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"revertOnFail\",\"type\":\"bool\"}],\"name\":\"batch\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"successes\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"readAndAgreedToMarketParticipationAgreement\",\"type\":\"bool\"}],\"name\":\"commitEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readAndAgreedToMarketParticipationAgreement\",\"type\":\"bool\"}],\"name\":\"commitTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readAndAgreedToMarketParticipationAgreement\",\"type\":\"bool\"}],\"name\":\"commitTokensFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"enableList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizeTimeExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDocuments\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseInformation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"marketFinalized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_paymentCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minimumCommitmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pointList\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"getBatchAuctionInitData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getDocument\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDocumentCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getDocumentName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasAdminRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasMinterRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasOperatorRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasSmartContractRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"initAccessControls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_paymentCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minimumCommitmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pointList\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"initAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketInfo\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"totalTokens\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketParticipationAgreement\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketStatus\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"commitmentsTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"minimumCommitmentAmount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"finalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"usePointList\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketTemplate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentCurrency\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pointList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"removeDocument\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeOperatorRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeSmartContractRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumCommitmentAmount\",\"type\":\"uint256\"}],\"name\":\"setAuctionPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"setAuctionTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setAuctionWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_data\",\"type\":\"string\"}],\"name\":\"setDocument\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_name\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_data\",\"type\":\"string[]\"}],\"name\":\"setDocuments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_list\",\"type\":\"address\"}],\"name\":\"setList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"tokensClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimerCommitment\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAdminRole(address)\":{\"details\":\"The sender must have the admin role.\",\"params\":{\"_address\":\"EOA or contract receiving the new role.\"}},\"addMinterRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract receiving the new role\"}},\"addOperatorRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract receiving the new role\"}},\"addSmartContractRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract receiving the new role\"}},\"auctionEnded()\":{\"returns\":{\"_0\":\"bool True if current time is greater than auction end time.\"}},\"auctionSuccessful()\":{\"returns\":{\"_0\":\"True if tokens sold greater than or equals to the minimum commitment amount.\"}},\"batch(bytes[],bool)\":{\"params\":{\"calls\":\"An array of inputs for each call.\",\"revertOnFail\":\"If True then reverts after a failed call and stops doing further calls.\"},\"returns\":{\"results\":\"An array with the returned data of each function call, mapped one-to-one to `calls`. F1: External is ok here because this is the batch function, adding it to a batch makes no sense F2: Calls in the batch may be payable, delegatecall operates in the same context, so each call in the batch has access to msg.value C3: The length of the loop is fully under user control, so can't be exploited C7: Delegatecall is only used on the same contract, so it's safe\",\"successes\":\"An array indicating the success of a call, mapped one-to-one to `calls`.\"}},\"cancelAuction()\":{\"details\":\"Admin can cancel the auction before it starts\"},\"commitEth(address,bool)\":{\"params\":{\"_beneficiary\":\"Auction participant ETH address.\"}},\"commitTokens(uint256,bool)\":{\"params\":{\"_amount\":\"Amount of tokens to commit.\"}},\"commitTokensFrom(address,uint256,bool)\":{\"details\":\"Users must approve contract prior to committing tokens to auction.\",\"params\":{\"_amount\":\"Amount of approved ERC20 tokens.\",\"_from\":\"User ERC20 address.\"}},\"finalize()\":{\"details\":\"Transfer contract funds to initialized wallet.\"},\"finalized()\":{\"returns\":{\"_0\":\"bool True if auction has been finalised.\"}},\"getAllDocuments()\":{\"returns\":{\"_0\":\"string List of all documents names present in the contract.\"}},\"getDocument(string)\":{\"params\":{\"_name\":\"Name of the document\"},\"returns\":{\"_0\":\"string The data associated with the document.\",\"_1\":\"uint256 the timestamp at which the document was last modified.\"}},\"getDocumentCount()\":{\"returns\":{\"_0\":\"uint256 Count of the document names present in the contract.\"}},\"getDocumentName(uint256)\":{\"returns\":{\"_0\":\"string Name of the document name.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasAdminRole(address)\":{\"params\":{\"_address\":\"EOA or contract being checked.\"},\"returns\":{\"_0\":\"bool True if the account has the role or false if it does not.\"}},\"hasMinterRole(address)\":{\"params\":{\"_address\":\"EOA or contract being checked\"},\"returns\":{\"_0\":\"bool True if the account has the role or false if it does not\"}},\"hasOperatorRole(address)\":{\"params\":{\"_address\":\"EOA or contract being checked\"},\"returns\":{\"_0\":\"bool True if the account has the role or false if it does not\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"hasSmartContractRole(address)\":{\"params\":{\"_address\":\"EOA or contract being checked\"},\"returns\":{\"_0\":\"bool True if the account has the role or false if it does not\"}},\"initAccessControls(address)\":{\"params\":{\"_admin\":\"Admins address.\"}},\"initAuction(address,address,uint256,uint256,uint256,address,uint256,address,address,address)\":{\"details\":\"Init function.\",\"params\":{\"_admin\":\"Address that can finalize auction.\",\"_endTime\":\"Auction end time.\",\"_funder\":\"The address that funds the token for BatchAuction.\",\"_minimumCommitmentAmount\":\"Minimum amount collected at which the auction will be successful.\",\"_paymentCurrency\":\"The currency the BatchAuction accepts for payment. Can be ETH or token address.\",\"_startTime\":\"Auction start time.\",\"_token\":\"Address of the token being sold.\",\"_totalTokens\":\"The total number of tokens to sell in auction.\",\"_wallet\":\"Address where collected funds will be forwarded to.\"}},\"marketParticipationAgreement()\":{\"details\":\"Attribution to the awesome delta.financial contracts\"},\"removeAdminRole(address)\":{\"details\":\"The sender must have the admin role.\",\"params\":{\"_address\":\"EOA or contract affected.\"}},\"removeMinterRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract affected\"}},\"removeOperatorRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract affected\"}},\"removeSmartContractRole(address)\":{\"details\":\"The sender must have the admin role\",\"params\":{\"_address\":\"EOA or contract affected\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setAuctionPrice(uint256)\":{\"params\":{\"_minimumCommitmentAmount\":\"Auction minimum raised target.\"}},\"setAuctionTime(uint256,uint256)\":{\"params\":{\"_endTime\":\"Auction end time.\",\"_startTime\":\"Auction start time.\"}},\"setAuctionWallet(address)\":{\"params\":{\"_wallet\":\"Auction wallet is where funds will be sent.\"}},\"tokenPrice()\":{\"returns\":{\"_0\":\"Token price.\"}},\"tokensClaimable(address)\":{\"params\":{\"_user\":\"Auction participant address.\"},\"returns\":{\"claimerCommitment\":\"Tokens left to claim.\"}}},\"stateVariables\":{\"marketTemplate\":{\"details\":\"For different marketplace types, this must be incremented.\"}},\"version\":1},\"userdoc\":{\"events\":{\"MinterRoleGranted(address,address)\":{\"notice\":\"Events for adding and removing various roles\"}},\"kind\":\"user\",\"methods\":{\"MINTER_ROLE()\":{\"notice\":\"Role definitions\"},\"addAdminRole(address)\":{\"notice\":\"Grants the admin role to an address.\"},\"addMinterRole(address)\":{\"notice\":\"Grants the minter role to an address\"},\"addOperatorRole(address)\":{\"notice\":\"Grants the operator role to an address\"},\"addSmartContractRole(address)\":{\"notice\":\"Grants the smart contract role to an address\"},\"auctionEnded()\":{\"notice\":\"Checks if the auction has ended.\"},\"auctionSuccessful()\":{\"notice\":\"Checks if raised more than minimum amount.\"},\"batch(bytes[],bool)\":{\"notice\":\"Allows batched call to self (this contract).\"},\"cancelAuction()\":{\"notice\":\"Cancel Auction\"},\"commitEth(address,bool)\":{\"notice\":\"Commit ETH to buy tokens on auction.\"},\"commitTokens(uint256,bool)\":{\"notice\":\"Buy Tokens by commiting approved ERC20 tokens to this contract address.\"},\"commitTokensFrom(address,uint256,bool)\":{\"notice\":\"Checks if amount not 0 and makes the transfer and adds commitment.\"},\"finalize()\":{\"notice\":\"Auction finishes successfully above the reserve\"},\"finalizeTimeExpired()\":{\"notice\":\"Returns true if 7 days have passed since the end of the auction\"},\"finalized()\":{\"notice\":\"Checks if the auction has been finalised.\"},\"getAllDocuments()\":{\"notice\":\"Used to retrieve a full list of documents attached to the smart contract.\"},\"getDocument(string)\":{\"notice\":\"Used to return the details of a document with a known name (`string`).\"},\"getDocumentCount()\":{\"notice\":\"Used to retrieve the total documents in the smart contract.\"},\"getDocumentName(uint256)\":{\"notice\":\"Used to retrieve the document name from index in the smart contract.\"},\"hasAdminRole(address)\":{\"notice\":\"Used to check whether an address has the admin role.\"},\"hasMinterRole(address)\":{\"notice\":\"Used to check whether an address has the minter role\"},\"hasOperatorRole(address)\":{\"notice\":\"Used to check whether an address has the operator role\"},\"hasSmartContractRole(address)\":{\"notice\":\"Used to check whether an address has the smart contract role\"},\"initAccessControls(address)\":{\"notice\":\"Initializes access controls.\"},\"initAuction(address,address,uint256,uint256,uint256,address,uint256,address,address,address)\":{\"notice\":\"Initializes main contract variables and transfers funds for the auction.\"},\"marketTemplate()\":{\"notice\":\"FLYBYMARKET template id for the factory contract.\"},\"permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Call wrapper that performs `ERC20.permit` on `token`. Lookup `IERC20.permit`. F6: Parameters can be used front-run the permit and the user's permit will fail (due to nonce or other revert) if part of a batch this could be used to grief once as the second call would not need the permit\"},\"removeAdminRole(address)\":{\"notice\":\"Removes the admin role from an address.\"},\"removeMinterRole(address)\":{\"notice\":\"Removes the minter role from an address\"},\"removeOperatorRole(address)\":{\"notice\":\"Removes the operator role from an address\"},\"removeSmartContractRole(address)\":{\"notice\":\"Removes the smart contract role from an address\"},\"setAuctionPrice(uint256)\":{\"notice\":\"Admin can set start and min price through this function.\"},\"setAuctionTime(uint256,uint256)\":{\"notice\":\"Admin can set start and end time through this function.\"},\"setAuctionWallet(address)\":{\"notice\":\"Admin can set the auction wallet through this function.\"},\"tokenPrice()\":{\"notice\":\"Calculates the price of each token from all commitments.\"},\"tokensClaimable(address)\":{\"notice\":\"How many tokens the user is able to claim.\"},\"withdrawTokens()\":{\"notice\":\"Withdraws bought tokens, or returns commitment if the sale is unsuccessful.\"},\"withdrawTokens(address)\":{\"notice\":\"Withdraw your tokens once the Auction has ended.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auctions/BatchAuction.sol\":\"BatchAuction\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Access/FLYBYAccessControls.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./FLYBYAdminAccess.sol\\\";\\n\\ncontract FLYBYAccessControls is FLYBYAdminAccess {\\n    /// @notice Role definitions\\n    bytes32 public constant MINTER_ROLE = keccak256(\\\"MINTER_ROLE\\\");\\n    bytes32 public constant SMART_CONTRACT_ROLE = keccak256(\\\"SMART_CONTRACT_ROLE\\\");\\n    bytes32 public constant OPERATOR_ROLE = keccak256(\\\"OPERATOR_ROLE\\\");\\n\\n    /// @notice Events for adding and removing various roles\\n\\n    event MinterRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event MinterRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event OperatorRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event OperatorRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event SmartContractRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event SmartContractRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    /**\\n     * @notice Used to check whether an address has the minter role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasMinterRole(address _address) public view returns (bool) {\\n        return hasRole(MINTER_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Used to check whether an address has the smart contract role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasSmartContractRole(address _address) public view returns (bool) {\\n        return hasRole(SMART_CONTRACT_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Used to check whether an address has the operator role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasOperatorRole(address _address) public view returns (bool) {\\n        return hasRole(OPERATOR_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Grants the minter role to an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract receiving the new role\\n     */\\n    function addMinterRole(address _address) external {\\n        grantRole(MINTER_ROLE, _address);\\n        emit MinterRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the minter role from an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract affected\\n     */\\n    function removeMinterRole(address _address) external {\\n        revokeRole(MINTER_ROLE, _address);\\n        emit MinterRoleRemoved(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Grants the smart contract role to an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract receiving the new role\\n     */\\n    function addSmartContractRole(address _address) external {\\n        grantRole(SMART_CONTRACT_ROLE, _address);\\n        emit SmartContractRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the smart contract role from an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract affected\\n     */\\n    function removeSmartContractRole(address _address) external {\\n        revokeRole(SMART_CONTRACT_ROLE, _address);\\n        emit SmartContractRoleRemoved(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Grants the operator role to an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract receiving the new role\\n     */\\n    function addOperatorRole(address _address) external {\\n        grantRole(OPERATOR_ROLE, _address);\\n        emit OperatorRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the operator role from an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract affected\\n     */\\n    function removeOperatorRole(address _address) external {\\n        revokeRole(OPERATOR_ROLE, _address);\\n        emit OperatorRoleRemoved(_address, _msgSender());\\n    }\\n}\",\"keccak256\":\"0x15d26912cdf5e68c3bf91040671f5c6f863e32b72906663c4007777abcb5d1e3\",\"license\":\"MIT\"},\"contracts/Access/FLYBYAdminAccess.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../OpenZeppelin/access/AccessControl.sol\\\";\\n\\ncontract FLYBYAdminAccess is AccessControl {\\n    bool private initAccess;\\n    event AdminRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event AdminRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    /**\\n     * @notice Initializes access controls.\\n     * @param _admin Admins address.\\n     */\\n    function initAccessControls(address _admin) public {\\n        require(!initAccess, \\\"Already initialised\\\");\\n        require(_admin != address(0), \\\"Incorrect input\\\");\\n        _setupRole(DEFAULT_ADMIN_ROLE, _admin);\\n        initAccess = true;\\n    }\\n\\n    /**\\n     * @notice Used to check whether an address has the admin role.\\n     * @param _address EOA or contract being checked.\\n     * @return bool True if the account has the role or false if it does not.\\n     */\\n    function hasAdminRole(address _address) public view returns (bool) {\\n        return hasRole(DEFAULT_ADMIN_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Grants the admin role to an address.\\n     * @dev The sender must have the admin role.\\n     * @param _address EOA or contract receiving the new role.\\n     */\\n    function addAdminRole(address _address) external {\\n        grantRole(DEFAULT_ADMIN_ROLE, _address);\\n        emit AdminRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the admin role from an address.\\n     * @dev The sender must have the admin role.\\n     * @param _address EOA or contract affected.\\n     */\\n    function removeAdminRole(address _address) external {\\n        revokeRole(DEFAULT_ADMIN_ROLE, _address);\\n        emit AdminRoleRemoved(_address, _msgSender());\\n    }\\n}\",\"keccak256\":\"0x043cc7e6c78cafc685a1348e2af7fb6d49dd66383605b5265383a795f9388f9a\",\"license\":\"MIT\"},\"contracts/Auctions/BatchAuction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../OpenZeppelin/utils/ReentrancyGuard.sol\\\";\\nimport \\\"../Access/FLYBYAccessControls.sol\\\";\\nimport \\\"../Utils/SafeTransfer.sol\\\";\\nimport \\\"../Utils/BoringBatchable.sol\\\";\\nimport \\\"../Utils/BoringMath.sol\\\";\\nimport \\\"../Utils/BoringERC20.sol\\\";\\nimport \\\"../Utils/Documents.sol\\\";\\nimport \\\"../Interfaces/IPointList.sol\\\";\\nimport \\\"../Interfaces/IFlybyMarket.sol\\\";\\n\\ncontract BatchAuction is IFlybyMarket, FLYBYAccessControls, BoringBatchable, SafeTransfer, Documents, ReentrancyGuard  {\\n    using BoringMath for uint256;\\n    using BoringMath128 for uint128;\\n    using BoringMath64 for uint64;\\n    using BoringERC20 for IERC20;\\n\\n    /// @notice FLYBYMARKET template id for the factory contract.\\n    /// @dev For different marketplace types, this must be incremented.\\n    uint256 public constant override marketTemplate = 3;\\n    address private constant ETH_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\\n    struct MarketInfo {\\n        uint64 startTime;\\n        uint64 endTime; \\n        uint128 totalTokens;\\n    }\\n    MarketInfo public marketInfo;\\n\\n    struct MarketStatus {\\n        uint128 commitmentsTotal;\\n        uint128 minimumCommitmentAmount;\\n        bool finalized;\\n        bool usePointList;\\n    }\\n\\n    MarketStatus public marketStatus;\\n\\n    address public auctionToken;\\n    address public paymentCurrency;\\n    address public pointList;\\n    address payable public wallet;\\n\\n    mapping(address => uint256) public commitments;\\n    mapping(address => uint256) public claimed;\\n\\n    event AuctionTimeUpdated(uint256 startTime, uint256 endTime); \\n    event AuctionPriceUpdated(uint256 minimumCommitmentAmount); \\n    event AuctionWalletUpdated(address wallet); \\n    event AddedCommitment(address addr, uint256 commitment);\\n    event AuctionFinalized();\\n    event AuctionCancelled();\\n\\n    /**\\n     * @notice Initializes main contract variables and transfers funds for the auction.\\n     * @dev Init function.\\n     * @param _funder The address that funds the token for BatchAuction.\\n     * @param _token Address of the token being sold.\\n     * @param _totalTokens The total number of tokens to sell in auction.\\n     * @param _startTime Auction start time.\\n     * @param _endTime Auction end time.\\n     * @param _paymentCurrency The currency the BatchAuction accepts for payment. Can be ETH or token address.\\n     * @param _minimumCommitmentAmount Minimum amount collected at which the auction will be successful.\\n     * @param _admin Address that can finalize auction.\\n     * @param _wallet Address where collected funds will be forwarded to.\\n     */\\n    function initAuction(\\n        address _funder,\\n        address _token,\\n        uint256 _totalTokens,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        address _paymentCurrency,\\n        uint256 _minimumCommitmentAmount,\\n        address _admin,\\n        address _pointList,\\n        address payable _wallet\\n    ) public {\\n        require(_startTime < 10000000000, \\\"BatchAuction: enter an unix timestamp in seconds, not miliseconds\\\");\\n        require(_endTime < 10000000000, \\\"BatchAuction: enter an unix timestamp in seconds, not miliseconds\\\");\\n        require(_startTime >= block.timestamp, \\\"BatchAuction: start time is before current time\\\");\\n        require(_endTime > _startTime, \\\"BatchAuction: end time must be older than start time\\\");\\n        require(_totalTokens > 0,\\\"BatchAuction: total tokens must be greater than zero\\\");\\n        require(_admin != address(0), \\\"BatchAuction: admin is the zero address\\\");\\n        require(_wallet != address(0), \\\"BatchAuction: wallet is the zero address\\\");\\n        require(IERC20(_token).decimals() == 18, \\\"BatchAuction: Token does not have 18 decimals\\\");\\n        if (_paymentCurrency != ETH_ADDRESS) {\\n            require(IERC20(_paymentCurrency).decimals() > 0, \\\"BatchAuction: Payment currency is not ERC20\\\");\\n        }\\n\\n        marketStatus.minimumCommitmentAmount = BoringMath.to128(_minimumCommitmentAmount);\\n        \\n        marketInfo.startTime = BoringMath.to64(_startTime);\\n        marketInfo.endTime = BoringMath.to64(_endTime);\\n        marketInfo.totalTokens = BoringMath.to128(_totalTokens);\\n\\n        auctionToken = _token;\\n        paymentCurrency = _paymentCurrency;\\n        wallet = _wallet;\\n\\n        initAccessControls(_admin);\\n\\n        _setList(_pointList);\\n        _safeTransferFrom(auctionToken, _funder, _totalTokens);\\n    }\\n\\n    /****************************\\n     *      Commit Tokens\\n     ****************************/\\n\\n    receive() external payable {\\n        revertBecauseUserDidNotProvideAgreement();\\n    }\\n    \\n    /** \\n     * @dev Attribution to the awesome delta.financial contracts\\n    */  \\n    function marketParticipationAgreement() public pure returns (string memory) {\\n        return \\\"I understand that I am interacting with a smart contract. I understand that tokens commited are subject to the token issuer and local laws where applicable. I have reviewed the code of this smart contract and understand it fully. I agree to not hold developers or other people associated with the project liable for any losses or misunderstandings\\\";\\n    }\\n\\n    /** \\n     * @dev Not using modifiers is a purposeful choice for code readability.\\n    */ \\n    function revertBecauseUserDidNotProvideAgreement() internal pure {\\n        revert(\\\"No agreement provided, please review the smart contract before interacting with it\\\");\\n    }\\n\\n    /**\\n     * @notice Commit ETH to buy tokens on auction.\\n     * @param _beneficiary Auction participant ETH address.\\n     */\\n    function commitEth(address payable _beneficiary, bool readAndAgreedToMarketParticipationAgreement) public payable {\\n        require(paymentCurrency == ETH_ADDRESS, \\\"BatchAuction: payment currency is not ETH\\\");\\n        require(msg.value > 0, \\\"BatchAuction: Value must be higher than 0\\\");\\n        if(readAndAgreedToMarketParticipationAgreement == false) {\\n            revertBecauseUserDidNotProvideAgreement();\\n        }\\n        _addCommitment(_beneficiary, msg.value);\\n        require(marketStatus.commitmentsTotal <= address(this).balance, \\\"DutchAuction: The committed ETH exceeds the balance\\\");\\n    }\\n\\n    /**\\n     * @notice Buy Tokens by commiting approved ERC20 tokens to this contract address.\\n     * @param _amount Amount of tokens to commit.\\n     */\\n    function commitTokens(uint256 _amount, bool readAndAgreedToMarketParticipationAgreement) public {\\n        commitTokensFrom(msg.sender, _amount, readAndAgreedToMarketParticipationAgreement);\\n    }\\n\\n    /**\\n     * @notice Checks if amount not 0 and makes the transfer and adds commitment.\\n     * @dev Users must approve contract prior to committing tokens to auction.\\n     * @param _from User ERC20 address.\\n     * @param _amount Amount of approved ERC20 tokens.\\n     */\\n    function commitTokensFrom(address _from, uint256 _amount, bool readAndAgreedToMarketParticipationAgreement) public nonReentrant  {\\n        require(paymentCurrency != ETH_ADDRESS, \\\"BatchAuction: Payment currency is not a token\\\");\\n        if (readAndAgreedToMarketParticipationAgreement == false) {\\n            revertBecauseUserDidNotProvideAgreement();\\n        }\\n        require(_amount> 0, \\\"BatchAuction: Value must be higher than 0\\\");\\n        _safeTransferFrom(paymentCurrency, msg.sender, _amount);\\n        _addCommitment(_from, _amount);\\n    }\\n\\n    /// @notice Commits to an amount during an auction\\n    /**\\n     * @notice Updates commitment for this address and total commitment of the auction.\\n     * @param _addr Auction participant address.\\n     * @param _commitment The amount to commit.\\n     */\\n    function _addCommitment(address _addr, uint256 _commitment) internal {\\n        require(block.timestamp >= marketInfo.startTime && block.timestamp <= marketInfo.endTime, \\\"BatchAuction: outside auction hours\\\"); \\n\\n        uint256 newCommitment = commitments[_addr].add(_commitment);\\n        if (marketStatus.usePointList) {\\n            require(IPointList(pointList).hasPoints(_addr, newCommitment));\\n        }\\n        commitments[_addr] = newCommitment;\\n        marketStatus.commitmentsTotal = BoringMath.to128(uint256(marketStatus.commitmentsTotal).add(_commitment));\\n        emit AddedCommitment(_addr, _commitment);\\n    }\\n\\n    /**\\n     * @notice Calculates amount of auction tokens for user to receive.\\n     * @param amount Amount of tokens to commit.\\n     * @return Auction token amount.\\n     */\\n    function _getTokenAmount(uint256 amount) internal view returns (uint256) { \\n        if (marketStatus.commitmentsTotal == 0) return 0;\\n        return amount.mul(1e18).div(tokenPrice());\\n    }\\n\\n    /**\\n     * @notice Calculates the price of each token from all commitments.\\n     * @return Token price.\\n     */\\n    function tokenPrice() public view returns (uint256) {\\n        return uint256(marketStatus.commitmentsTotal)\\n            .mul(1e18).div(uint256(marketInfo.totalTokens));\\n    }\\n\\n    /********************************\\n     *        Finalise Token\\n     ********************************/\\n\\n    /// @notice Auction finishes successfully above the reserve\\n    /// @dev Transfer contract funds to initialized wallet.\\n    function finalize() public nonReentrant {\\n        require(hasAdminRole(msg.sender) \\n                || wallet == msg.sender\\n                || hasSmartContractRole(msg.sender) \\n                || finalizeTimeExpired(),  \\\"BatchAuction: Sender must be admin\\\");\\n        require(!marketStatus.finalized, \\\"BatchAuction: Auction has already finalized\\\");\\n        require(block.timestamp > marketInfo.endTime, \\\"BatchAuction: Auction has not finished yet\\\");\\n        if (auctionSuccessful()) {\\n            _safeTokenPayment(paymentCurrency, wallet, uint256(marketStatus.commitmentsTotal));\\n        } else {\\n            _safeTokenPayment(auctionToken, wallet, marketInfo.totalTokens);\\n        }\\n        marketStatus.finalized = true;\\n        emit AuctionFinalized();\\n    }\\n\\n    /**\\n     * @notice Cancel Auction\\n     * @dev Admin can cancel the auction before it starts\\n     */\\n    function cancelAuction() public nonReentrant {\\n        require(hasAdminRole(msg.sender));\\n        MarketStatus storage status = marketStatus;\\n        require(!status.finalized, \\\"Crowdsale: already finalized\\\");\\n        require( uint256(status.commitmentsTotal) == 0, \\\"Crowdsale: Funds already raised\\\" );\\n\\n        _safeTokenPayment(auctionToken, wallet, uint256(marketInfo.totalTokens));\\n        status.finalized = true;\\n        emit AuctionCancelled();\\n    }\\n\\n    /// @notice Withdraws bought tokens, or returns commitment if the sale is unsuccessful.\\n    function withdrawTokens() public {\\n        withdrawTokens(payable(msg.sender));\\n    }\\n\\n    /// @notice Withdraw your tokens once the Auction has ended.\\n    function withdrawTokens(address payable beneficiary) public nonReentrant {\\n        if (auctionSuccessful()) {\\n            require(marketStatus.finalized, \\\"BatchAuction: not finalized\\\");\\n            uint256 tokensToClaim = tokensClaimable(beneficiary);\\n            require(tokensToClaim > 0, \\\"BatchAuction: No tokens to claim\\\");\\n            claimed[beneficiary] = claimed[beneficiary].add(tokensToClaim);\\n\\n            _safeTokenPayment(auctionToken, beneficiary, tokensToClaim);\\n        } else {\\n            require(block.timestamp > marketInfo.endTime, \\\"BatchAuction: Auction has not finished yet\\\");\\n            uint256 fundsCommitted = commitments[beneficiary];\\n            require(fundsCommitted > 0, \\\"BatchAuction: No funds committed\\\");\\n            commitments[beneficiary] = 0;\\n            _safeTokenPayment(paymentCurrency, beneficiary, fundsCommitted);\\n        }\\n    }\\n\\n    /**\\n     * @notice How many tokens the user is able to claim.\\n     * @param _user Auction participant address.\\n     * @return  claimerCommitment Tokens left to claim.\\n     */\\n    function tokensClaimable(address _user) public view returns (uint256 claimerCommitment) {\\n        if (commitments[_user] == 0) return 0;\\n        uint256 unclaimedTokens = IERC20(auctionToken).balanceOf(address(this));\\n        claimerCommitment = _getTokenAmount(commitments[_user]);\\n        claimerCommitment = claimerCommitment.sub(claimed[_user]);\\n\\n        if(claimerCommitment > unclaimedTokens){\\n            claimerCommitment = unclaimedTokens;\\n        }\\n    }\\n    \\n    /**\\n     * @notice Checks if raised more than minimum amount.\\n     * @return True if tokens sold greater than or equals to the minimum commitment amount.\\n     */\\n    function auctionSuccessful() public view returns (bool) {\\n        return uint256(marketStatus.commitmentsTotal) >= uint256(marketStatus.minimumCommitmentAmount) && uint256(marketStatus.commitmentsTotal) > 0;\\n    }\\n\\n    /**\\n     * @notice Checks if the auction has ended.\\n     * @return bool True if current time is greater than auction end time.\\n     */\\n    function auctionEnded() public view returns (bool) {\\n        return block.timestamp > marketInfo.endTime;\\n    }\\n\\n    /**\\n     * @notice Checks if the auction has been finalised.\\n     * @return bool True if auction has been finalised.\\n     */\\n    function finalized() public view returns (bool) {\\n        return marketStatus.finalized;\\n    }\\n\\n    /// @notice Returns true if 7 days have passed since the end of the auction\\n    function finalizeTimeExpired() public view returns (bool) {\\n        return uint256(marketInfo.endTime) + 7 days < block.timestamp;\\n    }\\n\\n    /******************************\\n     *          Documents\\n     ******************************/\\n\\n    function setDocument(string calldata _name, string calldata _data) external {\\n        require(hasAdminRole(msg.sender) );\\n        _setDocument( _name, _data);\\n    }\\n\\n    function setDocuments(string[] calldata _name, string[] calldata _data) external {\\n        require(hasAdminRole(msg.sender) );\\n        uint256 numDocs = _name.length;\\n        for (uint256 i = 0; i < numDocs; i++) {\\n            _setDocument( _name[i], _data[i]);\\n        }\\n    }\\n\\n    function removeDocument(string calldata _name) external {\\n        require(hasAdminRole(msg.sender));\\n        _removeDocument(_name);\\n    }\\n\\n    /********************************\\n     *         Point Lists\\n     ********************************/\\n\\n    function setList(address _list) external {\\n        require(hasAdminRole(msg.sender));\\n        _setList(_list);\\n    }\\n\\n    function enableList(bool _status) external {\\n        require(hasAdminRole(msg.sender));\\n        marketStatus.usePointList = _status;\\n    }\\n\\n    function _setList(address _pointList) private {\\n        if (_pointList != address(0)) {\\n            pointList = _pointList;\\n            marketStatus.usePointList = true;\\n        }\\n    }\\n\\n    /*******************************\\n     *       Setter Auction\\n     *******************************/\\n\\n    /**\\n     * @notice Admin can set start and end time through this function.\\n     * @param _startTime Auction start time.\\n     * @param _endTime Auction end time.\\n     */\\n    function setAuctionTime(uint256 _startTime, uint256 _endTime) external {\\n        require(hasAdminRole(msg.sender));\\n        require(_startTime < 10000000000, \\\"BatchAuction: enter an unix timestamp in seconds, not miliseconds\\\");\\n        require(_endTime < 10000000000, \\\"BatchAuction: enter an unix timestamp in seconds, not miliseconds\\\");\\n        require(_startTime >= block.timestamp, \\\"BatchAuction: start time is before current time\\\");\\n        require(_endTime > _startTime, \\\"BatchAuction: end time must be older than start price\\\");\\n\\n        require(marketStatus.commitmentsTotal == 0, \\\"BatchAuction: auction cannot have already started\\\");\\n\\n        marketInfo.startTime = BoringMath.to64(_startTime);\\n        marketInfo.endTime = BoringMath.to64(_endTime);\\n        \\n        emit AuctionTimeUpdated(_startTime,_endTime);\\n    }\\n\\n    /**\\n     * @notice Admin can set start and min price through this function.\\n     * @param _minimumCommitmentAmount Auction minimum raised target.\\n     */\\n    function setAuctionPrice(uint256 _minimumCommitmentAmount) external {\\n        require(hasAdminRole(msg.sender));\\n\\n        require(marketStatus.commitmentsTotal == 0, \\\"BatchAuction: auction cannot have already started\\\");\\n\\n        marketStatus.minimumCommitmentAmount = BoringMath.to128(_minimumCommitmentAmount);\\n\\n        emit AuctionPriceUpdated(_minimumCommitmentAmount);\\n    }\\n\\n    /**\\n     * @notice Admin can set the auction wallet through this function.\\n     * @param _wallet Auction wallet is where funds will be sent.\\n     */\\n    function setAuctionWallet(address payable _wallet) external {\\n        require(hasAdminRole(msg.sender));\\n        require(_wallet != address(0), \\\"BatchAuction: wallet is the zero address\\\");\\n\\n        wallet = _wallet;\\n\\n        emit AuctionWalletUpdated(_wallet);\\n    }\\n\\n    /**********************************\\n     *         Market Launcher\\n     **********************************/\\n\\n    function init(bytes calldata _data) external override payable {}\\n\\n    function initMarket(\\n        bytes calldata _data\\n    ) public override {\\n        (\\n        address _funder,\\n        address _token,\\n        uint256 _totalTokens,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        address _paymentCurrency,\\n        uint256 _minimumCommitmentAmount,\\n        address _admin,\\n        address _pointList,\\n        address payable _wallet\\n        ) = abi.decode(_data, (\\n            address,\\n            address,\\n            uint256,\\n            uint256,\\n            uint256,\\n            address,\\n            uint256,\\n            address,\\n            address,\\n            address\\n        ));\\n        initAuction(_funder, _token, _totalTokens, _startTime, _endTime, _paymentCurrency, _minimumCommitmentAmount, _admin, _pointList,  _wallet);\\n    }\\n\\n    function getBatchAuctionInitData(\\n        address _funder,\\n        address _token,\\n        uint256 _totalTokens,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        address _paymentCurrency,\\n        uint256 _minimumCommitmentAmount,\\n        address _admin,\\n        address _pointList,\\n        address payable _wallet\\n    )\\n        external\\n        pure\\n        returns (bytes memory _data)\\n    {\\n        return abi.encode(\\n            _funder,\\n            _token,\\n            _totalTokens,\\n            _startTime,\\n            _endTime,\\n            _paymentCurrency,\\n            _minimumCommitmentAmount,\\n            _admin,\\n            _pointList,\\n            _wallet\\n            );\\n    }\\n\\n    function getBaseInformation() external view returns(\\n        address token, \\n        uint64 startTime,\\n        uint64 endTime,\\n        bool marketFinalized\\n    ) {\\n        return (auctionToken, marketInfo.startTime, marketInfo.endTime, marketStatus.finalized);\\n    }\\n\\n    function getTotalTokens() external view returns(uint256) {\\n        return uint256(marketInfo.totalTokens);\\n    }\\n}\\n\",\"keccak256\":\"0x4ef0911273c76741a4bad6f58f1332ad6e7b5393e7820aefa9aeff47ec489aad\",\"license\":\"MIT\"},\"contracts/Interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\",\"keccak256\":\"0xe4f8cb9ac9cd376f81da2348709e1f44dc0bd2fb44513c5d230702bb1b9e8b36\",\"license\":\"MIT\"},\"contracts/Interfaces/IFlybyMarket.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IFlybyMarket {\\n\\n    function init(bytes calldata data) external payable;\\n    function initMarket( bytes calldata data ) external;\\n    function marketTemplate() external view returns (uint256);\\n\\n}\",\"keccak256\":\"0xd862ab29398a22d9a62798c45017d14e702eab21756b96f13b20be4e54eb1bdf\",\"license\":\"MIT\"},\"contracts/Interfaces/IPointList.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IPointList {\\n    function isInList(address account) external view returns (bool);\\n    function hasPoints(address account, uint256 amount) external view  returns (bool);\\n    function setPoints(\\n        address[] memory accounts,\\n        uint256[] memory amounts\\n    ) external; \\n    function initPointList(address accessControl) external ;\\n\\n}\\n\",\"keccak256\":\"0x5ca6189f48425c8ef1041cecd626b6c6f66af41464fe8e149554d41632544e5c\",\"license\":\"MIT\"},\"contracts/OpenZeppelin/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/EnumerableSet.sol\\\";\\n\\nabstract contract AccessControl is Context {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    struct RoleData {\\n        EnumerableSet.AddressSet members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping (bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _roles[role].members.contains(account);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\\n        return _roles[role].members.length();\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\\n        return _roles[role].members.at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to grant\\\");\\n\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to revoke\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\\n        _roles[role].adminRole = adminRole;\\n    }\\n\\n    function _grantRole(bytes32 role, address account) private {\\n        if (_roles[role].members.add(account)) {\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) private {\\n        if (_roles[role].members.remove(account)) {\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\",\"keccak256\":\"0x70a4ac51d4857ce35422d73f70cbec83f00f568e1f95a804dcfbbe509de5a82c\",\"license\":\"MIT\"},\"contracts/OpenZeppelin/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return payable(msg.sender);\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0xe0521887b553a6c5bef0acd727645ff69535b60fe7c5947e40f19391307d70d2\",\"license\":\"MIT\"},\"contracts/OpenZeppelin/utils/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping (bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\\n\\n            bytes32 lastvalue = set._values[lastIndex];\\n\\n            // Move the last value to the index where the value to delete is\\n            set._values[toDeleteIndex] = lastvalue;\\n            // Update the index for the moved value\\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        require(set._values.length > index, \\\"EnumerableSet: index out of bounds\\\");\\n        return set._values[index];\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n}\",\"keccak256\":\"0x01c748c0e9f9c425f95c8f0e7eb6625675a4fde41b7f5444bcf6b894b375e72c\",\"license\":\"MIT\"},\"contracts/OpenZeppelin/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n        _status = _ENTERED;\\n        _;\\n        _status = _NOT_ENTERED;\\n    }\\n}\",\"keccak256\":\"0xc1656b57a49e1aad644a6cb3c589394ac337d328cec38bceef3c8d5bfd7a1949\",\"license\":\"MIT\"},\"contracts/Utils/BoringBatchable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\npragma experimental ABIEncoderV2;\\n\\n// solhint-disable avoid-low-level-calls\\n// solhint-disable no-inline-assembly\\nimport \\\"./BoringERC20.sol\\\";\\n\\ncontract BaseBoringBatchable {\\n    /// @dev Helper function to extract a useful revert message from a failed call.\\n    /// If the returned data is malformed or not correctly abi encoded then this call can fail itself.\\n    function _getRevertMsg(bytes memory _returnData) internal pure returns (string memory) {\\n        if (_returnData.length < 68) return \\\"Transaction reverted silently\\\";\\n\\n        assembly {\\n            _returnData := add(_returnData, 0x04)\\n        }\\n        return abi.decode(_returnData, (string));\\n    }\\n\\n    /**\\n     * @notice Allows batched call to self (this contract).\\n     * @param calls An array of inputs for each call.\\n     * @param revertOnFail If True then reverts after a failed call and stops doing further calls.\\n     * @return successes An array indicating the success of a call, mapped one-to-one to `calls`.\\n     * @return results An array with the returned data of each function call, mapped one-to-one to `calls`.\\n     * F1: External is ok here because this is the batch function, adding it to a batch makes no sense\\n     * F2: Calls in the batch may be payable, delegatecall operates in the same context, so each call in the batch has access to msg.value\\n     * C3: The length of the loop is fully under user control, so can't be exploited\\n     * C7: Delegatecall is only used on the same contract, so it's safe\\n     */\\n    function batch(bytes[] calldata calls, bool revertOnFail) external payable returns (bool[] memory successes, bytes[] memory results) {\\n        successes = new bool[](calls.length);\\n        results = new bytes[](calls.length);\\n        for (uint256 i = 0; i < calls.length; i++) {\\n            (bool success, bytes memory result) = address(this).delegatecall(calls[i]);\\n            require(success || !revertOnFail, _getRevertMsg(result));\\n            successes[i] = success;\\n            results[i] = result;\\n        }\\n    }\\n}\\n\\ncontract BoringBatchable is BaseBoringBatchable {\\n    /**\\n     * @notice Call wrapper that performs `ERC20.permit` on `token`.\\n     * Lookup `IERC20.permit`.\\n     * F6: Parameters can be used front-run the permit and the user's permit will fail (due to nonce or other revert)\\n     * if part of a batch this could be used to grief once as the second call would not need the permit\\n     */\\n    function permitToken(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public {\\n        token.permit(from, to, amount, deadline, v, r, s);\\n    }\\n}\",\"keccak256\":\"0xc8fa0456e38bbb57f17d2397cc712e61904564dcff041cf2c9bd1bc88d5a122d\",\"license\":\"MIT\"},\"contracts/Utils/BoringERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../Interfaces/IERC20.sol\\\";\\n\\nlibrary BoringERC20 {\\n    bytes4 private constant SIG_SYMBOL = 0x95d89b41;\\n    bytes4 private constant SIG_NAME = 0x06fdde03;\\n    bytes4 private constant SIG_DECIMALS = 0x313ce567;\\n    bytes4 private constant SIG_TRANSFER = 0xa9059cbb;\\n    bytes4 private constant SIG_TRANSFER_FROM = 0x23b872dd;\\n\\n    /**\\n     * @notice Provides a safe ERC20.symbol version which returns '???' as fallback string.\\n     * @param token The address of the ERC-20 token contract.\\n     * @return (string) Token symbol.\\n     */\\n    function safeSymbol(IERC20 token) internal view returns (string memory) {\\n        (bool success, bytes memory data) = address(token).staticcall(abi.encodeWithSelector(SIG_SYMBOL));\\n        return success && data.length > 0 ? abi.decode(data, (string)) : \\\"???\\\";\\n    }\\n\\n    /**\\n     * @notice Provides a safe ERC20.name version which returns '???' as fallback string.\\n     * @param token The address of the ERC-20 token contract.\\n     * @return (string) Token name.\\n     */\\n    function safeName(IERC20 token) internal view returns (string memory) {\\n        (bool success, bytes memory data) = address(token).staticcall(abi.encodeWithSelector(SIG_NAME));\\n        return success && data.length > 0 ? abi.decode(data, (string)) : \\\"???\\\";\\n    }\\n\\n    /**\\n     * @notice Provides a safe ERC20.decimals version which returns '18' as fallback value.\\n     * @param token The address of the ERC-20 token contract.\\n     * @return (uint8) Token decimals.\\n     */\\n    function safeDecimals(IERC20 token) internal view returns (uint8) {\\n        (bool success, bytes memory data) = address(token).staticcall(abi.encodeWithSelector(SIG_DECIMALS));\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\n    }\\n\\n    /**\\n     * @notice Provides a safe ERC20.transfer version for different ERC-20 implementations.\\n     * Reverts on a failed transfer.\\n     * @param token The address of the ERC-20 token.\\n     * @param to Transfer tokens to.\\n     * @param amount The token amount.\\n     */\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(abi.encodeWithSelector(SIG_TRANSFER, to, amount));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"BoringERC20: Transfer failed\\\");\\n    }\\n\\n    /**\\n     * @notice Provides a safe ERC20.transferFrom version for different ERC-20 implementations.\\n     * Reverts on a failed transfer.\\n     * @param token The address of the ERC-20 token.\\n     * @param from Transfer tokens from.\\n     * @param to Transfer tokens to.\\n     * @param amount The token amount.\\n     */\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"BoringERC20: TransferFrom failed\\\");\\n    }\\n}\",\"keccak256\":\"0x413926605152de55ab59259a7c23e2cd974bd316dbf777113f235f05dbc6e1bb\",\"license\":\"MIT\"},\"contracts/Utils/BoringMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nlibrary BoringMath {\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require(b > 0, \\\"BoringMath: Div zero\\\");\\n        c = a / b;\\n    }\\n\\n    function to128(uint256 a) internal pure returns (uint128 c) {\\n        require(a <= uint128(type(uint128).max), \\\"BoringMath: uint128 Overflow\\\");\\n        c = uint128(a);\\n    }\\n\\n    function to64(uint256 a) internal pure returns (uint64 c) {\\n        require(a <= uint64(type(uint64).max), \\\"BoringMath: uint64 Overflow\\\");\\n        c = uint64(a);\\n    }\\n\\n    function to32(uint256 a) internal pure returns (uint32 c) {\\n        require(a <= uint32(type(uint32).max), \\\"BoringMath: uint32 Overflow\\\");\\n        c = uint32(a);\\n    }\\n\\n    function to16(uint256 a) internal pure returns (uint16 c) {\\n        require(a <= uint16(type(uint16).max), \\\"BoringMath: uint16 Overflow\\\");\\n        c = uint16(a);\\n    }\\n\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint128.\\nlibrary BoringMath128 {\\n    function add(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint64.\\nlibrary BoringMath64 {\\n    function add(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath32 {\\n    function add(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath16 {\\n    function add(uint16 a, uint16 b) internal pure returns (uint16 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint16 a, uint16 b) internal pure returns (uint16 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\",\"keccak256\":\"0x89df8679004bb5921d308b1339717c59cdb689cedbb673cdb2510fceece81b87\",\"license\":\"MIT\"},\"contracts/Utils/Documents.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\npragma experimental ABIEncoderV2;\\n\\ncontract Documents {\\n\\n    struct Document {\\n        uint32 docIndex;\\n        uint64 lastModified;\\n        string data;\\n    }\\n\\n    mapping(string => Document) internal _documents;\\n    mapping(string => uint32) internal _docIndexes;\\n\\n    string[] _docNames;\\n\\n    event DocumentRemoved(string indexed _name, string _data);\\n    event DocumentUpdated(string indexed _name, string _data);\\n\\n    /**\\n     * @notice Used to attach a new document to the contract, or update the data or hash of an existing attached document\\n     * @dev Can only be executed by the owner of the contract.\\n     * @param _name Name of the document. It should be unique always\\n     * @param _data Off-chain data of the document from where it is accessible to investors/advisors to read.\\n     */\\n    function _setDocument(string calldata _name, string calldata _data) internal {\\n        require(bytes(_name).length > 0, \\\"Zero name is not allowed\\\");\\n        require(bytes(_data).length > 0, \\\"Should not be a empty data\\\");\\n        if (_documents[_name].lastModified == uint64(0)) {\\n            _docNames.push(_name);\\n            _documents[_name].docIndex = uint32(_docNames.length);\\n        }\\n        _documents[_name] = Document(_documents[_name].docIndex, uint64(block.timestamp), _data);\\n        emit DocumentUpdated(_name, _data);\\n    }\\n\\n    /**\\n     * @notice Used to remove an existing document from the contract by giving the name of the document.\\n     * @dev Can only be executed by the owner of the contract.\\n     * @param _name Name of the document. It should be unique always\\n     */\\n    function _removeDocument(string calldata _name) internal {\\n        require(_documents[_name].lastModified != uint64(0), \\\"Document should exist\\\");\\n        uint32 index = _documents[_name].docIndex - 1;\\n        if (index != _docNames.length - 1) {\\n            _docNames[index] = _docNames[_docNames.length - 1];\\n            _documents[_docNames[index]].docIndex = index + 1; \\n        }\\n        _docNames.pop();\\n        emit DocumentRemoved(_name, _documents[_name].data);\\n        delete _documents[_name];\\n    }\\n\\n    /**\\n     * @notice Used to return the details of a document with a known name (`string`).\\n     * @param _name Name of the document\\n     * @return string The data associated with the document.\\n     * @return uint256 the timestamp at which the document was last modified.\\n     */\\n    function getDocument(string calldata _name) external view returns (string memory, uint256) {\\n        return (\\n            _documents[_name].data,\\n            uint256(_documents[_name].lastModified)\\n        );\\n    }\\n\\n    /**\\n     * @notice Used to retrieve a full list of documents attached to the smart contract.\\n     * @return string List of all documents names present in the contract.\\n     */\\n    function getAllDocuments() external view returns (string[] memory) {\\n        return _docNames;\\n    }\\n\\n    /**\\n     * @notice Used to retrieve the total documents in the smart contract.\\n     * @return uint256 Count of the document names present in the contract.\\n     */\\n    function getDocumentCount() external view returns (uint256) {\\n        return _docNames.length;\\n    }\\n\\n    /**\\n     * @notice Used to retrieve the document name from index in the smart contract.\\n     * @return string Name of the document name.\\n     */\\n    function getDocumentName(uint256 _index) external view returns (string memory) {\\n        require(_index < _docNames.length, \\\"Index out of bounds\\\");\\n        return _docNames[_index];\\n    }\\n}\",\"keccak256\":\"0x554ef7b2fc3356ba0d2ab6c044de3db03e43bfc3103b439e20264dd12a757d5c\",\"license\":\"MIT\"},\"contracts/Utils/SafeTransfer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ncontract SafeTransfer {\\n\\n    address private constant ETH_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\\n    function _safeTokenPayment(\\n        address _token,\\n        address payable _to,\\n        uint256 _amount\\n    ) internal {\\n        if (address(_token) == ETH_ADDRESS) {\\n            _safeTransferETH(_to,_amount );\\n        } else {\\n            _safeTransfer(_token, _to, _amount);\\n        }\\n    }\\n    \\n    function _tokenPayment(\\n        address _token,\\n        address payable _to,\\n        uint256 _amount\\n    ) internal {\\n        if (address(_token) == ETH_ADDRESS) {\\n            _to.transfer(_amount);\\n        } else {\\n            _safeTransfer(_token, _to, _amount);\\n        }\\n    }\\n    \\n    function _safeApprove(address token, address to, uint value) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper: APPROVE_FAILED\\\");\\n    }\\n    \\n    function _safeTransfer(\\n        address token,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        (bool success, bytes memory data) =\\n            token.call(\\n                abi.encodeWithSelector(0xa9059cbb, to, amount)\\n            );\\n        require(success && (data.length == 0 || abi.decode(data, (bool))));\\n    }\\n\\n    function _safeTransferFrom(\\n        address token,\\n        address from,\\n        uint256 amount\\n    ) internal virtual {\\n        (bool success, bytes memory data) =\\n            token.call(\\n                abi.encodeWithSelector(0x23b872dd, from, address(this), amount)\\n            );\\n        require(success && (data.length == 0 || abi.decode(data, (bool))));\\n    }\\n\\n    function _safeTransferFrom(address token, address from, address to, uint value) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper: TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function _safeTransferETH(address to, uint value) internal {\\n        (bool success,) = to.call{value:value}(new bytes(0));\\n        require(success, \\\"TransferHelper: ETH_TRANSFER_FAILED\\\");\\n    }\\n\\n}\",\"keccak256\":\"0xe07868766e4bb0ca00fcb4b73c692b0aa2ec5d77991042f9defa64e7b30b3b41\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506001600555614d33806100256000396000f3fe6080604052600436106103e85760003560e01c80638a845fc011610208578063c92bce8711610118578063dde51f6d116100ab578063f04899d31161007a578063f04899d314610b43578063f08b82e614610b58578063f5b541a614610b6d578063f910691314610b82578063fc4e3e0a14610ba2576103f7565b8063dde51f6d14610abe578063e0e081d714610ade578063e6594abd14610b03578063e8fcf72314610b23576103f7565b8063d547741f116100e7578063d547741f14610a3e578063d69d3e6214610a5e578063dc97e08214610a7e578063dccfe31014610a9e576103f7565b8063c92bce87146109c8578063ca15c873146109e8578063d2423b5114610a08578063d539139314610a29576103f7565b80639c64d0ae1161019b578063b3f05b971161016a578063b3f05b9714610933578063b7928b1d14610948578063c395fcb314610968578063c6b547e614610988578063c884ef83146109a8576103f7565b80639c64d0ae146108bc5780639fa5f50b146108dc578063a217fddf146108fe578063adbf377614610913576103f7565b806391d14854116101d757806391d14854146108475780639478941c1461086757806399fdb320146108875780639a87222c1461089c576103f7565b80638a845fc0146107dd5780638d8f2adb146107fd5780638fa8b790146108125780639010d07c14610827576103f7565b806349df728c116103035780636ae260c1116102965780637ccb6a64116102655780637ccb6a64146107505780637ff9b5961461077e57806381353c8e14610793578063857d2608146107b357806386433374146107c8576103f7565b80636ae260c1146106ce57806374cf9fc5146106ee5780637525b0bd146107105780637c516e9414610730576103f7565b80634ddf47d4116102d25780634ddf47d414610666578063521eb2731461067957806354f1e1261461068e5780636595171c146106ae576103f7565b806349df728c146105f15780634b3e6abb146106115780634bb278f3146106315780634dc80e1514610646576103f7565b80632f2ff15d1161037b5780633b33fe731161034a5780633b33fe731461057a5780633d15cc6d1461059a5780633d1c2273146105bc5780633f16431a146105d1576103f7565b80632f2ff15d14610500578063314148e21461052057806336568abe1461054557806336d0054b14610565576103f7565b80631b3e460e116103b75780631b3e460e1461048b578063212f8a81146104ad578063248a9ca3146104cd57806329762960146104ed576103f7565b8063031bee00146103fc578063099db01714610429578063113b0ab2146104565780631702645514610476576103f7565b366103f7576103f5610bc2565b005b600080fd5b34801561040857600080fd5b50610411610be3565b6040516104209392919061493d565b60405180910390f35b34801561043557600080fd5b5061044961044436600461358b565b610c10565b6040516104209190613d0a565b34801561046257600080fd5b5061044961047136600461358b565b610c32565b34801561048257600080fd5b50610449610c4c565b34801561049757600080fd5b506104a0610c77565b6040516104209190613d15565b3480156104b957600080fd5b506103f56104c8366004613691565b610c7c565b3480156104d957600080fd5b506104a06104e83660046137bb565b610d3b565b6103f56104fb366004613659565b610d50565b34801561050c57600080fd5b506103f561051b3660046137d3565b610df6565b34801561052c57600080fd5b50610535610e3a565b6040516104209493929190613be1565b34801561055157600080fd5b506103f56105603660046137d3565b610e6b565b34801561057157600080fd5b50610449610ead565b34801561058657600080fd5b506103f56105953660046137bb565b610ee3565b3480156105a657600080fd5b506105af610f7f565b6040516104209190613af6565b3480156105c857600080fd5b506104a0610f8e565b3480156105dd57600080fd5b506103f56105ec36600461358b565b610f94565b3480156105fd57600080fd5b506103f561060c36600461358b565b610ff6565b34801561061d57600080fd5b506103f561062c366004613783565b611169565b34801561063d57600080fd5b506103f5611195565b34801561065257600080fd5b506104a061066136600461358b565b611310565b6103f5610674366004613818565b610df2565b34801561068557600080fd5b506105af611416565b34801561069a57600080fd5b506103f56106a936600461358b565b611425565b3480156106ba57600080fd5b506103f56106c936600461358b565b611487565b3480156106da57600080fd5b506103f56106e93660046137f7565b6114dc565b3480156106fa57600080fd5b5061070361163b565b6040516104209190613d1e565b34801561071c57600080fd5b506103f561072b3660046135ae565b61165e565b34801561073c57600080fd5b506103f561074b366004613857565b6119b8565b34801561075c57600080fd5b5061077061076b366004613818565b611a2c565b604051610420929190613d60565b34801561078a57600080fd5b506104a0611b24565b34801561079f57600080fd5b506103f56107ae366004613818565b611b5d565b3480156107bf57600080fd5b506104a0611b9a565b3480156107d457600080fd5b50610449611bac565b3480156107e957600080fd5b506103f56107f836600461358b565b611bc4565b34801561080957600080fd5b506103f5611c26565b34801561081e57600080fd5b506103f5611c31565b34801561083357600080fd5b506105af6108423660046137f7565b611d2a565b34801561085357600080fd5b506104496108623660046137d3565b611d4b565b34801561087357600080fd5b506103f561088236600461358b565b611d63565b34801561089357600080fd5b506105af611dc5565b3480156108a857600080fd5b506103f56108b736600461358b565b611dd4565b3480156108c857600080fd5b506103f56108d73660046138d9565b611e57565b3480156108e857600080fd5b506108f1611e7b565b6040516104209190613caa565b34801561090a57600080fd5b506104a0611f54565b34801561091f57600080fd5b506103f561092e36600461358b565b611f59565b34801561093f57600080fd5b50610449611fbb565b34801561095457600080fd5b506103f561096336600461358b565b611fc4565b34801561097457600080fd5b5061044961098336600461358b565b612026565b34801561099457600080fd5b506107036109a33660046137bb565b612032565b3480156109b457600080fd5b506104a06109c336600461358b565b612111565b3480156109d457600080fd5b506103f56109e336600461371b565b612123565b3480156109f457600080fd5b506104a0610a033660046137bb565b6121c7565b610a1b610a163660046136d2565b6121de565b604051610420929190613c13565b348015610a3557600080fd5b506104a06123d2565b348015610a4a57600080fd5b506103f5610a593660046137d3565b6123e4565b348015610a6a57600080fd5b506103f5610a7936600461358b565b61241e565b348015610a8a57600080fd5b506103f5610a993660046139ef565b61243c565b348015610aaa57600080fd5b506103f5610ab936600461358b565b612447565b348015610aca57600080fd5b506103f5610ad9366004613818565b61249c565b348015610aea57600080fd5b50610af36124b8565b6040516104209493929190614904565b348015610b0f57600080fd5b506103f5610b1e36600461358b565b6124e2565b348015610b2f57600080fd5b506104a0610b3e36600461358b565b612545565b348015610b4f57600080fd5b506105af612557565b348015610b6457600080fd5b506104a0612566565b348015610b7957600080fd5b506104a061257c565b348015610b8e57600080fd5b50610703610b9d3660046135ae565b61258e565b348015610bae57600080fd5b50610449610bbd36600461358b565b6125d2565b60405162461bcd60e51b8152600401610bda90613ff5565b60405180910390fd5b6006546001600160401b0380821691600160401b810490911690600160801b90046001600160801b031683565b6000610c2a600080516020614b8383398151915283611d4b565b90505b919050565b6000610c2a600080516020614b4383398151915283611d4b565b6006546000904290610c7190600160401b90046001600160401b031662093a806149ad565b10905090565b600381565b60026005541415610c9f5760405162461bcd60e51b8152600401610bda90614797565b6002600555600a546001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610ce35760405162461bcd60e51b8152600401610bda906147ce565b80610cf057610cf0610bc2565b60008211610d105760405162461bcd60e51b8152600401610bda906145d3565b600a54610d27906001600160a01b031633846125ec565b610d3183836126c8565b5050600160055550565b60009081526020819052604090206002015490565b600a546001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610d8e5760405162461bcd60e51b8152600401610bda90614542565b60003411610dae5760405162461bcd60e51b8152600401610bda906145d3565b80610dbb57610dbb610bc2565b610dc582346126c8565b600754476001600160801b039091161115610df25760405162461bcd60e51b8152600401610bda90613fa2565b5050565b600082815260208190526040902060020154610e1490610862612874565b610e305760405162461bcd60e51b8152600401610bda90613ea1565b610df28282612878565b6009546006546008546001600160a01b03909216926001600160401b0380831693600160401b909304169160ff1690565b610e73612874565b6001600160a01b0316816001600160a01b031614610ea35760405162461bcd60e51b8152600401610bda90614887565b610df282826128e1565b6007546000906001600160801b03600160801b82048116911610801590610ede57506007546001600160801b031615155b905090565b610eec33612026565b610ef557600080fd5b6007546001600160801b031615610f1e5760405162461bcd60e51b8152600401610bda9061446f565b610f278161294a565b600780546001600160801b03928316600160801b0292169190911790556040517f1fd3f6b4312b53d1521fb9dab5af66131ff5b6141870420ded20e5ffb42f6cf290610f74908390613d15565b60405180910390a150565b600a546001600160a01b031681565b60045490565b610fac600080516020614b4383398151915282610df6565b610fb4612874565b6001600160a01b0316816001600160a01b03167f1d5f9ec24c6f91be922ea13ceaad919ad6554a41b5c26087f96289a9baf98ad260405160405180910390a350565b600260055414156110195760405162461bcd60e51b8152600401610bda90614797565b6002600555611026610ead565b156110cf5760085460ff1661104d5760405162461bcd60e51b8152600401610bda906143eb565b600061105882611310565b90506000811161107a5760405162461bcd60e51b8152600401610bda90614852565b6001600160a01b0382166000908152600e602052604090205461109d9082612977565b6001600160a01b038084166000908152600e60205260409020919091556009546110c9911683836129a5565b50611161565b600654600160401b90046001600160401b031642116111005760405162461bcd60e51b8152600401610bda906142ed565b6001600160a01b0381166000908152600d6020526040902054806111365760405162461bcd60e51b8152600401610bda90614281565b6001600160a01b038083166000908152600d6020526040812055600a5461115f911683836129a5565b505b506001600555565b61117233612026565b61117b57600080fd5b600880549115156101000261ff0019909216919091179055565b600260055414156111b85760405162461bcd60e51b8152600401610bda90614797565b60026005556111c633612026565b806111db5750600c546001600160a01b031633145b806111ea57506111ea33610c32565b806111f857506111f8610c4c565b6112145760405162461bcd60e51b8152600401610bda9061468c565b60085460ff16156112375760405162461bcd60e51b8152600401610bda90613f57565b600654600160401b90046001600160401b031642116112685760405162461bcd60e51b8152600401610bda906142ed565b611270610ead565b156112a357600a54600c5460075461129e926001600160a01b039081169216906001600160801b03166129a5565b6112d3565b600954600c546006546112d3926001600160a01b03908116921690600160801b90046001600160801b03166129a5565b6008805460ff191660011790556040517f32bebcfd2d04dbae321298091d96d2cb1d07279f59718cd83bd98245b8b82b5a90600090a16001600555565b6001600160a01b0381166000908152600d602052604081205461133557506000610c2d565b6009546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611366903090600401613af6565b60206040518083038186803b15801561137e57600080fd5b505afa158015611392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b691906139d7565b6001600160a01b0384166000908152600d60205260409020549091506113db906129e9565b6001600160a01b0384166000908152600e6020526040902054909250611402908390612a21565b915080821115611410578091505b50919050565b600c546001600160a01b031681565b61143d600080516020614b83833981519152826123e4565b611445612874565b6001600160a01b0316816001600160a01b03167f56692a161ffec953ddf9def93b958ea8d1ec95e21b80870c66be91a4374dc4e360405160405180910390a350565b611492600082610df6565b61149a612874565b6001600160a01b0316816001600160a01b03167f2570ac42fd8b322dc453ada624dc2ed0e9bdd67f16f201a25bbd30468f2aa18760405160405180910390a350565b6114e533612026565b6114ee57600080fd5b6402540be40082106115125760405162461bcd60e51b8152600401610bda90613ef0565b6402540be40081106115365760405162461bcd60e51b8152600401610bda90613ef0565b428210156115565760405162461bcd60e51b8152600401610bda90614748565b8181116115755760405162461bcd60e51b8152600401610bda90614127565b6007546001600160801b03161561159e5760405162461bcd60e51b8152600401610bda9061446f565b6115a782612a4f565b6006805467ffffffffffffffff19166001600160401b03929092169190911790556115d181612a4f565b600680546001600160401b0392909216600160401b0267ffffffffffffffff60401b199092169190911790556040517f5725d1e4352d6944889e54837ffaefde55cdc0b55796b831365d61cd4c87fdb89061162f908490849061492f565b60405180910390a15050565b606060405180610180016040528061015b8152602001614ba361015b9139905090565b6402540be40087106116825760405162461bcd60e51b8152600401610bda90613ef0565b6402540be40086106116a65760405162461bcd60e51b8152600401610bda90613ef0565b428710156116c65760405162461bcd60e51b8152600401610bda90614748565b8686116116e55760405162461bcd60e51b8152600401610bda9061406d565b600088116117055760405162461bcd60e51b8152600401610bda90614360565b6001600160a01b03831661172b5760405162461bcd60e51b8152600401610bda90614203565b6001600160a01b0381166117515760405162461bcd60e51b8152600401610bda9061458b565b886001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561178a57600080fd5b505afa15801561179e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c29190613a13565b60ff166012146117e45760405162461bcd60e51b8152600401610bda90614422565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461189b576000856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561184357600080fd5b505afa158015611857573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187b9190613a13565b60ff161161189b5760405162461bcd60e51b8152600401610bda906144c0565b6118a48461294a565b600780546001600160801b03928316600160801b0292169190911790556118ca87612a4f565b6006805467ffffffffffffffff19166001600160401b03929092169190911790556118f486612a4f565b600680546001600160401b0392909216600160401b0267ffffffffffffffff60401b199092169190911790556119298861294a565b600680546001600160801b03928316600160801b029216919091179055600980546001600160a01b03808c166001600160a01b031992831617909255600a8054888416908316179055600c80549284169290911691909117905561198c836124e2565b61199582612a78565b6009546119ac906001600160a01b03168b8a6125ec565b50505050505050505050565b60405163d505accf60e01b81526001600160a01b0389169063d505accf906119f0908a908a908a908a908a908a908a90600401613b87565b600060405180830381600087803b158015611a0a57600080fd5b505af1158015611a1e573d6000803e3d6000fd5b505050505050505050505050565b6060600060028484604051611a42929190613a5b565b908152602001604051809103902060010160028585604051611a65929190613a5b565b9081526040519081900360200190205481546001600160401b0364010000000090920491909116908290611a9890614a94565b80601f0160208091040260200160405190810160405280929190818152602001828054611ac490614a94565b8015611b115780601f10611ae657610100808354040283529160200191611b11565b820191906000526020600020905b815481529060010190602001808311611af457829003601f168201915b50505050509150915091505b9250929050565b600654600754600091610ede916001600160801b03600160801b909204821691611b579116670de0b6b3a7640000612ab6565b90612af6565b6000808080808080808080611b748b8d018d6135ae565b9950995099509950995099509950995099509950611a1e8a8a8a8a8a8a8a8a8a8a61165e565b600080516020614b4383398151915281565b600654600160401b90046001600160401b0316421190565b611bdc600080516020614b43833981519152826123e4565b611be4612874565b6001600160a01b0316816001600160a01b03167fe5f1aa9e528307345194b88b24a32401c13926e0823060f1049d9b26c0bb62b260405160405180910390a350565b611c2f33610ff6565b565b60026005541415611c545760405162461bcd60e51b8152600401610bda90614797565b6002600555611c6233612026565b611c6b57600080fd5b60085460079060ff1615611c915760405162461bcd60e51b8152600401610bda906140f0565b80546001600160801b031615611cb95760405162461bcd60e51b8152600401610bda906143b4565b600954600c54600654611ce9926001600160a01b03908116921690600160801b90046001600160801b03166129a5565b6001818101805460ff191690911790556040517fa5fb31e47bd1eca58bf14a3312d5e6aeafdc4ee787c8ed348c15c2b092324d9390600090a1506001600555565b6000828152602081905260408120611d429083612b21565b90505b92915050565b6000828152602081905260408120611d429083612b2d565b611d7b600080516020614b63833981519152826123e4565b611d83612874565b6001600160a01b0316816001600160a01b03167f70b25138b6fadeb9992d18b9653564271823e34b3e3257515d12a6d4b15fcddf60405160405180910390a350565b6009546001600160a01b031681565b611ddd33612026565b611de657600080fd5b6001600160a01b038116611e0c5760405162461bcd60e51b8152600401610bda9061458b565b600c80546001600160a01b0319166001600160a01b0383161790556040517f34ae2bad9265f0212d4cf341708b8250949164bb54f9d0e4f442024f83bb2f9090610f74908390613af6565b611e6033612026565b611e6957600080fd5b611e7584848484612b42565b50505050565b60606004805480602002602001604051908101604052809291908181526020016000905b82821015611f4b578382906000526020600020018054611ebe90614a94565b80601f0160208091040260200160405190810160405280929190818152602001828054611eea90614a94565b8015611f375780601f10611f0c57610100808354040283529160200191611f37565b820191906000526020600020905b815481529060010190602001808311611f1a57829003601f168201915b505050505081526020019060010190611e9f565b50505050905090565b600081565b611f71600080516020614b8383398151915282610df6565b611f79612874565b6001600160a01b0316816001600160a01b03167f0be6ab9784c7401fafb73f7bc47bc67cc4ef8c47a60ad3cb66d1de0353a0784c60405160405180910390a350565b60085460ff1690565b611fdc600080516020614b6383398151915282610df6565b611fe4612874565b6001600160a01b0316816001600160a01b03167f2d45ee102874989882745a26688d0b4fffee125a18df26536b12582c7fde4e1760405160405180910390a350565b6000610c2a8183611d4b565b60045460609082106120565760405162461bcd60e51b8152600401610bda9061465f565b6004828154811061207757634e487b7160e01b600052603260045260246000fd5b90600052602060002001805461208c90614a94565b80601f01602080910402602001604051908101604052809291908181526020018280546120b890614a94565b80156121055780601f106120da57610100808354040283529160200191612105565b820191906000526020600020905b8154815290600101906020018083116120e857829003601f168201915b50505050509050919050565b600e6020526000908152604090205481565b61212c33612026565b61213557600080fd5b8260005b818110156121bf576121ad86868381811061216457634e487b7160e01b600052603260045260246000fd5b90506020028101906121769190614969565b86868581811061219657634e487b7160e01b600052603260045260246000fd5b90506020028101906121a89190614969565b612b42565b806121b781614ac9565b915050612139565b505050505050565b6000818152602081905260408120610c2a90612d94565b606080836001600160401b0381111561220757634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612230578160200160208202803683370190505b509150836001600160401b0381111561225957634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561228c57816020015b60608152602001906001900390816122775790505b50905060005b848110156123c957600080308888858181106122be57634e487b7160e01b600052603260045260246000fd5b90506020028101906122d09190614969565b6040516122de929190613a5b565b600060405180830381855af49150503d8060008114612319576040519150601f19603f3d011682016040523d82523d6000602084013e61231e565b606091505b5091509150818061232d575085155b61233682612d9f565b906123545760405162461bcd60e51b8152600401610bda9190613d1e565b508185848151811061237657634e487b7160e01b600052603260045260246000fd5b602002602001019015159081151581525050808484815181106123a957634e487b7160e01b600052603260045260246000fd5b6020026020010181905250505080806123c190614ac9565b915050612292565b50935093915050565b600080516020614b8383398151915281565b60008281526020819052604090206002015461240290610862612874565b610ea35760405162461bcd60e51b8152600401610bda906141b3565b61242733612026565b61243057600080fd5b61243981612a78565b50565b610df2338383610c7c565b6124526000826123e4565b61245a612874565b6001600160a01b0316816001600160a01b03167f21ba1239795d4e22874e3dc55f0a9d7b65bfb23069d32965d7c23be9524ccf9560405160405180910390a350565b6124a533612026565b6124ae57600080fd5b610df28282612dff565b6007546008546001600160801b0380831692600160801b9004169060ff8082169161010090041684565b60015460ff16156125055760405162461bcd60e51b8152600401610bda90613e32565b6001600160a01b03811661252b5760405162461bcd60e51b8152600401610bda90614337565b612536600082610e30565b506001805460ff191681179055565b600d6020526000908152604090205481565b600b546001600160a01b031681565b600654600160801b90046001600160801b031690565b600080516020614b6383398151915281565b60608a8a8a8a8a8a8a8a8a8a6040516020016125b39a99989796959493929190613b2e565b60405160208183030381529060405290509a9950505050505050505050565b6000610c2a600080516020614b6383398151915283611d4b565b600080846001600160a01b03166323b872dd85308660405160240161261393929190613b0a565b6040516020818303038152906040529060e01b6020820180516001600160e01b03838183161783525050505060405161264c9190613a6b565b6000604051808303816000865af19150503d8060008114612689576040519150601f19603f3d011682016040523d82523d6000602084013e61268e565b606091505b50915091508180156126b85750805115806126b85750808060200190518101906126b8919061379f565b6126c157600080fd5b5050505050565b6006546001600160401b031642108015906126f55750600654600160401b90046001600160401b03164211155b6127115760405162461bcd60e51b8152600401610bda90614705565b6001600160a01b0382166000908152600d60205260408120546127349083612977565b600854909150610100900460ff16156127d257600b54604051631cd53d5560e01b81526001600160a01b0390911690631cd53d55906127799086908590600401613bc8565b60206040518083038186803b15801561279157600080fd5b505afa1580156127a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127c9919061379f565b6127d257600080fd5b6001600160a01b0383166000908152600d6020526040902081905560075461280c90612807906001600160801b031684612977565b61294a565b600780546fffffffffffffffffffffffffffffffff19166001600160801b03929092169190911790556040517f077511a636ba1f10551cc7b89c13ff66a6ac9344e8a917527817a9690b15af7a906128679085908590613bc8565b60405180910390a1505050565b3390565b60008281526020819052604090206128909082613097565b15610df25761289d612874565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020819052604090206128f990826130ac565b15610df257612906612874565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006001600160801b038211156129735760405162461bcd60e51b8152600401610bda9061417c565b5090565b60008161298481856149ad565b9150811015611d455760405162461bcd60e51b8152600401610bda9061424a565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156129d9576129d482826130c1565b6129e4565b6129e483838361314e565b505050565b6007546000906001600160801b0316612a0457506000610c2d565b610c2a612a0f611b24565b611b5784670de0b6b3a7640000612ab6565b600082612a2e8382614a2c565b9150811115611d455760405162461bcd60e51b8152600401610bda90613e03565b60006001600160401b038211156129735760405162461bcd60e51b8152600401610bda9061450b565b6001600160a01b0381161561243957600b80546001600160a01b0383166001600160a01b03199091161790556008805461ff00191661010017905550565b6000811580612ada57508282612acc8183614a0d565b9250612ad890836149ed565b145b611d455760405162461bcd60e51b8152600401610bda9061481b565b6000808211612b175760405162461bcd60e51b8152600401610bda906148d6565b611d4282846149ed565b6000611d428383613173565b6000611d42836001600160a01b0384166131cc565b82612b5f5760405162461bcd60e51b8152600401610bda906142b6565b80612b7c5760405162461bcd60e51b8152600401610bda906146ce565b60006001600160401b031660028585604051612b99929190613a5b565b908152604051908190036020019020546001600160401b03640100000000909104161415612c3f5760048054600181018255600091909152612bfe907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01858561334f565b50600454604051600290612c159087908790613a5b565b908152604051908190036020019020805463ffffffff9290921663ffffffff199092169190911790555b604051806060016040528060028686604051612c5c929190613a5b565b90815260408051602092819003830190205463ffffffff168352426001600160401b0316838301528051601f860183900483028101830182528581529201919085908590819084018382808284376000920191909152505050915250604051600290612ccb9087908790613a5b565b9081526040805191829003602090810190922083518154858501516001600160401b0316640100000000026bffffffffffffffff000000001963ffffffff90931663ffffffff1990921691909117919091161781559083015180519192612d3a926001850192909101906133cf565b5050604051612d4d915085908590613a5b565b60405180910390207fbaa206e5ea800eb88bce099f453fee53295b793b9d5d1cfc4ce4b6db06a34f538383604051612d86929190613d31565b60405180910390a250505050565b6000610c2a826131e4565b6060604482511015612de5575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c790000006020820152610c2d565b60048201915081806020019051810190610c2a9190613935565b60006001600160401b031660028383604051612e1c929190613a5b565b908152604051908190036020019020546001600160401b03640100000000909104161415612e5c5760405162461bcd60e51b8152600401610bda906140c1565b6000600160028484604051612e72929190613a5b565b90815260405190819003602001902054612e92919063ffffffff16614a43565b600454909150612ea490600190614a2c565b8163ffffffff1614612fa65760048054612ec090600190614a2c565b81548110612ede57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160048263ffffffff1681548110612f0f57634e487b7160e01b600052603260045260246000fd5b90600052602060002001908054612f2590614a94565b612f30929190613443565b50612f3c8160016149c5565b600260048363ffffffff1681548110612f6557634e487b7160e01b600052603260045260246000fd5b90600052602060002001604051612f7c9190613a87565b908152604051908190036020019020805463ffffffff9290921663ffffffff199092169190911790555b6004805480612fc557634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000612fe191906134be565b90558282604051612ff3929190613a5b565b60405180910390207f4b5338540b4d1c0f6dd0308a25f633b7ff60472f894d711cff9dd64e35c613b26002858560405161302e929190613a5b565b908152602001604051809103902060010160405161304c9190613d82565b60405180910390a260028383604051613066929190613a5b565b90815260405190819003602001902080546bffffffffffffffffffffffff1916815560006126c160018301826134be565b6000611d42836001600160a01b0384166131e8565b6000611d42836001600160a01b038416613232565b604080516000808252602082019092526001600160a01b0384169083906040516130eb9190613a6b565b60006040518083038185875af1925050503d8060008114613128576040519150601f19603f3d011682016040523d82523d6000602084013e61312d565b606091505b50509050806129e45760405162461bcd60e51b8152600401610bda9061461c565b600080846001600160a01b031663a9059cbb8585604051602401612613929190613bc8565b815460009082106131965760405162461bcd60e51b8152600401610bda90613e5f565b8260000182815481106131b957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b60006131f483836131cc565b61322a57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611d45565b506000611d45565b60008181526001830160205260408120548015613345576000613256600183614a2c565b855490915060009061326a90600190614a2c565b9050600086600001828154811061329157634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106132c257634e487b7160e01b600052603260045260246000fd5b6000918252602090912001556132d98360016149ad565b6000828152600189016020526040902055865487908061330957634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611d45565b6000915050611d45565b82805461335b90614a94565b90600052602060002090601f01602090048101928261337d57600085556133c3565b82601f106133965782800160ff198235161785556133c3565b828001600101855582156133c3579182015b828111156133c35782358255916020019190600101906133a8565b506129739291506134f6565b8280546133db90614a94565b90600052602060002090601f0160209004810192826133fd57600085556133c3565b82601f1061341657805160ff19168380011785556133c3565b828001600101855582156133c3579182015b828111156133c3578251825591602001919060010190613428565b82805461344f90614a94565b90600052602060002090601f01602090048101928261347157600085556133c3565b82601f1061348257805485556133c3565b828001600101855582156133c357600052602060002091601f016020900482015b828111156133c35782548255916001019190600101906134a3565b5080546134ca90614a94565b6000825580601f106134dc5750612439565b601f01602090049060005260206000209081019061243991905b5b8082111561297357600081556001016134f7565b60008083601f84011261351c578081fd5b5081356001600160401b03811115613532578182fd5b6020830191508360208083028501011115611b1d57600080fd5b60008083601f84011261355d578182fd5b5081356001600160401b03811115613573578182fd5b602083019150836020828501011115611b1d57600080fd5b60006020828403121561359c578081fd5b81356135a781614b10565b9392505050565b6000806000806000806000806000806101408b8d0312156135cd578586fd5b8a356135d881614b10565b995060208b01356135e881614b10565b985060408b0135975060608b0135965060808b0135955060a08b013561360d81614b10565b945060c08b0135935060e08b013561362481614b10565b92506101008b013561363581614b10565b91506101208b013561364681614b10565b809150509295989b9194979a5092959850565b6000806040838503121561366b578182fd5b823561367681614b10565b9150602083013561368681614b25565b809150509250929050565b6000806000606084860312156136a5578283fd5b83356136b081614b10565b92506020840135915060408401356136c781614b25565b809150509250925092565b6000806000604084860312156136e6578081fd5b83356001600160401b038111156136fb578182fd5b6137078682870161350b565b90945092505060208401356136c781614b25565b60008060008060408587031215613730578182fd5b84356001600160401b0380821115613746578384fd5b6137528883890161350b565b9096509450602087013591508082111561376a578384fd5b506137778782880161350b565b95989497509550505050565b600060208284031215613794578081fd5b81356135a781614b25565b6000602082840312156137b0578081fd5b81516135a781614b25565b6000602082840312156137cc578081fd5b5035919050565b600080604083850312156137e5578182fd5b82359150602083013561368681614b10565b60008060408385031215613809578182fd5b50508035926020909101359150565b6000806020838503121561382a578182fd5b82356001600160401b0381111561383f578283fd5b61384b8582860161354c565b90969095509350505050565b600080600080600080600080610100898b031215613873578182fd5b883561387e81614b10565b9750602089013561388e81614b10565b9650604089013561389e81614b10565b9550606089013594506080890135935060a08901356138bc81614b33565b979a969950949793969295929450505060c08201359160e0013590565b600080600080604085870312156138ee578182fd5b84356001600160401b0380821115613904578384fd5b6139108883890161354c565b90965094506020870135915080821115613928578384fd5b506137778782880161354c565b600060208284031215613946578081fd5b81516001600160401b038082111561395c578283fd5b818401915084601f83011261396f578283fd5b81518181111561398157613981614afa565b604051601f8201601f1916810160200183811182821017156139a5576139a5614afa565b6040528181528382016020018710156139bc578485fd5b6139cd826020830160208701614a68565b9695505050505050565b6000602082840312156139e8578081fd5b5051919050565b60008060408385031215613a01578182fd5b82359150602083013561368681614b25565b600060208284031215613a24578081fd5b81516135a781614b33565b60008151808452613a47816020860160208601614a68565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b60008251613a7d818460208701614a68565b9190910192915050565b6000808354613a9581614a94565b60018281168015613aad5760018114613abe57613aea565b60ff19841687528287019450613aea565b8786526020808720875b85811015613ae15781548a820152908401908201613ac8565b50505082870194505b50929695505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039a8b168152988a1660208a015260408901979097526060880195909552608087019390935290861660a086015260c0850152841660e084015283166101008301529091166101208201526101400190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039490941684526001600160401b039283166020850152911660408301521515606082015260800190565b604080825283519082018190526000906020906060840190828701845b82811015613c4e578151151584529284019290840190600101613c30565b5050508381038285015284518082528282019080840283018401878501865b83811015613c9b57601f19868403018552613c89838351613a2f565b94870194925090860190600101613c6d565b50909998505050505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015613cfd57603f19888603018452613ceb858351613a2f565b94509285019290850190600101613ccf565b5092979650505050505050565b901515815260200190565b90815260200190565b600060208252611d426020830184613a2f565b60006020825282602083015282846040840137818301604090810191909152601f909201601f19160101919050565b600060408252613d736040830185613a2f565b90508260208301529392505050565b60006020808352818454613d9581614a94565b80848701526040600180841660008114613db65760018114613dca57613df5565b60ff19851689840152606089019550613df5565b898852868820885b85811015613ded5781548b8201860152908301908801613dd2565b8a0184019650505b509398975050505050505050565b602080825260159082015274426f72696e674d6174683a20556e646572666c6f7760581b604082015260600190565b602080825260139082015272105b1c9958591e481a5b9a5d1a585b1a5cd959606a1b604082015260600190565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b60208082526041908201527f426174636841756374696f6e3a20656e74657220616e20756e69782074696d6560408201527f7374616d7020696e207365636f6e64732c206e6f74206d696c697365636f6e646060820152607360f81b608082015260a00190565b6020808252602b908201527f426174636841756374696f6e3a2041756374696f6e2068617320616c7265616460408201526a1e48199a5b985b1a5e995960aa1b606082015260800190565b60208082526033908201527f447574636841756374696f6e3a2054686520636f6d6d6974746564204554482060408201527265786365656473207468652062616c616e636560681b606082015260800190565b60208082526052908201527f4e6f2061677265656d656e742070726f76696465642c20706c6561736520726560408201527f766965772074686520736d61727420636f6e7472616374206265666f726520696060820152711b9d195c9858dd1a5b99c81dda5d1a081a5d60721b608082015260a00190565b60208082526034908201527f426174636841756374696f6e3a20656e642074696d65206d757374206265206f6040820152736c646572207468616e2073746172742074696d6560601b606082015260800190565b602080825260159082015274111bd8dd5b595b9d081cda1bdd5b1908195e1a5cdd605a1b604082015260600190565b6020808252601c908201527f43726f776473616c653a20616c72656164792066696e616c697a656400000000604082015260600190565b60208082526035908201527f426174636841756374696f6e3a20656e642074696d65206d757374206265206f6040820152746c646572207468616e20737461727420707269636560581b606082015260800190565b6020808252601c908201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604082015260600190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b60208082526027908201527f426174636841756374696f6e3a2061646d696e20697320746865207a65726f206040820152666164647265737360c81b606082015260800190565b60208082526018908201527f426f72696e674d6174683a20416464204f766572666c6f770000000000000000604082015260600190565b6020808252818101527f426174636841756374696f6e3a204e6f2066756e647320636f6d6d6974746564604082015260600190565b60208082526018908201527f5a65726f206e616d65206973206e6f7420616c6c6f7765640000000000000000604082015260600190565b6020808252602a908201527f426174636841756374696f6e3a2041756374696f6e20686173206e6f742066696040820152691b9a5cda1959081e595d60b21b606082015260800190565b6020808252600f908201526e125b98dbdc9c9958dd081a5b9c1d5d608a1b604082015260600190565b60208082526034908201527f426174636841756374696f6e3a20746f74616c20746f6b656e73206d7573742060408201527362652067726561746572207468616e207a65726f60601b606082015260800190565b6020808252601f908201527f43726f776473616c653a2046756e647320616c72656164792072616973656400604082015260600190565b6020808252601b908201527f426174636841756374696f6e3a206e6f742066696e616c697a65640000000000604082015260600190565b6020808252602d908201527f426174636841756374696f6e3a20546f6b656e20646f6573206e6f742068617660408201526c6520313820646563696d616c7360981b606082015260800190565b60208082526031908201527f426174636841756374696f6e3a2061756374696f6e2063616e6e6f74206861766040820152701948185b1c9958591e481cdd185c9d1959607a1b606082015260800190565b6020808252602b908201527f426174636841756374696f6e3a205061796d656e742063757272656e6379206960408201526a073206e6f742045524332360ac1b606082015260800190565b6020808252601b908201527f426f72696e674d6174683a2075696e743634204f766572666c6f770000000000604082015260600190565b60208082526029908201527f426174636841756374696f6e3a207061796d656e742063757272656e637920696040820152680e640dcdee8408aa8960bb1b606082015260800190565b60208082526028908201527f426174636841756374696f6e3a2077616c6c657420697320746865207a65726f604082015267206164647265737360c01b606082015260800190565b60208082526029908201527f426174636841756374696f6e3a2056616c7565206d757374206265206869676860408201526806572207468616e20360bc1b606082015260800190565b60208082526023908201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960408201526213115160ea1b606082015260800190565b602080825260139082015272496e646578206f7574206f6620626f756e647360681b604082015260600190565b60208082526022908201527f426174636841756374696f6e3a2053656e646572206d7573742062652061646d60408201526134b760f11b606082015260800190565b6020808252601a908201527f53686f756c64206e6f74206265206120656d7074792064617461000000000000604082015260600190565b60208082526023908201527f426174636841756374696f6e3a206f7574736964652061756374696f6e20686f60408201526275727360e81b606082015260800190565b6020808252602f908201527f426174636841756374696f6e3a2073746172742074696d65206973206265666f60408201526e72652063757272656e742074696d6560881b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602d908201527f426174636841756374696f6e3a205061796d656e742063757272656e6379206960408201526c39903737ba1030903a37b5b2b760991b606082015260800190565b60208082526018908201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604082015260600190565b6020808252818101527f426174636841756374696f6e3a204e6f20746f6b656e7320746f20636c61696d604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b602080825260149082015273426f72696e674d6174683a20446976207a65726f60601b604082015260600190565b6001600160801b03948516815292909316602083015215156040820152901515606082015260800190565b918252602082015260400190565b6001600160401b0393841681529190921660208201526001600160801b03909116604082015260600190565b6000808335601e1984360301811261497f578283fd5b8301803591506001600160401b03821115614998578283fd5b602001915036819003821315611b1d57600080fd5b600082198211156149c0576149c0614ae4565b500190565b600063ffffffff8083168185168083038211156149e4576149e4614ae4565b01949350505050565b600082614a0857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615614a2757614a27614ae4565b500290565b600082821015614a3e57614a3e614ae4565b500390565b600063ffffffff83811690831681811015614a6057614a60614ae4565b039392505050565b60005b83811015614a83578181015183820152602001614a6b565b83811115611e755750506000910152565b600281046001821680614aa857607f821691505b6020821081141561141057634e487b7160e01b600052602260045260246000fd5b6000600019821415614add57614add614ae4565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461243957600080fd5b801515811461243957600080fd5b60ff8116811461243957600080fdfe9d49f397ae9ef1a834b569acb967799a367061e305932181a44f5773da873bfd97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9299f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a64920756e6465727374616e642074686174204920616d20696e746572616374696e672077697468206120736d61727420636f6e74726163742e204920756e6465727374616e64207468617420746f6b656e7320636f6d6d6974656420617265207375626a65637420746f2074686520746f6b656e2069737375657220616e64206c6f63616c206c617773207768657265206170706c696361626c652e204920686176652072657669657765642074686520636f6465206f66207468697320736d61727420636f6e747261637420616e6420756e6465727374616e642069742066756c6c792e204920616772656520746f206e6f7420686f6c6420646576656c6f70657273206f72206f746865722070656f706c65206173736f6369617465642077697468207468652070726f6a656374206c6961626c6520666f7220616e79206c6f73736573206f72206d6973756e6465727374616e64696e6773a2646970667358221220fe2d9e0369801c6c795a3c3b1a2a11580cdd658533f204a0eca03f6881e52c7164736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106103e85760003560e01c80638a845fc011610208578063c92bce8711610118578063dde51f6d116100ab578063f04899d31161007a578063f04899d314610b43578063f08b82e614610b58578063f5b541a614610b6d578063f910691314610b82578063fc4e3e0a14610ba2576103f7565b8063dde51f6d14610abe578063e0e081d714610ade578063e6594abd14610b03578063e8fcf72314610b23576103f7565b8063d547741f116100e7578063d547741f14610a3e578063d69d3e6214610a5e578063dc97e08214610a7e578063dccfe31014610a9e576103f7565b8063c92bce87146109c8578063ca15c873146109e8578063d2423b5114610a08578063d539139314610a29576103f7565b80639c64d0ae1161019b578063b3f05b971161016a578063b3f05b9714610933578063b7928b1d14610948578063c395fcb314610968578063c6b547e614610988578063c884ef83146109a8576103f7565b80639c64d0ae146108bc5780639fa5f50b146108dc578063a217fddf146108fe578063adbf377614610913576103f7565b806391d14854116101d757806391d14854146108475780639478941c1461086757806399fdb320146108875780639a87222c1461089c576103f7565b80638a845fc0146107dd5780638d8f2adb146107fd5780638fa8b790146108125780639010d07c14610827576103f7565b806349df728c116103035780636ae260c1116102965780637ccb6a64116102655780637ccb6a64146107505780637ff9b5961461077e57806381353c8e14610793578063857d2608146107b357806386433374146107c8576103f7565b80636ae260c1146106ce57806374cf9fc5146106ee5780637525b0bd146107105780637c516e9414610730576103f7565b80634ddf47d4116102d25780634ddf47d414610666578063521eb2731461067957806354f1e1261461068e5780636595171c146106ae576103f7565b806349df728c146105f15780634b3e6abb146106115780634bb278f3146106315780634dc80e1514610646576103f7565b80632f2ff15d1161037b5780633b33fe731161034a5780633b33fe731461057a5780633d15cc6d1461059a5780633d1c2273146105bc5780633f16431a146105d1576103f7565b80632f2ff15d14610500578063314148e21461052057806336568abe1461054557806336d0054b14610565576103f7565b80631b3e460e116103b75780631b3e460e1461048b578063212f8a81146104ad578063248a9ca3146104cd57806329762960146104ed576103f7565b8063031bee00146103fc578063099db01714610429578063113b0ab2146104565780631702645514610476576103f7565b366103f7576103f5610bc2565b005b600080fd5b34801561040857600080fd5b50610411610be3565b6040516104209392919061493d565b60405180910390f35b34801561043557600080fd5b5061044961044436600461358b565b610c10565b6040516104209190613d0a565b34801561046257600080fd5b5061044961047136600461358b565b610c32565b34801561048257600080fd5b50610449610c4c565b34801561049757600080fd5b506104a0610c77565b6040516104209190613d15565b3480156104b957600080fd5b506103f56104c8366004613691565b610c7c565b3480156104d957600080fd5b506104a06104e83660046137bb565b610d3b565b6103f56104fb366004613659565b610d50565b34801561050c57600080fd5b506103f561051b3660046137d3565b610df6565b34801561052c57600080fd5b50610535610e3a565b6040516104209493929190613be1565b34801561055157600080fd5b506103f56105603660046137d3565b610e6b565b34801561057157600080fd5b50610449610ead565b34801561058657600080fd5b506103f56105953660046137bb565b610ee3565b3480156105a657600080fd5b506105af610f7f565b6040516104209190613af6565b3480156105c857600080fd5b506104a0610f8e565b3480156105dd57600080fd5b506103f56105ec36600461358b565b610f94565b3480156105fd57600080fd5b506103f561060c36600461358b565b610ff6565b34801561061d57600080fd5b506103f561062c366004613783565b611169565b34801561063d57600080fd5b506103f5611195565b34801561065257600080fd5b506104a061066136600461358b565b611310565b6103f5610674366004613818565b610df2565b34801561068557600080fd5b506105af611416565b34801561069a57600080fd5b506103f56106a936600461358b565b611425565b3480156106ba57600080fd5b506103f56106c936600461358b565b611487565b3480156106da57600080fd5b506103f56106e93660046137f7565b6114dc565b3480156106fa57600080fd5b5061070361163b565b6040516104209190613d1e565b34801561071c57600080fd5b506103f561072b3660046135ae565b61165e565b34801561073c57600080fd5b506103f561074b366004613857565b6119b8565b34801561075c57600080fd5b5061077061076b366004613818565b611a2c565b604051610420929190613d60565b34801561078a57600080fd5b506104a0611b24565b34801561079f57600080fd5b506103f56107ae366004613818565b611b5d565b3480156107bf57600080fd5b506104a0611b9a565b3480156107d457600080fd5b50610449611bac565b3480156107e957600080fd5b506103f56107f836600461358b565b611bc4565b34801561080957600080fd5b506103f5611c26565b34801561081e57600080fd5b506103f5611c31565b34801561083357600080fd5b506105af6108423660046137f7565b611d2a565b34801561085357600080fd5b506104496108623660046137d3565b611d4b565b34801561087357600080fd5b506103f561088236600461358b565b611d63565b34801561089357600080fd5b506105af611dc5565b3480156108a857600080fd5b506103f56108b736600461358b565b611dd4565b3480156108c857600080fd5b506103f56108d73660046138d9565b611e57565b3480156108e857600080fd5b506108f1611e7b565b6040516104209190613caa565b34801561090a57600080fd5b506104a0611f54565b34801561091f57600080fd5b506103f561092e36600461358b565b611f59565b34801561093f57600080fd5b50610449611fbb565b34801561095457600080fd5b506103f561096336600461358b565b611fc4565b34801561097457600080fd5b5061044961098336600461358b565b612026565b34801561099457600080fd5b506107036109a33660046137bb565b612032565b3480156109b457600080fd5b506104a06109c336600461358b565b612111565b3480156109d457600080fd5b506103f56109e336600461371b565b612123565b3480156109f457600080fd5b506104a0610a033660046137bb565b6121c7565b610a1b610a163660046136d2565b6121de565b604051610420929190613c13565b348015610a3557600080fd5b506104a06123d2565b348015610a4a57600080fd5b506103f5610a593660046137d3565b6123e4565b348015610a6a57600080fd5b506103f5610a7936600461358b565b61241e565b348015610a8a57600080fd5b506103f5610a993660046139ef565b61243c565b348015610aaa57600080fd5b506103f5610ab936600461358b565b612447565b348015610aca57600080fd5b506103f5610ad9366004613818565b61249c565b348015610aea57600080fd5b50610af36124b8565b6040516104209493929190614904565b348015610b0f57600080fd5b506103f5610b1e36600461358b565b6124e2565b348015610b2f57600080fd5b506104a0610b3e36600461358b565b612545565b348015610b4f57600080fd5b506105af612557565b348015610b6457600080fd5b506104a0612566565b348015610b7957600080fd5b506104a061257c565b348015610b8e57600080fd5b50610703610b9d3660046135ae565b61258e565b348015610bae57600080fd5b50610449610bbd36600461358b565b6125d2565b60405162461bcd60e51b8152600401610bda90613ff5565b60405180910390fd5b6006546001600160401b0380821691600160401b810490911690600160801b90046001600160801b031683565b6000610c2a600080516020614b8383398151915283611d4b565b90505b919050565b6000610c2a600080516020614b4383398151915283611d4b565b6006546000904290610c7190600160401b90046001600160401b031662093a806149ad565b10905090565b600381565b60026005541415610c9f5760405162461bcd60e51b8152600401610bda90614797565b6002600555600a546001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610ce35760405162461bcd60e51b8152600401610bda906147ce565b80610cf057610cf0610bc2565b60008211610d105760405162461bcd60e51b8152600401610bda906145d3565b600a54610d27906001600160a01b031633846125ec565b610d3183836126c8565b5050600160055550565b60009081526020819052604090206002015490565b600a546001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610d8e5760405162461bcd60e51b8152600401610bda90614542565b60003411610dae5760405162461bcd60e51b8152600401610bda906145d3565b80610dbb57610dbb610bc2565b610dc582346126c8565b600754476001600160801b039091161115610df25760405162461bcd60e51b8152600401610bda90613fa2565b5050565b600082815260208190526040902060020154610e1490610862612874565b610e305760405162461bcd60e51b8152600401610bda90613ea1565b610df28282612878565b6009546006546008546001600160a01b03909216926001600160401b0380831693600160401b909304169160ff1690565b610e73612874565b6001600160a01b0316816001600160a01b031614610ea35760405162461bcd60e51b8152600401610bda90614887565b610df282826128e1565b6007546000906001600160801b03600160801b82048116911610801590610ede57506007546001600160801b031615155b905090565b610eec33612026565b610ef557600080fd5b6007546001600160801b031615610f1e5760405162461bcd60e51b8152600401610bda9061446f565b610f278161294a565b600780546001600160801b03928316600160801b0292169190911790556040517f1fd3f6b4312b53d1521fb9dab5af66131ff5b6141870420ded20e5ffb42f6cf290610f74908390613d15565b60405180910390a150565b600a546001600160a01b031681565b60045490565b610fac600080516020614b4383398151915282610df6565b610fb4612874565b6001600160a01b0316816001600160a01b03167f1d5f9ec24c6f91be922ea13ceaad919ad6554a41b5c26087f96289a9baf98ad260405160405180910390a350565b600260055414156110195760405162461bcd60e51b8152600401610bda90614797565b6002600555611026610ead565b156110cf5760085460ff1661104d5760405162461bcd60e51b8152600401610bda906143eb565b600061105882611310565b90506000811161107a5760405162461bcd60e51b8152600401610bda90614852565b6001600160a01b0382166000908152600e602052604090205461109d9082612977565b6001600160a01b038084166000908152600e60205260409020919091556009546110c9911683836129a5565b50611161565b600654600160401b90046001600160401b031642116111005760405162461bcd60e51b8152600401610bda906142ed565b6001600160a01b0381166000908152600d6020526040902054806111365760405162461bcd60e51b8152600401610bda90614281565b6001600160a01b038083166000908152600d6020526040812055600a5461115f911683836129a5565b505b506001600555565b61117233612026565b61117b57600080fd5b600880549115156101000261ff0019909216919091179055565b600260055414156111b85760405162461bcd60e51b8152600401610bda90614797565b60026005556111c633612026565b806111db5750600c546001600160a01b031633145b806111ea57506111ea33610c32565b806111f857506111f8610c4c565b6112145760405162461bcd60e51b8152600401610bda9061468c565b60085460ff16156112375760405162461bcd60e51b8152600401610bda90613f57565b600654600160401b90046001600160401b031642116112685760405162461bcd60e51b8152600401610bda906142ed565b611270610ead565b156112a357600a54600c5460075461129e926001600160a01b039081169216906001600160801b03166129a5565b6112d3565b600954600c546006546112d3926001600160a01b03908116921690600160801b90046001600160801b03166129a5565b6008805460ff191660011790556040517f32bebcfd2d04dbae321298091d96d2cb1d07279f59718cd83bd98245b8b82b5a90600090a16001600555565b6001600160a01b0381166000908152600d602052604081205461133557506000610c2d565b6009546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611366903090600401613af6565b60206040518083038186803b15801561137e57600080fd5b505afa158015611392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b691906139d7565b6001600160a01b0384166000908152600d60205260409020549091506113db906129e9565b6001600160a01b0384166000908152600e6020526040902054909250611402908390612a21565b915080821115611410578091505b50919050565b600c546001600160a01b031681565b61143d600080516020614b83833981519152826123e4565b611445612874565b6001600160a01b0316816001600160a01b03167f56692a161ffec953ddf9def93b958ea8d1ec95e21b80870c66be91a4374dc4e360405160405180910390a350565b611492600082610df6565b61149a612874565b6001600160a01b0316816001600160a01b03167f2570ac42fd8b322dc453ada624dc2ed0e9bdd67f16f201a25bbd30468f2aa18760405160405180910390a350565b6114e533612026565b6114ee57600080fd5b6402540be40082106115125760405162461bcd60e51b8152600401610bda90613ef0565b6402540be40081106115365760405162461bcd60e51b8152600401610bda90613ef0565b428210156115565760405162461bcd60e51b8152600401610bda90614748565b8181116115755760405162461bcd60e51b8152600401610bda90614127565b6007546001600160801b03161561159e5760405162461bcd60e51b8152600401610bda9061446f565b6115a782612a4f565b6006805467ffffffffffffffff19166001600160401b03929092169190911790556115d181612a4f565b600680546001600160401b0392909216600160401b0267ffffffffffffffff60401b199092169190911790556040517f5725d1e4352d6944889e54837ffaefde55cdc0b55796b831365d61cd4c87fdb89061162f908490849061492f565b60405180910390a15050565b606060405180610180016040528061015b8152602001614ba361015b9139905090565b6402540be40087106116825760405162461bcd60e51b8152600401610bda90613ef0565b6402540be40086106116a65760405162461bcd60e51b8152600401610bda90613ef0565b428710156116c65760405162461bcd60e51b8152600401610bda90614748565b8686116116e55760405162461bcd60e51b8152600401610bda9061406d565b600088116117055760405162461bcd60e51b8152600401610bda90614360565b6001600160a01b03831661172b5760405162461bcd60e51b8152600401610bda90614203565b6001600160a01b0381166117515760405162461bcd60e51b8152600401610bda9061458b565b886001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561178a57600080fd5b505afa15801561179e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c29190613a13565b60ff166012146117e45760405162461bcd60e51b8152600401610bda90614422565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461189b576000856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561184357600080fd5b505afa158015611857573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187b9190613a13565b60ff161161189b5760405162461bcd60e51b8152600401610bda906144c0565b6118a48461294a565b600780546001600160801b03928316600160801b0292169190911790556118ca87612a4f565b6006805467ffffffffffffffff19166001600160401b03929092169190911790556118f486612a4f565b600680546001600160401b0392909216600160401b0267ffffffffffffffff60401b199092169190911790556119298861294a565b600680546001600160801b03928316600160801b029216919091179055600980546001600160a01b03808c166001600160a01b031992831617909255600a8054888416908316179055600c80549284169290911691909117905561198c836124e2565b61199582612a78565b6009546119ac906001600160a01b03168b8a6125ec565b50505050505050505050565b60405163d505accf60e01b81526001600160a01b0389169063d505accf906119f0908a908a908a908a908a908a908a90600401613b87565b600060405180830381600087803b158015611a0a57600080fd5b505af1158015611a1e573d6000803e3d6000fd5b505050505050505050505050565b6060600060028484604051611a42929190613a5b565b908152602001604051809103902060010160028585604051611a65929190613a5b565b9081526040519081900360200190205481546001600160401b0364010000000090920491909116908290611a9890614a94565b80601f0160208091040260200160405190810160405280929190818152602001828054611ac490614a94565b8015611b115780601f10611ae657610100808354040283529160200191611b11565b820191906000526020600020905b815481529060010190602001808311611af457829003601f168201915b50505050509150915091505b9250929050565b600654600754600091610ede916001600160801b03600160801b909204821691611b579116670de0b6b3a7640000612ab6565b90612af6565b6000808080808080808080611b748b8d018d6135ae565b9950995099509950995099509950995099509950611a1e8a8a8a8a8a8a8a8a8a8a61165e565b600080516020614b4383398151915281565b600654600160401b90046001600160401b0316421190565b611bdc600080516020614b43833981519152826123e4565b611be4612874565b6001600160a01b0316816001600160a01b03167fe5f1aa9e528307345194b88b24a32401c13926e0823060f1049d9b26c0bb62b260405160405180910390a350565b611c2f33610ff6565b565b60026005541415611c545760405162461bcd60e51b8152600401610bda90614797565b6002600555611c6233612026565b611c6b57600080fd5b60085460079060ff1615611c915760405162461bcd60e51b8152600401610bda906140f0565b80546001600160801b031615611cb95760405162461bcd60e51b8152600401610bda906143b4565b600954600c54600654611ce9926001600160a01b03908116921690600160801b90046001600160801b03166129a5565b6001818101805460ff191690911790556040517fa5fb31e47bd1eca58bf14a3312d5e6aeafdc4ee787c8ed348c15c2b092324d9390600090a1506001600555565b6000828152602081905260408120611d429083612b21565b90505b92915050565b6000828152602081905260408120611d429083612b2d565b611d7b600080516020614b63833981519152826123e4565b611d83612874565b6001600160a01b0316816001600160a01b03167f70b25138b6fadeb9992d18b9653564271823e34b3e3257515d12a6d4b15fcddf60405160405180910390a350565b6009546001600160a01b031681565b611ddd33612026565b611de657600080fd5b6001600160a01b038116611e0c5760405162461bcd60e51b8152600401610bda9061458b565b600c80546001600160a01b0319166001600160a01b0383161790556040517f34ae2bad9265f0212d4cf341708b8250949164bb54f9d0e4f442024f83bb2f9090610f74908390613af6565b611e6033612026565b611e6957600080fd5b611e7584848484612b42565b50505050565b60606004805480602002602001604051908101604052809291908181526020016000905b82821015611f4b578382906000526020600020018054611ebe90614a94565b80601f0160208091040260200160405190810160405280929190818152602001828054611eea90614a94565b8015611f375780601f10611f0c57610100808354040283529160200191611f37565b820191906000526020600020905b815481529060010190602001808311611f1a57829003601f168201915b505050505081526020019060010190611e9f565b50505050905090565b600081565b611f71600080516020614b8383398151915282610df6565b611f79612874565b6001600160a01b0316816001600160a01b03167f0be6ab9784c7401fafb73f7bc47bc67cc4ef8c47a60ad3cb66d1de0353a0784c60405160405180910390a350565b60085460ff1690565b611fdc600080516020614b6383398151915282610df6565b611fe4612874565b6001600160a01b0316816001600160a01b03167f2d45ee102874989882745a26688d0b4fffee125a18df26536b12582c7fde4e1760405160405180910390a350565b6000610c2a8183611d4b565b60045460609082106120565760405162461bcd60e51b8152600401610bda9061465f565b6004828154811061207757634e487b7160e01b600052603260045260246000fd5b90600052602060002001805461208c90614a94565b80601f01602080910402602001604051908101604052809291908181526020018280546120b890614a94565b80156121055780601f106120da57610100808354040283529160200191612105565b820191906000526020600020905b8154815290600101906020018083116120e857829003601f168201915b50505050509050919050565b600e6020526000908152604090205481565b61212c33612026565b61213557600080fd5b8260005b818110156121bf576121ad86868381811061216457634e487b7160e01b600052603260045260246000fd5b90506020028101906121769190614969565b86868581811061219657634e487b7160e01b600052603260045260246000fd5b90506020028101906121a89190614969565b612b42565b806121b781614ac9565b915050612139565b505050505050565b6000818152602081905260408120610c2a90612d94565b606080836001600160401b0381111561220757634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612230578160200160208202803683370190505b509150836001600160401b0381111561225957634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561228c57816020015b60608152602001906001900390816122775790505b50905060005b848110156123c957600080308888858181106122be57634e487b7160e01b600052603260045260246000fd5b90506020028101906122d09190614969565b6040516122de929190613a5b565b600060405180830381855af49150503d8060008114612319576040519150601f19603f3d011682016040523d82523d6000602084013e61231e565b606091505b5091509150818061232d575085155b61233682612d9f565b906123545760405162461bcd60e51b8152600401610bda9190613d1e565b508185848151811061237657634e487b7160e01b600052603260045260246000fd5b602002602001019015159081151581525050808484815181106123a957634e487b7160e01b600052603260045260246000fd5b6020026020010181905250505080806123c190614ac9565b915050612292565b50935093915050565b600080516020614b8383398151915281565b60008281526020819052604090206002015461240290610862612874565b610ea35760405162461bcd60e51b8152600401610bda906141b3565b61242733612026565b61243057600080fd5b61243981612a78565b50565b610df2338383610c7c565b6124526000826123e4565b61245a612874565b6001600160a01b0316816001600160a01b03167f21ba1239795d4e22874e3dc55f0a9d7b65bfb23069d32965d7c23be9524ccf9560405160405180910390a350565b6124a533612026565b6124ae57600080fd5b610df28282612dff565b6007546008546001600160801b0380831692600160801b9004169060ff8082169161010090041684565b60015460ff16156125055760405162461bcd60e51b8152600401610bda90613e32565b6001600160a01b03811661252b5760405162461bcd60e51b8152600401610bda90614337565b612536600082610e30565b506001805460ff191681179055565b600d6020526000908152604090205481565b600b546001600160a01b031681565b600654600160801b90046001600160801b031690565b600080516020614b6383398151915281565b60608a8a8a8a8a8a8a8a8a8a6040516020016125b39a99989796959493929190613b2e565b60405160208183030381529060405290509a9950505050505050505050565b6000610c2a600080516020614b6383398151915283611d4b565b600080846001600160a01b03166323b872dd85308660405160240161261393929190613b0a565b6040516020818303038152906040529060e01b6020820180516001600160e01b03838183161783525050505060405161264c9190613a6b565b6000604051808303816000865af19150503d8060008114612689576040519150601f19603f3d011682016040523d82523d6000602084013e61268e565b606091505b50915091508180156126b85750805115806126b85750808060200190518101906126b8919061379f565b6126c157600080fd5b5050505050565b6006546001600160401b031642108015906126f55750600654600160401b90046001600160401b03164211155b6127115760405162461bcd60e51b8152600401610bda90614705565b6001600160a01b0382166000908152600d60205260408120546127349083612977565b600854909150610100900460ff16156127d257600b54604051631cd53d5560e01b81526001600160a01b0390911690631cd53d55906127799086908590600401613bc8565b60206040518083038186803b15801561279157600080fd5b505afa1580156127a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127c9919061379f565b6127d257600080fd5b6001600160a01b0383166000908152600d6020526040902081905560075461280c90612807906001600160801b031684612977565b61294a565b600780546fffffffffffffffffffffffffffffffff19166001600160801b03929092169190911790556040517f077511a636ba1f10551cc7b89c13ff66a6ac9344e8a917527817a9690b15af7a906128679085908590613bc8565b60405180910390a1505050565b3390565b60008281526020819052604090206128909082613097565b15610df25761289d612874565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020819052604090206128f990826130ac565b15610df257612906612874565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006001600160801b038211156129735760405162461bcd60e51b8152600401610bda9061417c565b5090565b60008161298481856149ad565b9150811015611d455760405162461bcd60e51b8152600401610bda9061424a565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156129d9576129d482826130c1565b6129e4565b6129e483838361314e565b505050565b6007546000906001600160801b0316612a0457506000610c2d565b610c2a612a0f611b24565b611b5784670de0b6b3a7640000612ab6565b600082612a2e8382614a2c565b9150811115611d455760405162461bcd60e51b8152600401610bda90613e03565b60006001600160401b038211156129735760405162461bcd60e51b8152600401610bda9061450b565b6001600160a01b0381161561243957600b80546001600160a01b0383166001600160a01b03199091161790556008805461ff00191661010017905550565b6000811580612ada57508282612acc8183614a0d565b9250612ad890836149ed565b145b611d455760405162461bcd60e51b8152600401610bda9061481b565b6000808211612b175760405162461bcd60e51b8152600401610bda906148d6565b611d4282846149ed565b6000611d428383613173565b6000611d42836001600160a01b0384166131cc565b82612b5f5760405162461bcd60e51b8152600401610bda906142b6565b80612b7c5760405162461bcd60e51b8152600401610bda906146ce565b60006001600160401b031660028585604051612b99929190613a5b565b908152604051908190036020019020546001600160401b03640100000000909104161415612c3f5760048054600181018255600091909152612bfe907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01858561334f565b50600454604051600290612c159087908790613a5b565b908152604051908190036020019020805463ffffffff9290921663ffffffff199092169190911790555b604051806060016040528060028686604051612c5c929190613a5b565b90815260408051602092819003830190205463ffffffff168352426001600160401b0316838301528051601f860183900483028101830182528581529201919085908590819084018382808284376000920191909152505050915250604051600290612ccb9087908790613a5b565b9081526040805191829003602090810190922083518154858501516001600160401b0316640100000000026bffffffffffffffff000000001963ffffffff90931663ffffffff1990921691909117919091161781559083015180519192612d3a926001850192909101906133cf565b5050604051612d4d915085908590613a5b565b60405180910390207fbaa206e5ea800eb88bce099f453fee53295b793b9d5d1cfc4ce4b6db06a34f538383604051612d86929190613d31565b60405180910390a250505050565b6000610c2a826131e4565b6060604482511015612de5575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c790000006020820152610c2d565b60048201915081806020019051810190610c2a9190613935565b60006001600160401b031660028383604051612e1c929190613a5b565b908152604051908190036020019020546001600160401b03640100000000909104161415612e5c5760405162461bcd60e51b8152600401610bda906140c1565b6000600160028484604051612e72929190613a5b565b90815260405190819003602001902054612e92919063ffffffff16614a43565b600454909150612ea490600190614a2c565b8163ffffffff1614612fa65760048054612ec090600190614a2c565b81548110612ede57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160048263ffffffff1681548110612f0f57634e487b7160e01b600052603260045260246000fd5b90600052602060002001908054612f2590614a94565b612f30929190613443565b50612f3c8160016149c5565b600260048363ffffffff1681548110612f6557634e487b7160e01b600052603260045260246000fd5b90600052602060002001604051612f7c9190613a87565b908152604051908190036020019020805463ffffffff9290921663ffffffff199092169190911790555b6004805480612fc557634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000612fe191906134be565b90558282604051612ff3929190613a5b565b60405180910390207f4b5338540b4d1c0f6dd0308a25f633b7ff60472f894d711cff9dd64e35c613b26002858560405161302e929190613a5b565b908152602001604051809103902060010160405161304c9190613d82565b60405180910390a260028383604051613066929190613a5b565b90815260405190819003602001902080546bffffffffffffffffffffffff1916815560006126c160018301826134be565b6000611d42836001600160a01b0384166131e8565b6000611d42836001600160a01b038416613232565b604080516000808252602082019092526001600160a01b0384169083906040516130eb9190613a6b565b60006040518083038185875af1925050503d8060008114613128576040519150601f19603f3d011682016040523d82523d6000602084013e61312d565b606091505b50509050806129e45760405162461bcd60e51b8152600401610bda9061461c565b600080846001600160a01b031663a9059cbb8585604051602401612613929190613bc8565b815460009082106131965760405162461bcd60e51b8152600401610bda90613e5f565b8260000182815481106131b957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b60006131f483836131cc565b61322a57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611d45565b506000611d45565b60008181526001830160205260408120548015613345576000613256600183614a2c565b855490915060009061326a90600190614a2c565b9050600086600001828154811061329157634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106132c257634e487b7160e01b600052603260045260246000fd5b6000918252602090912001556132d98360016149ad565b6000828152600189016020526040902055865487908061330957634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611d45565b6000915050611d45565b82805461335b90614a94565b90600052602060002090601f01602090048101928261337d57600085556133c3565b82601f106133965782800160ff198235161785556133c3565b828001600101855582156133c3579182015b828111156133c35782358255916020019190600101906133a8565b506129739291506134f6565b8280546133db90614a94565b90600052602060002090601f0160209004810192826133fd57600085556133c3565b82601f1061341657805160ff19168380011785556133c3565b828001600101855582156133c3579182015b828111156133c3578251825591602001919060010190613428565b82805461344f90614a94565b90600052602060002090601f01602090048101928261347157600085556133c3565b82601f1061348257805485556133c3565b828001600101855582156133c357600052602060002091601f016020900482015b828111156133c35782548255916001019190600101906134a3565b5080546134ca90614a94565b6000825580601f106134dc5750612439565b601f01602090049060005260206000209081019061243991905b5b8082111561297357600081556001016134f7565b60008083601f84011261351c578081fd5b5081356001600160401b03811115613532578182fd5b6020830191508360208083028501011115611b1d57600080fd5b60008083601f84011261355d578182fd5b5081356001600160401b03811115613573578182fd5b602083019150836020828501011115611b1d57600080fd5b60006020828403121561359c578081fd5b81356135a781614b10565b9392505050565b6000806000806000806000806000806101408b8d0312156135cd578586fd5b8a356135d881614b10565b995060208b01356135e881614b10565b985060408b0135975060608b0135965060808b0135955060a08b013561360d81614b10565b945060c08b0135935060e08b013561362481614b10565b92506101008b013561363581614b10565b91506101208b013561364681614b10565b809150509295989b9194979a5092959850565b6000806040838503121561366b578182fd5b823561367681614b10565b9150602083013561368681614b25565b809150509250929050565b6000806000606084860312156136a5578283fd5b83356136b081614b10565b92506020840135915060408401356136c781614b25565b809150509250925092565b6000806000604084860312156136e6578081fd5b83356001600160401b038111156136fb578182fd5b6137078682870161350b565b90945092505060208401356136c781614b25565b60008060008060408587031215613730578182fd5b84356001600160401b0380821115613746578384fd5b6137528883890161350b565b9096509450602087013591508082111561376a578384fd5b506137778782880161350b565b95989497509550505050565b600060208284031215613794578081fd5b81356135a781614b25565b6000602082840312156137b0578081fd5b81516135a781614b25565b6000602082840312156137cc578081fd5b5035919050565b600080604083850312156137e5578182fd5b82359150602083013561368681614b10565b60008060408385031215613809578182fd5b50508035926020909101359150565b6000806020838503121561382a578182fd5b82356001600160401b0381111561383f578283fd5b61384b8582860161354c565b90969095509350505050565b600080600080600080600080610100898b031215613873578182fd5b883561387e81614b10565b9750602089013561388e81614b10565b9650604089013561389e81614b10565b9550606089013594506080890135935060a08901356138bc81614b33565b979a969950949793969295929450505060c08201359160e0013590565b600080600080604085870312156138ee578182fd5b84356001600160401b0380821115613904578384fd5b6139108883890161354c565b90965094506020870135915080821115613928578384fd5b506137778782880161354c565b600060208284031215613946578081fd5b81516001600160401b038082111561395c578283fd5b818401915084601f83011261396f578283fd5b81518181111561398157613981614afa565b604051601f8201601f1916810160200183811182821017156139a5576139a5614afa565b6040528181528382016020018710156139bc578485fd5b6139cd826020830160208701614a68565b9695505050505050565b6000602082840312156139e8578081fd5b5051919050565b60008060408385031215613a01578182fd5b82359150602083013561368681614b25565b600060208284031215613a24578081fd5b81516135a781614b33565b60008151808452613a47816020860160208601614a68565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b60008251613a7d818460208701614a68565b9190910192915050565b6000808354613a9581614a94565b60018281168015613aad5760018114613abe57613aea565b60ff19841687528287019450613aea565b8786526020808720875b85811015613ae15781548a820152908401908201613ac8565b50505082870194505b50929695505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039a8b168152988a1660208a015260408901979097526060880195909552608087019390935290861660a086015260c0850152841660e084015283166101008301529091166101208201526101400190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039490941684526001600160401b039283166020850152911660408301521515606082015260800190565b604080825283519082018190526000906020906060840190828701845b82811015613c4e578151151584529284019290840190600101613c30565b5050508381038285015284518082528282019080840283018401878501865b83811015613c9b57601f19868403018552613c89838351613a2f565b94870194925090860190600101613c6d565b50909998505050505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015613cfd57603f19888603018452613ceb858351613a2f565b94509285019290850190600101613ccf565b5092979650505050505050565b901515815260200190565b90815260200190565b600060208252611d426020830184613a2f565b60006020825282602083015282846040840137818301604090810191909152601f909201601f19160101919050565b600060408252613d736040830185613a2f565b90508260208301529392505050565b60006020808352818454613d9581614a94565b80848701526040600180841660008114613db65760018114613dca57613df5565b60ff19851689840152606089019550613df5565b898852868820885b85811015613ded5781548b8201860152908301908801613dd2565b8a0184019650505b509398975050505050505050565b602080825260159082015274426f72696e674d6174683a20556e646572666c6f7760581b604082015260600190565b602080825260139082015272105b1c9958591e481a5b9a5d1a585b1a5cd959606a1b604082015260600190565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b60208082526041908201527f426174636841756374696f6e3a20656e74657220616e20756e69782074696d6560408201527f7374616d7020696e207365636f6e64732c206e6f74206d696c697365636f6e646060820152607360f81b608082015260a00190565b6020808252602b908201527f426174636841756374696f6e3a2041756374696f6e2068617320616c7265616460408201526a1e48199a5b985b1a5e995960aa1b606082015260800190565b60208082526033908201527f447574636841756374696f6e3a2054686520636f6d6d6974746564204554482060408201527265786365656473207468652062616c616e636560681b606082015260800190565b60208082526052908201527f4e6f2061677265656d656e742070726f76696465642c20706c6561736520726560408201527f766965772074686520736d61727420636f6e7472616374206265666f726520696060820152711b9d195c9858dd1a5b99c81dda5d1a081a5d60721b608082015260a00190565b60208082526034908201527f426174636841756374696f6e3a20656e642074696d65206d757374206265206f6040820152736c646572207468616e2073746172742074696d6560601b606082015260800190565b602080825260159082015274111bd8dd5b595b9d081cda1bdd5b1908195e1a5cdd605a1b604082015260600190565b6020808252601c908201527f43726f776473616c653a20616c72656164792066696e616c697a656400000000604082015260600190565b60208082526035908201527f426174636841756374696f6e3a20656e642074696d65206d757374206265206f6040820152746c646572207468616e20737461727420707269636560581b606082015260800190565b6020808252601c908201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604082015260600190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b60208082526027908201527f426174636841756374696f6e3a2061646d696e20697320746865207a65726f206040820152666164647265737360c81b606082015260800190565b60208082526018908201527f426f72696e674d6174683a20416464204f766572666c6f770000000000000000604082015260600190565b6020808252818101527f426174636841756374696f6e3a204e6f2066756e647320636f6d6d6974746564604082015260600190565b60208082526018908201527f5a65726f206e616d65206973206e6f7420616c6c6f7765640000000000000000604082015260600190565b6020808252602a908201527f426174636841756374696f6e3a2041756374696f6e20686173206e6f742066696040820152691b9a5cda1959081e595d60b21b606082015260800190565b6020808252600f908201526e125b98dbdc9c9958dd081a5b9c1d5d608a1b604082015260600190565b60208082526034908201527f426174636841756374696f6e3a20746f74616c20746f6b656e73206d7573742060408201527362652067726561746572207468616e207a65726f60601b606082015260800190565b6020808252601f908201527f43726f776473616c653a2046756e647320616c72656164792072616973656400604082015260600190565b6020808252601b908201527f426174636841756374696f6e3a206e6f742066696e616c697a65640000000000604082015260600190565b6020808252602d908201527f426174636841756374696f6e3a20546f6b656e20646f6573206e6f742068617660408201526c6520313820646563696d616c7360981b606082015260800190565b60208082526031908201527f426174636841756374696f6e3a2061756374696f6e2063616e6e6f74206861766040820152701948185b1c9958591e481cdd185c9d1959607a1b606082015260800190565b6020808252602b908201527f426174636841756374696f6e3a205061796d656e742063757272656e6379206960408201526a073206e6f742045524332360ac1b606082015260800190565b6020808252601b908201527f426f72696e674d6174683a2075696e743634204f766572666c6f770000000000604082015260600190565b60208082526029908201527f426174636841756374696f6e3a207061796d656e742063757272656e637920696040820152680e640dcdee8408aa8960bb1b606082015260800190565b60208082526028908201527f426174636841756374696f6e3a2077616c6c657420697320746865207a65726f604082015267206164647265737360c01b606082015260800190565b60208082526029908201527f426174636841756374696f6e3a2056616c7565206d757374206265206869676860408201526806572207468616e20360bc1b606082015260800190565b60208082526023908201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960408201526213115160ea1b606082015260800190565b602080825260139082015272496e646578206f7574206f6620626f756e647360681b604082015260600190565b60208082526022908201527f426174636841756374696f6e3a2053656e646572206d7573742062652061646d60408201526134b760f11b606082015260800190565b6020808252601a908201527f53686f756c64206e6f74206265206120656d7074792064617461000000000000604082015260600190565b60208082526023908201527f426174636841756374696f6e3a206f7574736964652061756374696f6e20686f60408201526275727360e81b606082015260800190565b6020808252602f908201527f426174636841756374696f6e3a2073746172742074696d65206973206265666f60408201526e72652063757272656e742074696d6560881b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602d908201527f426174636841756374696f6e3a205061796d656e742063757272656e6379206960408201526c39903737ba1030903a37b5b2b760991b606082015260800190565b60208082526018908201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604082015260600190565b6020808252818101527f426174636841756374696f6e3a204e6f20746f6b656e7320746f20636c61696d604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b602080825260149082015273426f72696e674d6174683a20446976207a65726f60601b604082015260600190565b6001600160801b03948516815292909316602083015215156040820152901515606082015260800190565b918252602082015260400190565b6001600160401b0393841681529190921660208201526001600160801b03909116604082015260600190565b6000808335601e1984360301811261497f578283fd5b8301803591506001600160401b03821115614998578283fd5b602001915036819003821315611b1d57600080fd5b600082198211156149c0576149c0614ae4565b500190565b600063ffffffff8083168185168083038211156149e4576149e4614ae4565b01949350505050565b600082614a0857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615614a2757614a27614ae4565b500290565b600082821015614a3e57614a3e614ae4565b500390565b600063ffffffff83811690831681811015614a6057614a60614ae4565b039392505050565b60005b83811015614a83578181015183820152602001614a6b565b83811115611e755750506000910152565b600281046001821680614aa857607f821691505b6020821081141561141057634e487b7160e01b600052602260045260246000fd5b6000600019821415614add57614add614ae4565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461243957600080fd5b801515811461243957600080fd5b60ff8116811461243957600080fdfe9d49f397ae9ef1a834b569acb967799a367061e305932181a44f5773da873bfd97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9299f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a64920756e6465727374616e642074686174204920616d20696e746572616374696e672077697468206120736d61727420636f6e74726163742e204920756e6465727374616e64207468617420746f6b656e7320636f6d6d6974656420617265207375626a65637420746f2074686520746f6b656e2069737375657220616e64206c6f63616c206c617773207768657265206170706c696361626c652e204920686176652072657669657765642074686520636f6465206f66207468697320736d61727420636f6e747261637420616e6420756e6465727374616e642069742066756c6c792e204920616772656520746f206e6f7420686f6c6420646576656c6f70657273206f72206f746865722070656f706c65206173736f6369617465642077697468207468652070726f6a656374206c6961626c6520666f7220616e79206c6f73736573206f72206d6973756e6465727374616e64696e6773a2646970667358221220fe2d9e0369801c6c795a3c3b1a2a11580cdd658533f204a0eca03f6881e52c7164736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAdminRole(address)": {
        "details": "The sender must have the admin role.",
        "params": {
          "_address": "EOA or contract receiving the new role."
        }
      },
      "addMinterRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract receiving the new role"
        }
      },
      "addOperatorRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract receiving the new role"
        }
      },
      "addSmartContractRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract receiving the new role"
        }
      },
      "auctionEnded()": {
        "returns": {
          "_0": "bool True if current time is greater than auction end time."
        }
      },
      "auctionSuccessful()": {
        "returns": {
          "_0": "True if tokens sold greater than or equals to the minimum commitment amount."
        }
      },
      "batch(bytes[],bool)": {
        "params": {
          "calls": "An array of inputs for each call.",
          "revertOnFail": "If True then reverts after a failed call and stops doing further calls."
        },
        "returns": {
          "results": "An array with the returned data of each function call, mapped one-to-one to `calls`. F1: External is ok here because this is the batch function, adding it to a batch makes no sense F2: Calls in the batch may be payable, delegatecall operates in the same context, so each call in the batch has access to msg.value C3: The length of the loop is fully under user control, so can't be exploited C7: Delegatecall is only used on the same contract, so it's safe",
          "successes": "An array indicating the success of a call, mapped one-to-one to `calls`."
        }
      },
      "cancelAuction()": {
        "details": "Admin can cancel the auction before it starts"
      },
      "commitEth(address,bool)": {
        "params": {
          "_beneficiary": "Auction participant ETH address."
        }
      },
      "commitTokens(uint256,bool)": {
        "params": {
          "_amount": "Amount of tokens to commit."
        }
      },
      "commitTokensFrom(address,uint256,bool)": {
        "details": "Users must approve contract prior to committing tokens to auction.",
        "params": {
          "_amount": "Amount of approved ERC20 tokens.",
          "_from": "User ERC20 address."
        }
      },
      "finalize()": {
        "details": "Transfer contract funds to initialized wallet."
      },
      "finalized()": {
        "returns": {
          "_0": "bool True if auction has been finalised."
        }
      },
      "getAllDocuments()": {
        "returns": {
          "_0": "string List of all documents names present in the contract."
        }
      },
      "getDocument(string)": {
        "params": {
          "_name": "Name of the document"
        },
        "returns": {
          "_0": "string The data associated with the document.",
          "_1": "uint256 the timestamp at which the document was last modified."
        }
      },
      "getDocumentCount()": {
        "returns": {
          "_0": "uint256 Count of the document names present in the contract."
        }
      },
      "getDocumentName(uint256)": {
        "returns": {
          "_0": "string Name of the document name."
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasAdminRole(address)": {
        "params": {
          "_address": "EOA or contract being checked."
        },
        "returns": {
          "_0": "bool True if the account has the role or false if it does not."
        }
      },
      "hasMinterRole(address)": {
        "params": {
          "_address": "EOA or contract being checked"
        },
        "returns": {
          "_0": "bool True if the account has the role or false if it does not"
        }
      },
      "hasOperatorRole(address)": {
        "params": {
          "_address": "EOA or contract being checked"
        },
        "returns": {
          "_0": "bool True if the account has the role or false if it does not"
        }
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "hasSmartContractRole(address)": {
        "params": {
          "_address": "EOA or contract being checked"
        },
        "returns": {
          "_0": "bool True if the account has the role or false if it does not"
        }
      },
      "initAccessControls(address)": {
        "params": {
          "_admin": "Admins address."
        }
      },
      "initAuction(address,address,uint256,uint256,uint256,address,uint256,address,address,address)": {
        "details": "Init function.",
        "params": {
          "_admin": "Address that can finalize auction.",
          "_endTime": "Auction end time.",
          "_funder": "The address that funds the token for BatchAuction.",
          "_minimumCommitmentAmount": "Minimum amount collected at which the auction will be successful.",
          "_paymentCurrency": "The currency the BatchAuction accepts for payment. Can be ETH or token address.",
          "_startTime": "Auction start time.",
          "_token": "Address of the token being sold.",
          "_totalTokens": "The total number of tokens to sell in auction.",
          "_wallet": "Address where collected funds will be forwarded to."
        }
      },
      "marketParticipationAgreement()": {
        "details": "Attribution to the awesome delta.financial contracts"
      },
      "removeAdminRole(address)": {
        "details": "The sender must have the admin role.",
        "params": {
          "_address": "EOA or contract affected."
        }
      },
      "removeMinterRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract affected"
        }
      },
      "removeOperatorRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract affected"
        }
      },
      "removeSmartContractRole(address)": {
        "details": "The sender must have the admin role",
        "params": {
          "_address": "EOA or contract affected"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setAuctionPrice(uint256)": {
        "params": {
          "_minimumCommitmentAmount": "Auction minimum raised target."
        }
      },
      "setAuctionTime(uint256,uint256)": {
        "params": {
          "_endTime": "Auction end time.",
          "_startTime": "Auction start time."
        }
      },
      "setAuctionWallet(address)": {
        "params": {
          "_wallet": "Auction wallet is where funds will be sent."
        }
      },
      "tokenPrice()": {
        "returns": {
          "_0": "Token price."
        }
      },
      "tokensClaimable(address)": {
        "params": {
          "_user": "Auction participant address."
        },
        "returns": {
          "claimerCommitment": "Tokens left to claim."
        }
      }
    },
    "stateVariables": {
      "marketTemplate": {
        "details": "For different marketplace types, this must be incremented."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "MinterRoleGranted(address,address)": {
        "notice": "Events for adding and removing various roles"
      }
    },
    "kind": "user",
    "methods": {
      "MINTER_ROLE()": {
        "notice": "Role definitions"
      },
      "addAdminRole(address)": {
        "notice": "Grants the admin role to an address."
      },
      "addMinterRole(address)": {
        "notice": "Grants the minter role to an address"
      },
      "addOperatorRole(address)": {
        "notice": "Grants the operator role to an address"
      },
      "addSmartContractRole(address)": {
        "notice": "Grants the smart contract role to an address"
      },
      "auctionEnded()": {
        "notice": "Checks if the auction has ended."
      },
      "auctionSuccessful()": {
        "notice": "Checks if raised more than minimum amount."
      },
      "batch(bytes[],bool)": {
        "notice": "Allows batched call to self (this contract)."
      },
      "cancelAuction()": {
        "notice": "Cancel Auction"
      },
      "commitEth(address,bool)": {
        "notice": "Commit ETH to buy tokens on auction."
      },
      "commitTokens(uint256,bool)": {
        "notice": "Buy Tokens by commiting approved ERC20 tokens to this contract address."
      },
      "commitTokensFrom(address,uint256,bool)": {
        "notice": "Checks if amount not 0 and makes the transfer and adds commitment."
      },
      "finalize()": {
        "notice": "Auction finishes successfully above the reserve"
      },
      "finalizeTimeExpired()": {
        "notice": "Returns true if 7 days have passed since the end of the auction"
      },
      "finalized()": {
        "notice": "Checks if the auction has been finalised."
      },
      "getAllDocuments()": {
        "notice": "Used to retrieve a full list of documents attached to the smart contract."
      },
      "getDocument(string)": {
        "notice": "Used to return the details of a document with a known name (`string`)."
      },
      "getDocumentCount()": {
        "notice": "Used to retrieve the total documents in the smart contract."
      },
      "getDocumentName(uint256)": {
        "notice": "Used to retrieve the document name from index in the smart contract."
      },
      "hasAdminRole(address)": {
        "notice": "Used to check whether an address has the admin role."
      },
      "hasMinterRole(address)": {
        "notice": "Used to check whether an address has the minter role"
      },
      "hasOperatorRole(address)": {
        "notice": "Used to check whether an address has the operator role"
      },
      "hasSmartContractRole(address)": {
        "notice": "Used to check whether an address has the smart contract role"
      },
      "initAccessControls(address)": {
        "notice": "Initializes access controls."
      },
      "initAuction(address,address,uint256,uint256,uint256,address,uint256,address,address,address)": {
        "notice": "Initializes main contract variables and transfers funds for the auction."
      },
      "marketTemplate()": {
        "notice": "FLYBYMARKET template id for the factory contract."
      },
      "permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Call wrapper that performs `ERC20.permit` on `token`. Lookup `IERC20.permit`. F6: Parameters can be used front-run the permit and the user's permit will fail (due to nonce or other revert) if part of a batch this could be used to grief once as the second call would not need the permit"
      },
      "removeAdminRole(address)": {
        "notice": "Removes the admin role from an address."
      },
      "removeMinterRole(address)": {
        "notice": "Removes the minter role from an address"
      },
      "removeOperatorRole(address)": {
        "notice": "Removes the operator role from an address"
      },
      "removeSmartContractRole(address)": {
        "notice": "Removes the smart contract role from an address"
      },
      "setAuctionPrice(uint256)": {
        "notice": "Admin can set start and min price through this function."
      },
      "setAuctionTime(uint256,uint256)": {
        "notice": "Admin can set start and end time through this function."
      },
      "setAuctionWallet(address)": {
        "notice": "Admin can set the auction wallet through this function."
      },
      "tokenPrice()": {
        "notice": "Calculates the price of each token from all commitments."
      },
      "tokensClaimable(address)": {
        "notice": "How many tokens the user is able to claim."
      },
      "withdrawTokens()": {
        "notice": "Withdraws bought tokens, or returns commitment if the sale is unsuccessful."
      },
      "withdrawTokens(address)": {
        "notice": "Withdraw your tokens once the Auction has ended."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12488,
        "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)12483_storage)"
      },
      {
        "astId": 215,
        "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
        "label": "initAccess",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 20763,
        "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
        "label": "_documents",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Document)20758_storage)"
      },
      {
        "astId": 20767,
        "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
        "label": "_docIndexes",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_uint32)"
      },
      {
        "astId": 20770,
        "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
        "label": "_docNames",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 15264,
        "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
        "label": "_status",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 896,
        "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
        "label": "marketInfo",
        "offset": 0,
        "slot": "6",
        "type": "t_struct(MarketInfo)893_storage"
      },
      {
        "astId": 908,
        "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
        "label": "marketStatus",
        "offset": 0,
        "slot": "7",
        "type": "t_struct(MarketStatus)905_storage"
      },
      {
        "astId": 910,
        "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
        "label": "auctionToken",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 912,
        "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
        "label": "paymentCurrency",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      },
      {
        "astId": 914,
        "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
        "label": "pointList",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 916,
        "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
        "label": "wallet",
        "offset": 0,
        "slot": "12",
        "type": "t_address_payable"
      },
      {
        "astId": 920,
        "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
        "label": "commitments",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 924,
        "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
        "label": "claimed",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)12483_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)12483_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Document)20758_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Documents.Document)",
        "numberOfBytes": "32",
        "value": "t_struct(Document)20758_storage"
      },
      "t_mapping(t_string_memory_ptr,t_uint32)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint32)",
        "numberOfBytes": "32",
        "value": "t_uint32"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AddressSet)14934_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "members": [
          {
            "astId": 14933,
            "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)14657_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Document)20758_storage": {
        "encoding": "inplace",
        "label": "struct Documents.Document",
        "members": [
          {
            "astId": 20753,
            "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
            "label": "docIndex",
            "offset": 0,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 20755,
            "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
            "label": "lastModified",
            "offset": 4,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 20757,
            "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
            "label": "data",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(MarketInfo)893_storage": {
        "encoding": "inplace",
        "label": "struct BatchAuction.MarketInfo",
        "members": [
          {
            "astId": 888,
            "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
            "label": "startTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 890,
            "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
            "label": "endTime",
            "offset": 8,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 892,
            "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
            "label": "totalTokens",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(MarketStatus)905_storage": {
        "encoding": "inplace",
        "label": "struct BatchAuction.MarketStatus",
        "members": [
          {
            "astId": 898,
            "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
            "label": "commitmentsTotal",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 900,
            "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
            "label": "minimumCommitmentAmount",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 902,
            "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
            "label": "finalized",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 904,
            "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
            "label": "usePointList",
            "offset": 1,
            "slot": "1",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(RoleData)12483_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 12480,
            "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(AddressSet)14934_storage"
          },
          {
            "astId": 12482,
            "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
            "label": "adminRole",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Set)14657_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "members": [
          {
            "astId": 14652,
            "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 14656,
            "contract": "contracts/Auctions/BatchAuction.sol:BatchAuction",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}