{
  "address": "0x9E3c511C2C69077A46aB5fce1b79663fe14bD611",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "FlybyInitLauncher",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "launcherTemplate",
          "type": "address"
        }
      ],
      "name": "LauncherCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLauncher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "templateId",
          "type": "uint256"
        }
      ],
      "name": "LauncherTemplateAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "launcher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "templateId",
          "type": "uint256"
        }
      ],
      "name": "LauncherTemplateRemoved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "LAUNCHER_MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accessControls",
      "outputs": [
        {
          "internalType": "contract FLYBYAccessControls",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_template",
          "type": "address"
        }
      ],
      "name": "addLiquidityLauncherTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_templateId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenSupply",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_integratorFeeAccount",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "createLauncher",
      "outputs": [
        {
          "internalType": "address",
          "name": "newLauncher",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "currentTemplateId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_templateId",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_integratorFeeAccount",
          "type": "address"
        }
      ],
      "name": "deployLauncher",
      "outputs": [
        {
          "internalType": "address",
          "name": "launcher",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flybyDiv",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_launcher",
          "type": "address"
        }
      ],
      "name": "getLauncherTemplateId",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLaunchers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_templateId",
          "type": "uint256"
        }
      ],
      "name": "getLiquidityLauncherTemplate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_launcherTemplate",
          "type": "address"
        }
      ],
      "name": "getTemplateId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasLauncherMinterRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accessControls",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spaceBox",
          "type": "address"
        }
      ],
      "name": "initFLYBYLauncher",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "launcherFees",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "minimumFee",
          "type": "uint128"
        },
        {
          "internalType": "uint32",
          "name": "integratorFeePct",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "launcherInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "internalType": "uint64",
          "name": "templateId",
          "type": "uint64"
        },
        {
          "internalType": "uint128",
          "name": "index",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "launcherTemplateId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "launchers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "locked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumFee",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfLiquidityLauncherContracts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_templateId",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityLauncherTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_templateType",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_templateId",
          "type": "uint256"
        }
      ],
      "name": "setCurrentTemplateId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_divaddr",
          "type": "address"
        }
      ],
      "name": "setDividends",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setIntegratorFeePct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_locked",
          "type": "bool"
        }
      ],
      "name": "setLocked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setMinimumFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spaceBox",
      "outputs": [
        {
          "internalType": "contract ISpaceBoxFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb2b00050a3ce707e3c88eca6e1a1125fae72be6942e4fc140a9588cb3b9882be",
  "receipt": {
    "to": null,
    "from": "0x00B91B2F8aFE87FCDc2b3fFA9ee2278cd1E4DDf8",
    "contractAddress": "0x9E3c511C2C69077A46aB5fce1b79663fe14bD611",
    "transactionIndex": 6,
    "gasUsed": "1919148",
    "logsBloom": "0x
    "blockHash": "0x219566a30eb301be763bab4c44ffe3533b06b38615b47d2053f9e097535f18c8",
    "transactionHash": "0xb2b00050a3ce707e3c88eca6e1a1125fae72be6942e4fc140a9588cb3b9882be",
    "logs": [],
    "blockNumber": 14440470,
    "cumulativeGasUsed": "2524148",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "0bb2481c0a33b756a35d8c75b9e1dee6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"FlybyInitLauncher\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"launcherTemplate\",\"type\":\"address\"}],\"name\":\"LauncherCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLauncher\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"templateId\",\"type\":\"uint256\"}],\"name\":\"LauncherTemplateAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"launcher\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"templateId\",\"type\":\"uint256\"}],\"name\":\"LauncherTemplateRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LAUNCHER_MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accessControls\",\"outputs\":[{\"internalType\":\"contract FLYBYAccessControls\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_template\",\"type\":\"address\"}],\"name\":\"addLiquidityLauncherTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_templateId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_integratorFeeAccount\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"createLauncher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newLauncher\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"currentTemplateId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_templateId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_integratorFeeAccount\",\"type\":\"address\"}],\"name\":\"deployLauncher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"launcher\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flybyDiv\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_launcher\",\"type\":\"address\"}],\"name\":\"getLauncherTemplateId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLaunchers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_templateId\",\"type\":\"uint256\"}],\"name\":\"getLiquidityLauncherTemplate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_launcherTemplate\",\"type\":\"address\"}],\"name\":\"getTemplateId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasLauncherMinterRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accessControls\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spaceBox\",\"type\":\"address\"}],\"name\":\"initFLYBYLauncher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launcherFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"minimumFee\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"integratorFeePct\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launcherInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"templateId\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"index\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launcherTemplateId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"launchers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumFee\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfLiquidityLauncherContracts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_templateId\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityLauncherTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_templateType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_templateId\",\"type\":\"uint256\"}],\"name\":\"setCurrentTemplateId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_divaddr\",\"type\":\"address\"}],\"name\":\"setDividends\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setIntegratorFeePct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_locked\",\"type\":\"bool\"}],\"name\":\"setLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMinimumFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spaceBox\",\"outputs\":[{\"internalType\":\"contract ISpaceBoxFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FLYBYLauncher.sol\":\"FLYBYLauncher\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Access/FLYBYAccessControls.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./FLYBYAdminAccess.sol\\\";\\n\\ncontract FLYBYAccessControls is FLYBYAdminAccess {\\n    /// @notice Role definitions\\n    bytes32 public constant MINTER_ROLE = keccak256(\\\"MINTER_ROLE\\\");\\n    bytes32 public constant SMART_CONTRACT_ROLE = keccak256(\\\"SMART_CONTRACT_ROLE\\\");\\n    bytes32 public constant OPERATOR_ROLE = keccak256(\\\"OPERATOR_ROLE\\\");\\n\\n    /// @notice Events for adding and removing various roles\\n\\n    event MinterRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event MinterRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event OperatorRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event OperatorRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event SmartContractRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event SmartContractRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    /**\\n     * @notice Used to check whether an address has the minter role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasMinterRole(address _address) public view returns (bool) {\\n        return hasRole(MINTER_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Used to check whether an address has the smart contract role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasSmartContractRole(address _address) public view returns (bool) {\\n        return hasRole(SMART_CONTRACT_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Used to check whether an address has the operator role\\n     * @param _address EOA or contract being checked\\n     * @return bool True if the account has the role or false if it does not\\n     */\\n    function hasOperatorRole(address _address) public view returns (bool) {\\n        return hasRole(OPERATOR_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Grants the minter role to an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract receiving the new role\\n     */\\n    function addMinterRole(address _address) external {\\n        grantRole(MINTER_ROLE, _address);\\n        emit MinterRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the minter role from an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract affected\\n     */\\n    function removeMinterRole(address _address) external {\\n        revokeRole(MINTER_ROLE, _address);\\n        emit MinterRoleRemoved(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Grants the smart contract role to an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract receiving the new role\\n     */\\n    function addSmartContractRole(address _address) external {\\n        grantRole(SMART_CONTRACT_ROLE, _address);\\n        emit SmartContractRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the smart contract role from an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract affected\\n     */\\n    function removeSmartContractRole(address _address) external {\\n        revokeRole(SMART_CONTRACT_ROLE, _address);\\n        emit SmartContractRoleRemoved(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Grants the operator role to an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract receiving the new role\\n     */\\n    function addOperatorRole(address _address) external {\\n        grantRole(OPERATOR_ROLE, _address);\\n        emit OperatorRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the operator role from an address\\n     * @dev The sender must have the admin role\\n     * @param _address EOA or contract affected\\n     */\\n    function removeOperatorRole(address _address) external {\\n        revokeRole(OPERATOR_ROLE, _address);\\n        emit OperatorRoleRemoved(_address, _msgSender());\\n    }\\n}\",\"keccak256\":\"0x15d26912cdf5e68c3bf91040671f5c6f863e32b72906663c4007777abcb5d1e3\",\"license\":\"MIT\"},\"contracts/Access/FLYBYAdminAccess.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../OpenZeppelin/access/AccessControl.sol\\\";\\n\\ncontract FLYBYAdminAccess is AccessControl {\\n    bool private initAccess;\\n    event AdminRoleGranted(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    event AdminRoleRemoved(\\n        address indexed beneficiary,\\n        address indexed caller\\n    );\\n\\n    /**\\n     * @notice Initializes access controls.\\n     * @param _admin Admins address.\\n     */\\n    function initAccessControls(address _admin) public {\\n        require(!initAccess, \\\"Already initialised\\\");\\n        require(_admin != address(0), \\\"Incorrect input\\\");\\n        _setupRole(DEFAULT_ADMIN_ROLE, _admin);\\n        initAccess = true;\\n    }\\n\\n    /**\\n     * @notice Used to check whether an address has the admin role.\\n     * @param _address EOA or contract being checked.\\n     * @return bool True if the account has the role or false if it does not.\\n     */\\n    function hasAdminRole(address _address) public view returns (bool) {\\n        return hasRole(DEFAULT_ADMIN_ROLE, _address);\\n    }\\n\\n    /**\\n     * @notice Grants the admin role to an address.\\n     * @dev The sender must have the admin role.\\n     * @param _address EOA or contract receiving the new role.\\n     */\\n    function addAdminRole(address _address) external {\\n        grantRole(DEFAULT_ADMIN_ROLE, _address);\\n        emit AdminRoleGranted(_address, _msgSender());\\n    }\\n\\n    /**\\n     * @notice Removes the admin role from an address.\\n     * @dev The sender must have the admin role.\\n     * @param _address EOA or contract affected.\\n     */\\n    function removeAdminRole(address _address) external {\\n        revokeRole(DEFAULT_ADMIN_ROLE, _address);\\n        emit AdminRoleRemoved(_address, _msgSender());\\n    }\\n}\",\"keccak256\":\"0x043cc7e6c78cafc685a1348e2af7fb6d49dd66383605b5265383a795f9388f9a\",\"license\":\"MIT\"},\"contracts/FLYBYLauncher.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Utils/SafeTransfer.sol\\\";\\nimport \\\"./Utils/BoringMath.sol\\\";\\nimport \\\"./Access/FLYBYAccessControls.sol\\\";\\nimport \\\"./Interfaces/IERC20.sol\\\";\\nimport \\\"./Interfaces/IFlybyLiquidity.sol\\\";\\nimport \\\"./Interfaces/ISpaceBoxFactory.sol\\\";\\n\\ncontract FLYBYLauncher is SafeTransfer {\\n    using BoringMath for uint256;\\n    using BoringMath128 for uint128;\\n    using BoringMath64 for uint64;\\n\\n    FLYBYAccessControls public accessControls;\\n    bytes32 public constant LAUNCHER_MINTER_ROLE = keccak256(\\\"LAUNCHER_MINTER_ROLE\\\");\\n\\n    bool private initialised;\\n\\n    struct Launcher {\\n        bool exists;\\n        uint64 templateId;\\n        uint128 index;\\n    }\\n\\n    address[] public launchers;\\n    uint256 public launcherTemplateId;\\n    address public WETH;\\n\\n    ISpaceBoxFactory public spaceBox;\\n\\n    mapping(uint256 => address) private launcherTemplates;\\n    mapping(address => uint256) private launcherTemplateToId;\\n    mapping(uint256 => uint256) public currentTemplateId;\\n    mapping(address => Launcher) public launcherInfo;\\n\\n    struct LauncherFees {\\n        uint128 minimumFee;\\n        uint32 integratorFeePct;\\n    }\\n\\n    LauncherFees public launcherFees;\\n\\n    bool public locked;\\n\\n    address payable public flybyDiv;\\n\\n    event FlybyInitLauncher(address sender);\\n    event LauncherCreated(address indexed owner, address indexed addr, address launcherTemplate);\\n    event LauncherTemplateAdded(address newLauncher, uint256 templateId);\\n    event LauncherTemplateRemoved(address launcher, uint256 templateId);\\n\\n    constructor() {\\n    }\\n\\n    function initFLYBYLauncher(address _accessControls, address _WETH, address _spaceBox) external {\\n        require(!initialised);\\n        require(_WETH != address(0), \\\"initFLYBYLauncher: WETH cannot be set to zero\\\");\\n        require(_accessControls != address(0), \\\"initFLYBYLauncher: accessControls cannot be set to zero\\\");\\n        require(_spaceBox != address(0), \\\"initFLYBYLauncher: spaceBox cannot be set to zero\\\");\\n\\n        accessControls = FLYBYAccessControls(_accessControls);\\n        spaceBox = ISpaceBoxFactory(_spaceBox); \\n        WETH = _WETH;\\n        locked = true;\\n        initialised = true;\\n\\n        emit FlybyInitLauncher(msg.sender);\\n    }\\n\\n    function setMinimumFee(uint256 _amount) external {\\n        require(\\n            accessControls.hasAdminRole(msg.sender),\\n            \\\"FLYBYLauncher: Sender must be operator\\\"\\n        );\\n        launcherFees.minimumFee = BoringMath.to128(_amount);\\n    }\\n\\n    function setIntegratorFeePct(uint256 _amount) external {\\n        require(\\n            accessControls.hasAdminRole(msg.sender),\\n            \\\"FLYBYLauncher: Sender must be operator\\\"\\n        );\\n        require(_amount <= 1000, \\\"FLYBYLauncher: Percentage is out of 1000\\\");\\n        launcherFees.integratorFeePct = BoringMath.to32(_amount);\\n    }\\n\\n    function setDividends(address payable _divaddr) external {\\n        require(accessControls.hasAdminRole(msg.sender), \\\"FLYBYLauncher.setDev: Sender must be operator\\\");\\n        require(_divaddr != address(0));\\n        flybyDiv = _divaddr;\\n    }\\n\\n    function setLocked(bool _locked) external {\\n        require(\\n            accessControls.hasAdminRole(msg.sender),\\n            \\\"FLYBYLauncher: Sender must be admin\\\"\\n        );\\n        locked = _locked;\\n    }\\n\\n    function setCurrentTemplateId(uint256 _templateType, uint256 _templateId) external {\\n        require(\\n            accessControls.hasAdminRole(msg.sender) ||\\n            accessControls.hasOperatorRole(msg.sender),\\n            \\\"FLYBYLauncher: Sender must be admin\\\"\\n        );\\n        currentTemplateId[_templateType] = _templateId;\\n    }\\n\\n    function hasLauncherMinterRole(address _address) public view returns (bool) {\\n        return accessControls.hasRole(LAUNCHER_MINTER_ROLE, _address);\\n    }\\n\\n    function deployLauncher(\\n        uint256 _templateId,\\n        address payable _integratorFeeAccount\\n    )\\n        public payable returns (address launcher)\\n    {\\n        if (locked) {\\n            require(accessControls.hasAdminRole(msg.sender) \\n                    || accessControls.hasMinterRole(msg.sender)\\n                    || hasLauncherMinterRole(msg.sender),\\n                \\\"FLYBYLauncher: Sender must be minter if locked\\\"\\n            );\\n        }\\n\\n        LauncherFees memory _launcherFees = launcherFees;\\n        address launcherTemplate = launcherTemplates[_templateId];\\n        require(msg.value >= uint256(_launcherFees.minimumFee), \\\"FLYBYLauncher: Failed to transfer minimumFee\\\");\\n        require(launcherTemplate != address(0), \\\"FLYBYLauncher: Launcher template doesn't exist\\\");\\n        uint256 integratorFee = 0;\\n        uint256 flybyFee = msg.value;\\n        if (_integratorFeeAccount != address(0) && _integratorFeeAccount != flybyDiv) {\\n            integratorFee = flybyFee * uint256(_launcherFees.integratorFeePct) / 1000;\\n            flybyFee = flybyFee - integratorFee;\\n        }\\n        launcher = spaceBox.deploy(launcherTemplate, \\\"\\\", false);\\n        launcherInfo[address(launcher)] = Launcher(true, BoringMath.to64(_templateId), BoringMath.to128(launchers.length));\\n        launchers.push(address(launcher));\\n        emit LauncherCreated(msg.sender, address(launcher), launcherTemplates[_templateId]);\\n        if (flybyFee > 0) {\\n            flybyDiv.transfer(flybyFee);\\n        }\\n        if (integratorFee > 0) {\\n            _integratorFeeAccount.transfer(integratorFee);\\n        }\\n    }\\n\\n    function createLauncher(\\n        uint256 _templateId,\\n        address _token,\\n        uint256 _tokenSupply,\\n        address payable _integratorFeeAccount,\\n        bytes calldata _data\\n    )\\n        external payable returns (address newLauncher)\\n    {\\n\\n        newLauncher = deployLauncher(_templateId, _integratorFeeAccount);\\n        if (_tokenSupply > 0) {\\n            _safeTransferFrom(_token, msg.sender, _tokenSupply);\\n            require(IERC20(_token).approve(newLauncher, _tokenSupply), \\\"1\\\");\\n        }\\n        IFlybyLiquidity(newLauncher).initLauncher(_data);\\n\\n        if (_tokenSupply > 0) {\\n            uint256 remainingBalance = IERC20(_token).balanceOf(address(this));\\n            if (remainingBalance > 0) {\\n                _safeTransfer(_token, msg.sender, remainingBalance);\\n            }\\n        }\\n        return newLauncher;\\n    }\\n\\n    function addLiquidityLauncherTemplate(address _template) external {\\n        require(\\n            accessControls.hasAdminRole(msg.sender) ||\\n            accessControls.hasOperatorRole(msg.sender),\\n            \\\"FLYBYLauncher: Sender must be operator\\\"\\n        );\\n        uint256 templateType = IFlybyLiquidity(_template).liquidityTemplate();\\n        require(templateType > 0, \\\"FLYBYLauncher: Incorrect template code \\\");\\n        launcherTemplateId++;\\n\\n        launcherTemplates[launcherTemplateId] = _template;\\n        launcherTemplateToId[_template] = launcherTemplateId;\\n        currentTemplateId[templateType] = launcherTemplateId;\\n        emit LauncherTemplateAdded(_template, launcherTemplateId);\\n    }\\n\\n    function removeLiquidityLauncherTemplate(uint256 _templateId) external {\\n        require(\\n            accessControls.hasAdminRole(msg.sender) ||\\n            accessControls.hasOperatorRole(msg.sender),\\n            \\\"FLYBYLauncher: Sender must be operator\\\"\\n        );\\n        require(launcherTemplates[_templateId] != address(0));\\n        address _template = launcherTemplates[_templateId];\\n        launcherTemplates[_templateId] = address(0);\\n        delete launcherTemplateToId[_template];\\n        emit LauncherTemplateRemoved(_template, _templateId);\\n    }\\n\\n    function getLiquidityLauncherTemplate(uint256 _templateId) external view returns (address) {\\n        return launcherTemplates[_templateId];\\n    }\\n\\n    function getTemplateId(address _launcherTemplate) external view returns (uint256) {\\n        return launcherTemplateToId[_launcherTemplate];\\n    }\\n\\n    function numberOfLiquidityLauncherContracts() external view returns (uint256) {\\n        return launchers.length;\\n    }\\n\\n    function minimumFee() external view returns(uint128) {\\n        return launcherFees.minimumFee;\\n    }\\n\\n    function getLauncherTemplateId(address _launcher) external view returns(uint64) {\\n        return launcherInfo[_launcher].templateId;\\n    }\\n    function getLaunchers() external view returns(address[] memory) {\\n        return launchers;\\n    }\\n}\",\"keccak256\":\"0x18605c9d1bac51a4a92d5e482d1f9ca722a5ab16f4bbd8c20b919582d1a6fb5e\",\"license\":\"MIT\"},\"contracts/Interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\",\"keccak256\":\"0xe4f8cb9ac9cd376f81da2348709e1f44dc0bd2fb44513c5d230702bb1b9e8b36\",\"license\":\"MIT\"},\"contracts/Interfaces/IFlybyLiquidity.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IFlybyLiquidity {\\n    function initLauncher(\\n        bytes calldata data\\n    ) external;\\n\\n    function getMarkets() external view returns(address[] memory);\\n    function liquidityTemplate() external view returns (uint256);\\n}\",\"keccak256\":\"0x07dbf7230d038686a43c63257c72da623e36341ff7024f38742696a882264213\",\"license\":\"MIT\"},\"contracts/Interfaces/ISpaceBoxFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface ISpaceBoxFactory {\\n    function deploy(address masterContract, bytes calldata data, bool useCreate2) external payable returns (address cloneAddress) ;\\n    function masterContractApproved(address, address) external view returns (bool);\\n    function masterContractOf(address) external view returns (address);\\n    function setMasterContractApproval(address user, address masterContract, bool approved, uint8 v, bytes32 r, bytes32 s) external;\\n}\",\"keccak256\":\"0x8d58bda90f470c351bc8999c49947af6ab4ccdb98154f26a975ed679fc354271\",\"license\":\"MIT\"},\"contracts/OpenZeppelin/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/EnumerableSet.sol\\\";\\n\\nabstract contract AccessControl is Context {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    struct RoleData {\\n        EnumerableSet.AddressSet members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping (bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _roles[role].members.contains(account);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\\n        return _roles[role].members.length();\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\\n        return _roles[role].members.at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to grant\\\");\\n\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to revoke\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\\n        _roles[role].adminRole = adminRole;\\n    }\\n\\n    function _grantRole(bytes32 role, address account) private {\\n        if (_roles[role].members.add(account)) {\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) private {\\n        if (_roles[role].members.remove(account)) {\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\",\"keccak256\":\"0x70a4ac51d4857ce35422d73f70cbec83f00f568e1f95a804dcfbbe509de5a82c\",\"license\":\"MIT\"},\"contracts/OpenZeppelin/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return payable(msg.sender);\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0xe0521887b553a6c5bef0acd727645ff69535b60fe7c5947e40f19391307d70d2\",\"license\":\"MIT\"},\"contracts/OpenZeppelin/utils/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping (bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\\n\\n            bytes32 lastvalue = set._values[lastIndex];\\n\\n            // Move the last value to the index where the value to delete is\\n            set._values[toDeleteIndex] = lastvalue;\\n            // Update the index for the moved value\\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        require(set._values.length > index, \\\"EnumerableSet: index out of bounds\\\");\\n        return set._values[index];\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n}\",\"keccak256\":\"0x01c748c0e9f9c425f95c8f0e7eb6625675a4fde41b7f5444bcf6b894b375e72c\",\"license\":\"MIT\"},\"contracts/Utils/BoringMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nlibrary BoringMath {\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require(b == 0 || (c = a * b) / b == a, \\\"BoringMath: Mul Overflow\\\");\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        require(b > 0, \\\"BoringMath: Div zero\\\");\\n        c = a / b;\\n    }\\n\\n    function to128(uint256 a) internal pure returns (uint128 c) {\\n        require(a <= uint128(type(uint128).max), \\\"BoringMath: uint128 Overflow\\\");\\n        c = uint128(a);\\n    }\\n\\n    function to64(uint256 a) internal pure returns (uint64 c) {\\n        require(a <= uint64(type(uint64).max), \\\"BoringMath: uint64 Overflow\\\");\\n        c = uint64(a);\\n    }\\n\\n    function to32(uint256 a) internal pure returns (uint32 c) {\\n        require(a <= uint32(type(uint32).max), \\\"BoringMath: uint32 Overflow\\\");\\n        c = uint32(a);\\n    }\\n\\n    function to16(uint256 a) internal pure returns (uint16 c) {\\n        require(a <= uint16(type(uint16).max), \\\"BoringMath: uint16 Overflow\\\");\\n        c = uint16(a);\\n    }\\n\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint128.\\nlibrary BoringMath128 {\\n    function add(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint64.\\nlibrary BoringMath64 {\\n    function add(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint64 a, uint64 b) internal pure returns (uint64 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath32 {\\n    function add(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint32 a, uint32 b) internal pure returns (uint32 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\\n\\n/// @notice A library for performing overflow-/underflow-safe addition and subtraction on uint32.\\nlibrary BoringMath16 {\\n    function add(uint16 a, uint16 b) internal pure returns (uint16 c) {\\n        require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");\\n    }\\n\\n    function sub(uint16 a, uint16 b) internal pure returns (uint16 c) {\\n        require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");\\n    }\\n}\",\"keccak256\":\"0x89df8679004bb5921d308b1339717c59cdb689cedbb673cdb2510fceece81b87\",\"license\":\"MIT\"},\"contracts/Utils/SafeTransfer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ncontract SafeTransfer {\\n\\n    address private constant ETH_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\\n    function _safeTokenPayment(\\n        address _token,\\n        address payable _to,\\n        uint256 _amount\\n    ) internal {\\n        if (address(_token) == ETH_ADDRESS) {\\n            _safeTransferETH(_to,_amount );\\n        } else {\\n            _safeTransfer(_token, _to, _amount);\\n        }\\n    }\\n    \\n    function _tokenPayment(\\n        address _token,\\n        address payable _to,\\n        uint256 _amount\\n    ) internal {\\n        if (address(_token) == ETH_ADDRESS) {\\n            _to.transfer(_amount);\\n        } else {\\n            _safeTransfer(_token, _to, _amount);\\n        }\\n    }\\n    \\n    function _safeApprove(address token, address to, uint value) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper: APPROVE_FAILED\\\");\\n    }\\n    \\n    function _safeTransfer(\\n        address token,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        (bool success, bytes memory data) =\\n            token.call(\\n                abi.encodeWithSelector(0xa9059cbb, to, amount)\\n            );\\n        require(success && (data.length == 0 || abi.decode(data, (bool))));\\n    }\\n\\n    function _safeTransferFrom(\\n        address token,\\n        address from,\\n        uint256 amount\\n    ) internal virtual {\\n        (bool success, bytes memory data) =\\n            token.call(\\n                abi.encodeWithSelector(0x23b872dd, from, address(this), amount)\\n            );\\n        require(success && (data.length == 0 || abi.decode(data, (bool))));\\n    }\\n\\n    function _safeTransferFrom(address token, address from, address to, uint value) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper: TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function _safeTransferETH(address to, uint value) internal {\\n        (bool success,) = to.call{value:value}(new bytes(0));\\n        require(success, \\\"TransferHelper: ETH_TRANSFER_FAILED\\\");\\n    }\\n\\n}\",\"keccak256\":\"0xe07868766e4bb0ca00fcb4b73c692b0aa2ec5d77991042f9defa64e7b30b3b41\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506121c2806100206000396000f3fe6080604052600436106101b75760003560e01c806386adc322116100ec578063b3053c9b1161008a578063cf30901211610064578063cf309012146104a7578063d335ebda146104bc578063f029deb4146104dc578063fcb62f90146104fc576101b7565b8063b3053c9b14610452578063bc79913b14610467578063cd70f73414610494576101b7565b806396f1266e116100c657806396f1266e146103e85780639e5940cc146103fd5780639e9188ea1461041d578063ad5c46481461043d576101b7565b806386adc322146103865780638c363a0b1461039b57806392787b48146103c8576101b7565b80636c4ceb361161015957806370433d031161013357806370433d031461031a578063748365ef1461033c5780637b7fb153146103515780638637e04114610371576101b7565b80636c4ceb36146102b65780636de88d97146102e55780636eb4a74214610305576101b7565b80632ed4f578116101955780632ed4f578146102295780633eb63aa0146102565780633f1f44b014610283578063632cef90146102a3576101b7565b8063182a7506146101bc5780631a7626e7146101de578063211e28b614610209575b600080fd5b3480156101c857600080fd5b506101dc6101d73660046119e4565b61051f565b005b3480156101ea57600080fd5b506101f36105f9565b6040516102009190612097565b60405180910390f35b34801561021557600080fd5b506101dc6102243660046119ac565b610608565b34801561023557600080fd5b506102496102443660046119e4565b6106b7565b6040516102009190611c40565b34801561026257600080fd5b506102766102713660046119e4565b6106c9565b6040516102009190611b42565b34801561028f57600080fd5b506101dc61029e3660046119e4565b6106f3565b6102766102b1366004611a43565b6107e2565b3480156102c257600080fd5b506102d66102d1366004611923565b6109a4565b60405161020093929190611c15565b3480156102f157600080fd5b506102766103003660046119e4565b6109db565b34801561031157600080fd5b506102766109f6565b34801561032657600080fd5b5061032f610a0a565b6040516102009190611bbd565b34801561034857600080fd5b50610276610a6c565b34801561035d57600080fd5b506101dc61036c366004611923565b610a7b565b34801561037d57600080fd5b50610249610cd1565b34801561039257600080fd5b50610249610cf5565b3480156103a757600080fd5b506103bb6103b6366004611923565b610cfb565b6040516102009190611c0a565b3480156103d457600080fd5b506101dc6103e33660046119e4565b610da4565b3480156103f457600080fd5b50610249610f51565b34801561040957600080fd5b506101dc610418366004611ae8565b610f57565b34801561042957600080fd5b506101dc610438366004611923565b61108b565b34801561044957600080fd5b50610276611162565b34801561045e57600080fd5b50610276611171565b34801561047357600080fd5b50610487610482366004611923565b611180565b60405161020091906120ca565b6102766104a2366004611a14565b6111aa565b3480156104b357600080fd5b506103bb611649565b3480156104c857600080fd5b506102496104d7366004611923565b611652565b3480156104e857600080fd5b506101dc6104f7366004611962565b61166d565b34801561050857600080fd5b50610511611787565b6040516102009291906120ab565b60005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb39061054f903390600401611b42565b60206040518083038186803b15801561056757600080fd5b505afa15801561057b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059f91906119c8565b6105c45760405162461bcd60e51b81526004016105bb90611ef2565b60405180910390fd5b6105cd816117a5565b600980546fffffffffffffffffffffffffffffffff19166001600160801b039290921691909117905550565b6009546001600160801b031690565b60005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb390610638903390600401611b42565b60206040518083038186803b15801561065057600080fd5b505afa158015610664573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068891906119c8565b6106a45760405162461bcd60e51b81526004016105bb90611fc0565b600a805460ff1916911515919091179055565b60076020526000908152604090205481565b600181815481106106d957600080fd5b6000918252602090912001546001600160a01b0316905081565b60005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb390610723903390600401611b42565b60206040518083038186803b15801561073b57600080fd5b505afa15801561074f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077391906119c8565b61078f5760405162461bcd60e51b81526004016105bb90611ef2565b6103e88111156107b15760405162461bcd60e51b81526004016105bb90611d38565b6107ba816117d2565b6009805463ffffffff92909216600160801b0263ffffffff60801b1990921691909117905550565b60006107ee87856111aa565b9050841561089d576108018633876117f8565b60405163095ea7b360e01b81526001600160a01b0387169063095ea7b39061082f9084908990600401611ba4565b602060405180830381600087803b15801561084957600080fd5b505af115801561085d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088191906119c8565b61089d5760405162461bcd60e51b81526004016105bb90611e89565b604051637c17e46760e11b81526001600160a01b0382169063f82fc8ce906108cb9086908690600401611c60565b600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050600085111561099a576040516370a0823160e01b81526000906001600160a01b038816906370a0823190610935903090600401611b42565b60206040518083038186803b15801561094d57600080fd5b505afa158015610961573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098591906119fc565b90508015610998576109988733836118d4565b505b9695505050505050565b60086020526000908152604090205460ff811690610100810467ffffffffffffffff1690600160481b90046001600160801b031683565b6000908152600560205260409020546001600160a01b031690565b600a5461010090046001600160a01b031681565b60606001805480602002602001604051908101604052809291908181526020018280548015610a6257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a44575b5050505050905090565b6000546001600160a01b031681565b60005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb390610aab903390600401611b42565b60206040518083038186803b158015610ac357600080fd5b505afa158015610ad7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afb91906119c8565b80610b815750600054604051637e271f0560e11b81526001600160a01b039091169063fc4e3e0a90610b31903390600401611b42565b60206040518083038186803b158015610b4957600080fd5b505afa158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8191906119c8565b610b9d5760405162461bcd60e51b81526004016105bb90611ef2565b6000816001600160a01b0316638566de4b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bd857600080fd5b505afa158015610bec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1091906119fc565b905060008111610c325760405162461bcd60e51b81526004016105bb90612050565b60028054906000610c4283612135565b909155505060028054600090815260056020908152604080832080546001600160a01b0319166001600160a01b038816908117909155935493835260068252808320849055848352600790915290819020829055517f6c52e34db307a16709b387d61b2de0b4dd4a2ef6fd68b04b5515ef00a533b18f91610cc591859190611ba4565b60405180910390a15050565b7fceb69df9dd42f6c115645ad1e6ac8c9f124a39546dd50de2e04024128b14698081565b60015490565b60008054604051632474521560e21b81526001600160a01b03909116906391d1485490610d4e907fceb69df9dd42f6c115645ad1e6ac8c9f124a39546dd50de2e04024128b146980908690600401611c49565b60206040518083038186803b158015610d6657600080fd5b505afa158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9e91906119c8565b92915050565b60005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb390610dd4903390600401611b42565b60206040518083038186803b158015610dec57600080fd5b505afa158015610e00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2491906119c8565b80610eaa5750600054604051637e271f0560e11b81526001600160a01b039091169063fc4e3e0a90610e5a903390600401611b42565b60206040518083038186803b158015610e7257600080fd5b505afa158015610e86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eaa91906119c8565b610ec65760405162461bcd60e51b81526004016105bb90611ef2565b6000818152600560205260409020546001600160a01b0316610ee757600080fd5b600081815260056020908152604080832080546001600160a01b031981169091556001600160a01b031680845260069092528083209290925590517f9c4b27a4ee95cde6444d871111211ff603accbdff0b4e96e07af9f4eba52be5790610cc59083908590611ba4565b60025481565b60005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb390610f87903390600401611b42565b60206040518083038186803b158015610f9f57600080fd5b505afa158015610fb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd791906119c8565b8061105d5750600054604051637e271f0560e11b81526001600160a01b039091169063fc4e3e0a9061100d903390600401611b42565b60206040518083038186803b15801561102557600080fd5b505afa158015611039573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105d91906119c8565b6110795760405162461bcd60e51b81526004016105bb90611fc0565b60009182526007602052604090912055565b60005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb3906110bb903390600401611b42565b60206040518083038186803b1580156110d357600080fd5b505afa1580156110e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110b91906119c8565b6111275760405162461bcd60e51b81526004016105bb90612003565b6001600160a01b03811661113a57600080fd5b600a80546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6003546001600160a01b031681565b6004546001600160a01b031681565b6001600160a01b0316600090815260086020526040902054610100900467ffffffffffffffff1690565b600a5460009060ff16156112e95760005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb3906111e8903390600401611b42565b60206040518083038186803b15801561120057600080fd5b505afa158015611214573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123891906119c8565b806112be575060005460405163099db01760e01b81526001600160a01b039091169063099db0179061126e903390600401611b42565b60206040518083038186803b15801561128657600080fd5b505afa15801561129a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112be91906119c8565b806112cd57506112cd33610cfb565b6112e95760405162461bcd60e51b81526004016105bb90611ea4565b6040805180820182526009546001600160801b038082168352600160801b90910463ffffffff16602080840191909152600087815260059091529290922054815191926001600160a01b0390911691163410156113585760405162461bcd60e51b81526004016105bb90611c8f565b6001600160a01b03811661137e5760405162461bcd60e51b81526004016105bb90611db7565b6000346001600160a01b038616158015906113ac5750600a546001600160a01b038781166101009092041614155b156113e3576103e8846020015163ffffffff16826113ca91906120ff565b6113d491906120df565b91506113e0828261211e565b90505b60048054604051631f54245b60e01b81526001600160a01b0390911691631f54245b9161141591879160009101611b7a565b602060405180830381600087803b15801561142f57600080fd5b505af1158015611443573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114679190611946565b94506040518060600160405280600115158152602001611486896118f9565b67ffffffffffffffff1681526020016114a36001805490506117a5565b6001600160801b039081169091526001600160a01b038088166000818152600860209081526040808320875181548985015199840151909816600160481b0278ffffffffffffffffffffffffffffffff0000000000000000001967ffffffffffffffff909a166101000268ffffffffffffffff001992151560ff19909a169990991791909116979097179790971695909517909555600180548082019091557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b031916831790558b815260059094529282902054915133927f3ba8b254094e662ed7500a3ad77fd9f4f041f221a7b9f0714e3fdbf324c5d863926115b392911690611b42565b60405180910390a3801561160157600a546040516101009091046001600160a01b0316906108fc8315029083906000818181858888f193505050501580156115ff573d6000803e3d6000fd5b505b811561163f576040516001600160a01b0387169083156108fc029084906000818181858888f1935050505015801561163d573d6000803e3d6000fd5b505b5050505092915050565b600a5460ff1681565b6001600160a01b031660009081526006602052604090205490565b600054600160a01b900460ff161561168457600080fd5b6001600160a01b0382166116aa5760405162461bcd60e51b81526004016105bb90611e3c565b6001600160a01b0383166116d05760405162461bcd60e51b81526004016105bb90611cdb565b6001600160a01b0381166116f65760405162461bcd60e51b81526004016105bb90611f38565b60008054600480546001600160a01b03199081166001600160a01b0386811691909117909255600380548216878416179055600a805460ff19166001179055600160a01b92169086161760ff60a01b19161790556040517f6c60faff639da6beda457ab6e58bec8f9d637c557cd7462a96aa5a9ea7f0f9f39061177a903390611b42565b60405180910390a1505050565b6009546001600160801b03811690600160801b900463ffffffff1682565b60006001600160801b038211156117ce5760405162461bcd60e51b81526004016105bb90611d80565b5090565b600063ffffffff8211156117ce5760405162461bcd60e51b81526004016105bb90611f89565b600080846001600160a01b03166323b872dd85308660405160240161181f93929190611b56565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516118589190611b09565b6000604051808303816000865af19150503d8060008114611895576040519150601f19603f3d011682016040523d82523d6000602084013e61189a565b606091505b50915091508180156118c45750805115806118c45750808060200190518101906118c491906119c8565b6118cd57600080fd5b5050505050565b600080846001600160a01b031663a9059cbb858560405160240161181f929190611ba4565b600067ffffffffffffffff8211156117ce5760405162461bcd60e51b81526004016105bb90611e05565b600060208284031215611934578081fd5b813561193f81612166565b9392505050565b600060208284031215611957578081fd5b815161193f81612166565b600080600060608486031215611976578182fd5b833561198181612166565b9250602084013561199181612166565b915060408401356119a181612166565b809150509250925092565b6000602082840312156119bd578081fd5b813561193f8161217e565b6000602082840312156119d9578081fd5b815161193f8161217e565b6000602082840312156119f5578081fd5b5035919050565b600060208284031215611a0d578081fd5b5051919050565b60008060408385031215611a26578182fd5b823591506020830135611a3881612166565b809150509250929050565b60008060008060008060a08789031215611a5b578182fd5b863595506020870135611a6d81612166565b9450604087013593506060870135611a8481612166565b9250608087013567ffffffffffffffff80821115611aa0578384fd5b818901915089601f830112611ab3578384fd5b813581811115611ac1578485fd5b8a6020828501011115611ad2578485fd5b6020830194508093505050509295509295509295565b60008060408385031215611afa578182fd5b50508035926020909101359150565b60008251815b81811015611b295760208186018101518583015201611b0f565b81811115611b375782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039290921682526060602083018190526000908301521515604082015260800190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015611bfe5783516001600160a01b031683529284019291840191600101611bd9565b50909695505050505050565b901515815260200190565b921515835267ffffffffffffffff9190911660208301526001600160801b0316604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60006020825282602083015282846040840137818301604090810191909152601f909201601f19160101919050565b6020808252602c908201527f464c5942594c61756e636865723a204661696c656420746f207472616e73666560408201526b72206d696e696d756d46656560a01b606082015260800190565b60208082526037908201527f696e6974464c5942594c61756e636865723a20616363657373436f6e74726f6c60408201527f732063616e6e6f742062652073657420746f207a65726f000000000000000000606082015260800190565b60208082526028908201527f464c5942594c61756e636865723a2050657263656e74616765206973206f75746040820152670206f6620313030360c41b606082015260800190565b6020808252601c908201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604082015260600190565b6020808252602e908201527f464c5942594c61756e636865723a204c61756e636865722074656d706c61746560408201526d08191bd95cdb89dd08195e1a5cdd60921b606082015260800190565b6020808252601b908201527f426f72696e674d6174683a2075696e743634204f766572666c6f770000000000604082015260600190565b6020808252602d908201527f696e6974464c5942594c61756e636865723a20574554482063616e6e6f74206260408201526c652073657420746f207a65726f60981b606082015260800190565b6020808252600190820152603160f81b604082015260600190565b6020808252602e908201527f464c5942594c61756e636865723a2053656e646572206d757374206265206d6960408201526d1b9d195c881a59881b1bd8dad95960921b606082015260800190565b60208082526026908201527f464c5942594c61756e636865723a2053656e646572206d757374206265206f7060408201526532b930ba37b960d11b606082015260800190565b60208082526031908201527f696e6974464c5942594c61756e636865723a207370616365426f782063616e6e6040820152706f742062652073657420746f207a65726f60781b606082015260800190565b6020808252601b908201527f426f72696e674d6174683a2075696e743332204f766572666c6f770000000000604082015260600190565b60208082526023908201527f464c5942594c61756e636865723a2053656e646572206d75737420626520616460408201526236b4b760e91b606082015260800190565b6020808252602d908201527f464c5942594c61756e636865722e7365744465763a2053656e646572206d757360408201526c3a1031329037b832b930ba37b960991b606082015260800190565b60208082526027908201527f464c5942594c61756e636865723a20496e636f72726563742074656d706c61746040820152660329031b7b232960cd1b606082015260800190565b6001600160801b0391909116815260200190565b6001600160801b0392909216825263ffffffff16602082015260400190565b67ffffffffffffffff91909116815260200190565b6000826120fa57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561211957612119612150565b500290565b60008282101561213057612130612150565b500390565b600060001982141561214957612149612150565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461217b57600080fd5b50565b801515811461217b57600080fdfea2646970667358221220f210d101a5543111336ec986ff5ea6f52ca51635cf269d3ee37503bf2dfe453064736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106101b75760003560e01c806386adc322116100ec578063b3053c9b1161008a578063cf30901211610064578063cf309012146104a7578063d335ebda146104bc578063f029deb4146104dc578063fcb62f90146104fc576101b7565b8063b3053c9b14610452578063bc79913b14610467578063cd70f73414610494576101b7565b806396f1266e116100c657806396f1266e146103e85780639e5940cc146103fd5780639e9188ea1461041d578063ad5c46481461043d576101b7565b806386adc322146103865780638c363a0b1461039b57806392787b48146103c8576101b7565b80636c4ceb361161015957806370433d031161013357806370433d031461031a578063748365ef1461033c5780637b7fb153146103515780638637e04114610371576101b7565b80636c4ceb36146102b65780636de88d97146102e55780636eb4a74214610305576101b7565b80632ed4f578116101955780632ed4f578146102295780633eb63aa0146102565780633f1f44b014610283578063632cef90146102a3576101b7565b8063182a7506146101bc5780631a7626e7146101de578063211e28b614610209575b600080fd5b3480156101c857600080fd5b506101dc6101d73660046119e4565b61051f565b005b3480156101ea57600080fd5b506101f36105f9565b6040516102009190612097565b60405180910390f35b34801561021557600080fd5b506101dc6102243660046119ac565b610608565b34801561023557600080fd5b506102496102443660046119e4565b6106b7565b6040516102009190611c40565b34801561026257600080fd5b506102766102713660046119e4565b6106c9565b6040516102009190611b42565b34801561028f57600080fd5b506101dc61029e3660046119e4565b6106f3565b6102766102b1366004611a43565b6107e2565b3480156102c257600080fd5b506102d66102d1366004611923565b6109a4565b60405161020093929190611c15565b3480156102f157600080fd5b506102766103003660046119e4565b6109db565b34801561031157600080fd5b506102766109f6565b34801561032657600080fd5b5061032f610a0a565b6040516102009190611bbd565b34801561034857600080fd5b50610276610a6c565b34801561035d57600080fd5b506101dc61036c366004611923565b610a7b565b34801561037d57600080fd5b50610249610cd1565b34801561039257600080fd5b50610249610cf5565b3480156103a757600080fd5b506103bb6103b6366004611923565b610cfb565b6040516102009190611c0a565b3480156103d457600080fd5b506101dc6103e33660046119e4565b610da4565b3480156103f457600080fd5b50610249610f51565b34801561040957600080fd5b506101dc610418366004611ae8565b610f57565b34801561042957600080fd5b506101dc610438366004611923565b61108b565b34801561044957600080fd5b50610276611162565b34801561045e57600080fd5b50610276611171565b34801561047357600080fd5b50610487610482366004611923565b611180565b60405161020091906120ca565b6102766104a2366004611a14565b6111aa565b3480156104b357600080fd5b506103bb611649565b3480156104c857600080fd5b506102496104d7366004611923565b611652565b3480156104e857600080fd5b506101dc6104f7366004611962565b61166d565b34801561050857600080fd5b50610511611787565b6040516102009291906120ab565b60005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb39061054f903390600401611b42565b60206040518083038186803b15801561056757600080fd5b505afa15801561057b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059f91906119c8565b6105c45760405162461bcd60e51b81526004016105bb90611ef2565b60405180910390fd5b6105cd816117a5565b600980546fffffffffffffffffffffffffffffffff19166001600160801b039290921691909117905550565b6009546001600160801b031690565b60005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb390610638903390600401611b42565b60206040518083038186803b15801561065057600080fd5b505afa158015610664573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068891906119c8565b6106a45760405162461bcd60e51b81526004016105bb90611fc0565b600a805460ff1916911515919091179055565b60076020526000908152604090205481565b600181815481106106d957600080fd5b6000918252602090912001546001600160a01b0316905081565b60005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb390610723903390600401611b42565b60206040518083038186803b15801561073b57600080fd5b505afa15801561074f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077391906119c8565b61078f5760405162461bcd60e51b81526004016105bb90611ef2565b6103e88111156107b15760405162461bcd60e51b81526004016105bb90611d38565b6107ba816117d2565b6009805463ffffffff92909216600160801b0263ffffffff60801b1990921691909117905550565b60006107ee87856111aa565b9050841561089d576108018633876117f8565b60405163095ea7b360e01b81526001600160a01b0387169063095ea7b39061082f9084908990600401611ba4565b602060405180830381600087803b15801561084957600080fd5b505af115801561085d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088191906119c8565b61089d5760405162461bcd60e51b81526004016105bb90611e89565b604051637c17e46760e11b81526001600160a01b0382169063f82fc8ce906108cb9086908690600401611c60565b600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050600085111561099a576040516370a0823160e01b81526000906001600160a01b038816906370a0823190610935903090600401611b42565b60206040518083038186803b15801561094d57600080fd5b505afa158015610961573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098591906119fc565b90508015610998576109988733836118d4565b505b9695505050505050565b60086020526000908152604090205460ff811690610100810467ffffffffffffffff1690600160481b90046001600160801b031683565b6000908152600560205260409020546001600160a01b031690565b600a5461010090046001600160a01b031681565b60606001805480602002602001604051908101604052809291908181526020018280548015610a6257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a44575b5050505050905090565b6000546001600160a01b031681565b60005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb390610aab903390600401611b42565b60206040518083038186803b158015610ac357600080fd5b505afa158015610ad7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afb91906119c8565b80610b815750600054604051637e271f0560e11b81526001600160a01b039091169063fc4e3e0a90610b31903390600401611b42565b60206040518083038186803b158015610b4957600080fd5b505afa158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8191906119c8565b610b9d5760405162461bcd60e51b81526004016105bb90611ef2565b6000816001600160a01b0316638566de4b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bd857600080fd5b505afa158015610bec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1091906119fc565b905060008111610c325760405162461bcd60e51b81526004016105bb90612050565b60028054906000610c4283612135565b909155505060028054600090815260056020908152604080832080546001600160a01b0319166001600160a01b038816908117909155935493835260068252808320849055848352600790915290819020829055517f6c52e34db307a16709b387d61b2de0b4dd4a2ef6fd68b04b5515ef00a533b18f91610cc591859190611ba4565b60405180910390a15050565b7fceb69df9dd42f6c115645ad1e6ac8c9f124a39546dd50de2e04024128b14698081565b60015490565b60008054604051632474521560e21b81526001600160a01b03909116906391d1485490610d4e907fceb69df9dd42f6c115645ad1e6ac8c9f124a39546dd50de2e04024128b146980908690600401611c49565b60206040518083038186803b158015610d6657600080fd5b505afa158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9e91906119c8565b92915050565b60005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb390610dd4903390600401611b42565b60206040518083038186803b158015610dec57600080fd5b505afa158015610e00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2491906119c8565b80610eaa5750600054604051637e271f0560e11b81526001600160a01b039091169063fc4e3e0a90610e5a903390600401611b42565b60206040518083038186803b158015610e7257600080fd5b505afa158015610e86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eaa91906119c8565b610ec65760405162461bcd60e51b81526004016105bb90611ef2565b6000818152600560205260409020546001600160a01b0316610ee757600080fd5b600081815260056020908152604080832080546001600160a01b031981169091556001600160a01b031680845260069092528083209290925590517f9c4b27a4ee95cde6444d871111211ff603accbdff0b4e96e07af9f4eba52be5790610cc59083908590611ba4565b60025481565b60005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb390610f87903390600401611b42565b60206040518083038186803b158015610f9f57600080fd5b505afa158015610fb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd791906119c8565b8061105d5750600054604051637e271f0560e11b81526001600160a01b039091169063fc4e3e0a9061100d903390600401611b42565b60206040518083038186803b15801561102557600080fd5b505afa158015611039573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105d91906119c8565b6110795760405162461bcd60e51b81526004016105bb90611fc0565b60009182526007602052604090912055565b60005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb3906110bb903390600401611b42565b60206040518083038186803b1580156110d357600080fd5b505afa1580156110e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110b91906119c8565b6111275760405162461bcd60e51b81526004016105bb90612003565b6001600160a01b03811661113a57600080fd5b600a80546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6003546001600160a01b031681565b6004546001600160a01b031681565b6001600160a01b0316600090815260086020526040902054610100900467ffffffffffffffff1690565b600a5460009060ff16156112e95760005460405163c395fcb360e01b81526001600160a01b039091169063c395fcb3906111e8903390600401611b42565b60206040518083038186803b15801561120057600080fd5b505afa158015611214573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123891906119c8565b806112be575060005460405163099db01760e01b81526001600160a01b039091169063099db0179061126e903390600401611b42565b60206040518083038186803b15801561128657600080fd5b505afa15801561129a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112be91906119c8565b806112cd57506112cd33610cfb565b6112e95760405162461bcd60e51b81526004016105bb90611ea4565b6040805180820182526009546001600160801b038082168352600160801b90910463ffffffff16602080840191909152600087815260059091529290922054815191926001600160a01b0390911691163410156113585760405162461bcd60e51b81526004016105bb90611c8f565b6001600160a01b03811661137e5760405162461bcd60e51b81526004016105bb90611db7565b6000346001600160a01b038616158015906113ac5750600a546001600160a01b038781166101009092041614155b156113e3576103e8846020015163ffffffff16826113ca91906120ff565b6113d491906120df565b91506113e0828261211e565b90505b60048054604051631f54245b60e01b81526001600160a01b0390911691631f54245b9161141591879160009101611b7a565b602060405180830381600087803b15801561142f57600080fd5b505af1158015611443573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114679190611946565b94506040518060600160405280600115158152602001611486896118f9565b67ffffffffffffffff1681526020016114a36001805490506117a5565b6001600160801b039081169091526001600160a01b038088166000818152600860209081526040808320875181548985015199840151909816600160481b0278ffffffffffffffffffffffffffffffff0000000000000000001967ffffffffffffffff909a166101000268ffffffffffffffff001992151560ff19909a169990991791909116979097179790971695909517909555600180548082019091557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b031916831790558b815260059094529282902054915133927f3ba8b254094e662ed7500a3ad77fd9f4f041f221a7b9f0714e3fdbf324c5d863926115b392911690611b42565b60405180910390a3801561160157600a546040516101009091046001600160a01b0316906108fc8315029083906000818181858888f193505050501580156115ff573d6000803e3d6000fd5b505b811561163f576040516001600160a01b0387169083156108fc029084906000818181858888f1935050505015801561163d573d6000803e3d6000fd5b505b5050505092915050565b600a5460ff1681565b6001600160a01b031660009081526006602052604090205490565b600054600160a01b900460ff161561168457600080fd5b6001600160a01b0382166116aa5760405162461bcd60e51b81526004016105bb90611e3c565b6001600160a01b0383166116d05760405162461bcd60e51b81526004016105bb90611cdb565b6001600160a01b0381166116f65760405162461bcd60e51b81526004016105bb90611f38565b60008054600480546001600160a01b03199081166001600160a01b0386811691909117909255600380548216878416179055600a805460ff19166001179055600160a01b92169086161760ff60a01b19161790556040517f6c60faff639da6beda457ab6e58bec8f9d637c557cd7462a96aa5a9ea7f0f9f39061177a903390611b42565b60405180910390a1505050565b6009546001600160801b03811690600160801b900463ffffffff1682565b60006001600160801b038211156117ce5760405162461bcd60e51b81526004016105bb90611d80565b5090565b600063ffffffff8211156117ce5760405162461bcd60e51b81526004016105bb90611f89565b600080846001600160a01b03166323b872dd85308660405160240161181f93929190611b56565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516118589190611b09565b6000604051808303816000865af19150503d8060008114611895576040519150601f19603f3d011682016040523d82523d6000602084013e61189a565b606091505b50915091508180156118c45750805115806118c45750808060200190518101906118c491906119c8565b6118cd57600080fd5b5050505050565b600080846001600160a01b031663a9059cbb858560405160240161181f929190611ba4565b600067ffffffffffffffff8211156117ce5760405162461bcd60e51b81526004016105bb90611e05565b600060208284031215611934578081fd5b813561193f81612166565b9392505050565b600060208284031215611957578081fd5b815161193f81612166565b600080600060608486031215611976578182fd5b833561198181612166565b9250602084013561199181612166565b915060408401356119a181612166565b809150509250925092565b6000602082840312156119bd578081fd5b813561193f8161217e565b6000602082840312156119d9578081fd5b815161193f8161217e565b6000602082840312156119f5578081fd5b5035919050565b600060208284031215611a0d578081fd5b5051919050565b60008060408385031215611a26578182fd5b823591506020830135611a3881612166565b809150509250929050565b60008060008060008060a08789031215611a5b578182fd5b863595506020870135611a6d81612166565b9450604087013593506060870135611a8481612166565b9250608087013567ffffffffffffffff80821115611aa0578384fd5b818901915089601f830112611ab3578384fd5b813581811115611ac1578485fd5b8a6020828501011115611ad2578485fd5b6020830194508093505050509295509295509295565b60008060408385031215611afa578182fd5b50508035926020909101359150565b60008251815b81811015611b295760208186018101518583015201611b0f565b81811115611b375782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039290921682526060602083018190526000908301521515604082015260800190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015611bfe5783516001600160a01b031683529284019291840191600101611bd9565b50909695505050505050565b901515815260200190565b921515835267ffffffffffffffff9190911660208301526001600160801b0316604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60006020825282602083015282846040840137818301604090810191909152601f909201601f19160101919050565b6020808252602c908201527f464c5942594c61756e636865723a204661696c656420746f207472616e73666560408201526b72206d696e696d756d46656560a01b606082015260800190565b60208082526037908201527f696e6974464c5942594c61756e636865723a20616363657373436f6e74726f6c60408201527f732063616e6e6f742062652073657420746f207a65726f000000000000000000606082015260800190565b60208082526028908201527f464c5942594c61756e636865723a2050657263656e74616765206973206f75746040820152670206f6620313030360c41b606082015260800190565b6020808252601c908201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604082015260600190565b6020808252602e908201527f464c5942594c61756e636865723a204c61756e636865722074656d706c61746560408201526d08191bd95cdb89dd08195e1a5cdd60921b606082015260800190565b6020808252601b908201527f426f72696e674d6174683a2075696e743634204f766572666c6f770000000000604082015260600190565b6020808252602d908201527f696e6974464c5942594c61756e636865723a20574554482063616e6e6f74206260408201526c652073657420746f207a65726f60981b606082015260800190565b6020808252600190820152603160f81b604082015260600190565b6020808252602e908201527f464c5942594c61756e636865723a2053656e646572206d757374206265206d6960408201526d1b9d195c881a59881b1bd8dad95960921b606082015260800190565b60208082526026908201527f464c5942594c61756e636865723a2053656e646572206d757374206265206f7060408201526532b930ba37b960d11b606082015260800190565b60208082526031908201527f696e6974464c5942594c61756e636865723a207370616365426f782063616e6e6040820152706f742062652073657420746f207a65726f60781b606082015260800190565b6020808252601b908201527f426f72696e674d6174683a2075696e743332204f766572666c6f770000000000604082015260600190565b60208082526023908201527f464c5942594c61756e636865723a2053656e646572206d75737420626520616460408201526236b4b760e91b606082015260800190565b6020808252602d908201527f464c5942594c61756e636865722e7365744465763a2053656e646572206d757360408201526c3a1031329037b832b930ba37b960991b606082015260800190565b60208082526027908201527f464c5942594c61756e636865723a20496e636f72726563742074656d706c61746040820152660329031b7b232960cd1b606082015260800190565b6001600160801b0391909116815260200190565b6001600160801b0392909216825263ffffffff16602082015260400190565b67ffffffffffffffff91909116815260200190565b6000826120fa57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561211957612119612150565b500290565b60008282101561213057612130612150565b500390565b600060001982141561214957612149612150565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461217b57600080fd5b50565b801515811461217b57600080fdfea2646970667358221220f210d101a5543111336ec986ff5ea6f52ca51635cf269d3ee37503bf2dfe453064736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7045,
        "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
        "label": "accessControls",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(FLYBYAccessControls)208"
      },
      {
        "astId": 7052,
        "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
        "label": "initialised",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 7062,
        "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
        "label": "launchers",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7064,
        "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
        "label": "launcherTemplateId",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 7066,
        "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
        "label": "WETH",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 7069,
        "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
        "label": "spaceBox",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(ISpaceBoxFactory)11373"
      },
      {
        "astId": 7073,
        "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
        "label": "launcherTemplates",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 7077,
        "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
        "label": "launcherTemplateToId",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7081,
        "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
        "label": "currentTemplateId",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 7086,
        "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
        "label": "launcherInfo",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(Launcher)7059_storage)"
      },
      {
        "astId": 7094,
        "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
        "label": "launcherFees",
        "offset": 0,
        "slot": "9",
        "type": "t_struct(LauncherFees)7091_storage"
      },
      {
        "astId": 7096,
        "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
        "label": "locked",
        "offset": 0,
        "slot": "10",
        "type": "t_bool"
      },
      {
        "astId": 7098,
        "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
        "label": "flybyDiv",
        "offset": 1,
        "slot": "10",
        "type": "t_address_payable"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(FLYBYAccessControls)208": {
        "encoding": "inplace",
        "label": "contract FLYBYAccessControls",
        "numberOfBytes": "20"
      },
      "t_contract(ISpaceBoxFactory)11373": {
        "encoding": "inplace",
        "label": "contract ISpaceBoxFactory",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Launcher)7059_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FLYBYLauncher.Launcher)",
        "numberOfBytes": "32",
        "value": "t_struct(Launcher)7059_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Launcher)7059_storage": {
        "encoding": "inplace",
        "label": "struct FLYBYLauncher.Launcher",
        "members": [
          {
            "astId": 7054,
            "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
            "label": "exists",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 7056,
            "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
            "label": "templateId",
            "offset": 1,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 7058,
            "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
            "label": "index",
            "offset": 9,
            "slot": "0",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(LauncherFees)7091_storage": {
        "encoding": "inplace",
        "label": "struct FLYBYLauncher.LauncherFees",
        "members": [
          {
            "astId": 7088,
            "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
            "label": "minimumFee",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 7090,
            "contract": "contracts/FLYBYLauncher.sol:FLYBYLauncher",
            "label": "integratorFeePct",
            "offset": 16,
            "slot": "0",
            "type": "t_uint32"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}